Search.setIndex({"docnames": ["explanations/context_manager", "explanations/index", "explanations/pipelines", "how-to/appending_to_xarray", "how-to/building_xarray_datasets", "how-to/create_pipelineop", "how-to/index", "index", "reference/api/agent/AcquisitionFunction", "reference/api/agent/AgentClient", "reference/api/agent/DowShampoo_SampleDriver", "reference/api/agent/EI_AcquisitionFunction", "reference/api/agent/GaussianProcess", "reference/api/agent/HscedGaussianProcess", "reference/api/agent/Metric", "reference/api/agent/Multimodal_AL_SampleDriver", "reference/api/agent/Multimodal_AgentDriver", "reference/api/agent/PhaseLabeler", "reference/api/agent/PhaseMap", "reference/api/agent/PhaseMap_pandas", "reference/api/agent/SANS_AL_SampleDriver", "reference/api/agent/SAS_AL_SampleDriver", "reference/api/agent/SAS_AgentDriver", "reference/api/agent/SAS_Grid_AL_SampleDriver", "reference/api/agent/SAXS_AL_SampleDriver", "reference/api/agent/UCB_AcquisitionFunction", "reference/api/agent/WatchDog", "reference/api/agent/index", "reference/api/agent/reduce_usaxs", "reference/api/agent/util", "reference/api/agent/vSAS_NoDeck_AL_SampleDriver", "reference/api/agent/xarray_extensions", "reference/api/double_agent/AcquisitionFunction", "reference/api/double_agent/AgentClient", "reference/api/double_agent/AgentDriver", "reference/api/double_agent/AutoSAS", "reference/api/double_agent/AutoSAS_Driver", "reference/api/double_agent/Boundary", "reference/api/double_agent/Extrapolator", "reference/api/double_agent/Generator", "reference/api/double_agent/MaskGrid", "reference/api/double_agent/PairMetric", "reference/api/double_agent/PhaseLabeler", "reference/api/double_agent/Pipeline", "reference/api/double_agent/PipelineContext", "reference/api/double_agent/PipelineOp", "reference/api/double_agent/Preprocessor", "reference/api/double_agent/TensorFlowExtrapolator", "reference/api/double_agent/index", "reference/api/double_agent/plotting", "reference/api/double_agent/util", "reference/api/double_agent/xarray_extensions", "reference/index", "tutorials/building_pipelines", "tutorials/getting_started", "tutorials/index", "tutorials/installation"], "filenames": ["explanations/context_manager.rst", "explanations/index.rst", "explanations/pipelines.rst", "how-to/appending_to_xarray.rst", "how-to/building_xarray_datasets.ipynb", "how-to/create_pipelineop.ipynb", "how-to/index.rst", "index.rst", "reference/api/agent/AcquisitionFunction.rst", "reference/api/agent/AgentClient.rst", "reference/api/agent/DowShampoo_SampleDriver.rst", "reference/api/agent/EI_AcquisitionFunction.rst", "reference/api/agent/GaussianProcess.rst", "reference/api/agent/HscedGaussianProcess.rst", "reference/api/agent/Metric.rst", "reference/api/agent/Multimodal_AL_SampleDriver.rst", "reference/api/agent/Multimodal_AgentDriver.rst", "reference/api/agent/PhaseLabeler.rst", "reference/api/agent/PhaseMap.rst", "reference/api/agent/PhaseMap_pandas.rst", "reference/api/agent/SANS_AL_SampleDriver.rst", "reference/api/agent/SAS_AL_SampleDriver.rst", "reference/api/agent/SAS_AgentDriver.rst", "reference/api/agent/SAS_Grid_AL_SampleDriver.rst", "reference/api/agent/SAXS_AL_SampleDriver.rst", "reference/api/agent/UCB_AcquisitionFunction.rst", "reference/api/agent/WatchDog.rst", "reference/api/agent/index.rst", "reference/api/agent/reduce_usaxs.rst", "reference/api/agent/util.rst", "reference/api/agent/vSAS_NoDeck_AL_SampleDriver.rst", "reference/api/agent/xarray_extensions.rst", "reference/api/double_agent/AcquisitionFunction.rst", "reference/api/double_agent/AgentClient.rst", "reference/api/double_agent/AgentDriver.rst", "reference/api/double_agent/AutoSAS.rst", "reference/api/double_agent/AutoSAS_Driver.rst", "reference/api/double_agent/Boundary.rst", "reference/api/double_agent/Extrapolator.rst", "reference/api/double_agent/Generator.rst", "reference/api/double_agent/MaskGrid.rst", "reference/api/double_agent/PairMetric.rst", "reference/api/double_agent/PhaseLabeler.rst", "reference/api/double_agent/Pipeline.rst", "reference/api/double_agent/PipelineContext.rst", "reference/api/double_agent/PipelineOp.rst", "reference/api/double_agent/Preprocessor.rst", "reference/api/double_agent/TensorFlowExtrapolator.rst", "reference/api/double_agent/index.rst", "reference/api/double_agent/plotting.rst", "reference/api/double_agent/util.rst", "reference/api/double_agent/xarray_extensions.rst", "reference/index.rst", "tutorials/building_pipelines.ipynb", "tutorials/getting_started.rst", "tutorials/index.rst", "tutorials/installation.rst"], "titles": ["Pipeline Context Manager", "Explanations", "Pipelines", "Appending Data to xarray.Datasets", "Build an xarray.Dataset from Scratch", "Creating a New Pipeline Operation", "How-To Guides", "AFL-agent", "AFL.agent.AcquisitionFunction module", "AFL.agent.AgentClient module", "AFL.agent.DowShampoo_SampleDriver module", "AFL.agent.EI_AcquisitionFunction module", "AFL.agent.GaussianProcess module", "AFL.agent.HscedGaussianProcess module", "AFL.agent.Metric module", "AFL.agent.Multimodal_AL_SampleDriver module", "AFL.agent.Multimodal_AgentDriver module", "AFL.agent.PhaseLabeler module", "AFL.agent.PhaseMap module", "AFL.agent.PhaseMap_pandas module", "AFL.agent.SANS_AL_SampleDriver module", "AFL.agent.SAS_AL_SampleDriver module", "AFL.agent.SAS_AgentDriver module", "AFL.agent.SAS_Grid_AL_SampleDriver module", "AFL.agent.SAXS_AL_SampleDriver module", "AFL.agent.UCB_AcquisitionFunction module", "AFL.agent.WatchDog module", "AFL.agent package", "AFL.agent.reduce_usaxs module", "AFL.agent.util module", "AFL.agent.vSAS_NoDeck_AL_SampleDriver module", "AFL.agent.xarray_extensions module", "AFL.double_agent.AcquisitionFunction module", "AFL.double_agent.AgentClient module", "AFL.double_agent.AgentDriver module", "AFL.double_agent.AutoSAS module", "AFL.double_agent.AutoSAS_Driver module", "AFL.double_agent.Boundary module", "AFL.double_agent.Extrapolator module", "AFL.double_agent.Generator module", "AFL.double_agent.MaskGrid module", "AFL.double_agent.PairMetric module", "AFL.double_agent.PhaseLabeler module", "AFL.double_agent.Pipeline module", "AFL.double_agent.PipelineContext module", "AFL.double_agent.PipelineOp module", "AFL.double_agent.Preprocessor module", "AFL.double_agent.TensorFlowExtrapolator module", "AFL.double_agent Package", "AFL.double_agent.plotting module", "AFL.double_agent.util module", "AFL.double_agent.xarray_extensions module", "Reference", "Building Pipelines", "Quick Start Example", "Tutorials", "Setup"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 7, 11, 25, 32, 38, 39, 41, 43, 46, 50, 53, 54, 56], "explan": [0, 7, 54], "i": [0, 1, 2, 3, 4, 7, 27, 28, 41, 43, 46, 50, 52, 53, 54, 56], "work": [0, 2, 3, 5, 11, 25, 53, 56], "progress": [0, 2, 3], "stub": [0, 3, 39, 46], "tho": 1, "goal": 1, "section": [1, 2, 7], "deepen": 1, "broaden": 1, "your": [1, 5, 7, 53, 54, 56], "understand": 1, "afl": [1, 4, 5, 52, 53, 54, 55, 56], "agent": [1, 4, 5, 43, 53, 54, 55, 56], "codebas": 1, "project": [1, 19], "underli": [1, 7, 53], "concept": [1, 4, 7, 54], "pipelin": [1, 4, 6, 7, 44, 46, 52, 54, 55], "context": [1, 7, 44, 53, 54], "manag": [1, 7, 44, 53, 54], "how": [3, 4, 5, 7, 44, 53], "In": [4, 5, 50, 53], "To": [4, 7, 53, 56], "we": [4, 5, 50, 53, 54], "ll": [4, 5, 53, 56], "go": [4, 53], "through": [4, 5, 7, 53], "process": [4, 5, 7, 38, 52, 53], "up": 4, "could": 4, "us": [4, 7, 27, 32, 38, 39, 43, 46, 50, 52, 53, 54, 55, 56], "input": [4, 32, 39, 43, 46, 50], "calcul": [4, 5, 7, 14, 28, 32, 37, 38, 39, 40, 41, 42, 43, 45, 46, 54], "gener": [4, 43, 46, 48, 52, 53, 54, 56], "random": [4, 8, 27], "fake": 4, "along": [4, 28, 46, 53], "The": [4, 5, 27, 43, 46, 50, 52, 53, 56], "notebook": [4, 56], "basi": [4, 19, 29, 31, 39, 51], "tutori": [4, 5, 7, 53, 54], "begin": [4, 53], "let": [4, 5, 53, 54], "": [4, 5, 28, 41, 50, 53, 54], "import": [4, 5, 43, 53, 54, 56], "necessari": [4, 54, 56], "librari": [4, 7], "document": [4, 7, 53], "make": [4, 50, 53, 56], "empti": 4, "py": 4, "class": [4, 5, 8, 11, 14, 17, 19, 25, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51], "1": [4, 5, 7, 8, 11, 19, 25, 28, 29, 31, 32, 39, 41, 46, 50, 51, 54], "numpi": [4, 28, 46, 53, 54], "np": [4, 53, 54], "xr": [4, 5, 43, 53, 54], "matplotlib": [4, 53], "pyplot": [4, 53], "plt": [4, 5, 53], "d": [4, 5, 28, 31, 51, 53, 54], "lt": [4, 5, 53], "gt": [4, 5, 53], "size": [4, 5, 19, 53], "0b": 4, "dimens": [4, 5, 40, 46, 53], "variabl": [4, 5, 43, 44, 46, 53], "datasetdimens": [4, 5, 53], "coordin": [4, 5, 29, 31, 46, 51, 53], "0": [4, 5, 8, 11, 19, 25, 29, 31, 32, 37, 39, 41, 46, 51, 53, 54], "index": [4, 5, 53], "attribut": [4, 5, 43, 53], "next": [4, 32], "do": [4, 50, 53], "virtual": [4, 56], "2": [4, 5, 14, 31, 37, 46, 50, 51, 54], "dimension": [4, 53], "space": [4, 46], "compon": [4, 5, 19, 29, 31, 32, 37, 39, 46, 49, 51, 52, 53, 54], "A": [4, 5, 28, 31, 46, 50, 51, 53, 54], "b": [4, 5, 53, 54], "placehold": 4, "you": [4, 5, 7, 53, 54, 56], "imagin": 4, "ar": [4, 5, 7, 28, 32, 40, 41, 43, 44, 46, 50, 53], "concentr": 4, "two": [4, 5, 11, 25, 53], "differ": [4, 5, 53, 56], "preserv": 4, "liquid": 4, "mixtur": 4, "num_measur": 4, "100": [4, 5, 19, 53, 54], "uniform": 4, "10": [4, 5, 31, 51, 53, 54], "25": [4, 5, 53, 54], "arrai": [4, 5, 14, 28, 53], "t": [4, 28, 43, 50, 53], "6": [4, 5, 53], "04158474e": 4, "01": [4, 5, 53], "35801148e": 4, "4": [4, 5, 54], "57246963e": 4, "00": [4, 5, 53], "41058325e": 4, "5": [4, 5, 8, 46], "16633020e": 4, "8": [4, 5, 43, 53], "35310619e": 4, "01856491e": 4, "27628776e": 4, "9": [4, 5, 53], "63679075e": 4, "53740512e": 4, "57838855e": 4, "10618188e": 4, "79354202e": 4, "21223774e": 4, "7": [4, 5, 53], "38336981e": 4, "24474698e": 4, "80667944e": 4, "49342593e": 4, "97651646e": 4, "23791573e": 4, "66669926e": 4, "45513951e": 4, "49494258e": 4, "60275926e": 4, "3": [4, 5, 19, 29, 39, 46, 56], "30764936e": 4, "72256628e": 4, "84420983e": 4, "01478658e": 4, "78984439e": 4, "82417987e": 4, "37105710e": 4, "85955699e": 4, "06256220e": 4, "57074209e": 4, "71348053e": 4, "14228382e": 4, "26136294e": 4, "93178405e": 4, "56380223e": 4, "13813571e": 4, "48179044e": 4, "27665900e": 4, "62591885e": 4, "02": 4, "08618618e": 4, "01933190e": 4, "93937710e": 4, "23581433e": 4, "92020429e": 4, "06169064e": 4, "00922439e": 4, "76745565e": 4, "74424441e": 4, "69941963e": 4, "38715258e": 4, "45849612e": 4, "81296940e": 4, "23150057e": 4, "16285523e": 4, "73405515e": 4, "66925986e": 4, "29593901e": 4, "11904289e": 4, "32294395e": 4, "35069675e": 4, "67041578e": 4, "87084829e": 4, "01673327e": 4, "91170556e": 4, "88486016e": 4, "38475610e": 4, "90768018e": 4, "90784309e": 4, "34636455e": 4, "70857070e": 4, "93176028e": 4, "54514177e": 4, "06898291e": 4, "97679332e": 4, "30895753e": 4, "00117984e": 4, "17915526e": 4, "68191416e": 4, "04293005e": 4, "36824664e": 4, "52390282e": 4, "62003060e": 4, "91739168e": 4, "32637572e": 4, "14695523e": 4, "00739063e": 4, "59986339e": 4, "41747766e": 4, "14298570e": 4, "62377759e": 4, "59017367e": 4, "20198603e": 4, "15178082e": 4, "40836782e": 4, "69025658e": 4, "68534812e": 4, "45755513e": 4, "78793307e": 4, "62959432e": 4, "99740386e": 4, "63774146e": 4, "14413680e": 4, "36708057e": 4, "91632831e": 4, "06116938e": 4, "03421865e": 4, "80613568e": 4, "09271690e": 4, "44576683e": 4, "30607416e": 4, "33091413e": 4, "90315004e": 4, "75085441e": 4, "49253463e": 4, "35291190e": 4, "20235281e": 4, "11009680e": 4, "21470189e": 4, "54352966e": 4, "40099431e": 4, "91062160e": 4, "98233403e": 4, "05993842e": 4, "65691029e": 4, "25300521e": 4, "24625248e": 4, "43087349e": 4, "12321152e": 4, "99951494e": 4, "57599940e": 4, "43975508e": 4, "65137542e": 4, "37560648e": 4, "04695527e": 4, "60179815e": 4, "48263066e": 4, "63168795e": 4, "57741046e": 4, "64825847e": 4, "26828611e": 4, "56644252e": 4, "16047445e": 4, "34640720e": 4, "58203599e": 4, "96328499e": 4, "19437886e": 4, "56308110e": 4, "14651829e": 4, "84677443e": 4, "33664041e": 4, "42840147e": 4, "50901728e": 4, "67480131e": 4, "39605611e": 4, "70541454e": 4, "88855520e": 4, "43571987e": 4, "75239462e": 4, "02610022e": 4, "07260205e": 4, "49742223e": 4, "12034560e": 4, "63395482e": 4, "40436835e": 4, "41925461e": 4, "15444565e": 4, "40244021e": 4, "56887132e": 4, "28192203e": 4, "30920603e": 4, "65338138e": 4, "13721358e": 4, "07763983e": 4, "30566122e": 4, "13921048e": 4, "35292809e": 4, "08953654e": 4, "84842154e": 4, "34593591e": 4, "09624876e": 4, "95592571e": 4, "44932646e": 4, "56416487e": 4, "31969516e": 4, "79687379e": 4, "81736376e": 4, "72434043e": 4, "34454780e": 4, "59916293e": 4, "78625741e": 4, "41587174e": 4, "19008647e": 4, "66255821e": 4, "85465878e": 4, "64056932e": 4, "75914401e": 4, "now": [4, 5, 53, 54], "add": [4, 5, 45, 53, 54], "inform": [4, 32, 53], "note": [4, 5, 46, 53], "need": [4, 5, 11, 25, 43, 56], "onli": [4, 11, 25, 41, 53], "specifi": [4, 11, 46, 53], "name": [4, 5, 14, 31, 32, 37, 38, 39, 40, 41, 42, 43, 45, 46, 51, 53, 56], "also": [4, 53], "sampl": [4, 5, 17, 31, 32, 38, 41, 42, 51, 54], "2kb": [4, 5, 53], "u1": [4, 5, 53], "8b": [4, 5, 53], "x27": [4, 5, 53], "without": [4, 5, 32, 50, 53, 56], "float64": [4, 5, 53], "6042": 4, "13": [4, 5, 53], "58": 4, "641": 4, "759xarrai": 4, "100compon": [4, 5, 53], "2coordin": 4, "dtype": [4, 5, 53], "float640": [4, 5, 53], "572": 4, "759arrai": 4, "componentpandasindexpandasindex": [4, 5, 53], "object": [4, 5, 8, 11, 14, 17, 19, 25, 31, 38, 44, 46, 50, 51, 53], "okai": [4, 53], "order": [4, 46, 53], "phase": [4, 7, 53, 54], "boundari": [4, 7, 48, 52, 53], "creat": [4, 6, 7, 46, 53, 54, 56], "label": [4, 17, 19, 31, 38, 49, 51, 54], "draw": [4, 43, 53], "arbitrari": 4, "line": [4, 5, 19, 53], "abov": 4, "below": [4, 46, 53], "astyp": 4, "int": [4, 32, 39, 46], "ground_truth_label": [4, 5, 53], "36": [4, 5, 53], "104": [4, 5, 53], "int64": [4, 5, 53], "800b": [4, 5, 53], "1xarrai": [4, 53], "float645": [4, 5, 53], "938": [4, 5, 53], "478": [4, 5, 53], "104arrai": [4, 5, 53], "69995762": [4, 5, 53], "36017531": [4, 5, 53], "93782024": [4, 5, 53], "16": [4, 5, 53], "17384162": [4, 5, 53], "77901101": [4, 5, 53], "19": [4, 5, 53], "69531938": [4, 5, 53], "82535598": [4, 5, 53], "16351158": [4, 5, 53], "60370118": [4, 5, 53], "23": [4, 5, 53], "73217969": [4, 5, 53], "90994751": [4, 5, 53], "14": [4, 5, 53], "71385158": [4, 5, 53], "17465804": [4, 5, 53], "75450299": [4, 5, 53], "30875652": [4, 5, 53], "86311327": [4, 5, 53], "78926787": [4, 5, 53], "04909185": [4, 5, 53], "0368155": [4, 5, 53], "17": [4, 5, 53], "80655234": [4, 5, 53], "18529693": [4, 5, 53], "40857492": [4, 5, 53], "65214034": [4, 5, 53], "7760677": [4, 5, 53], "73176727": [4, 5, 53], "18850408": [4, 5, 53], "22314222": [4, 5, 53], "21778243": [4, 5, 53], "33560023": [4, 5, 53], "22074632": [4, 5, 53], "10711809": [4, 5, 53], "22": [4, 5, 53], "36120136": [4, 5, 53], "10263293": [4, 5, 53], "17733076": [4, 5, 53], "94096049": [4, 5, 53], "98300725": [4, 5, 53], "58238609": [4, 5, 53], "15": [4, 5, 53], "27804755": [4, 5, 53], "78026574": [4, 5, 53], "20": [4, 5, 53], "5150357": [4, 5, 53], "0825235": [4, 5, 53], "36441059": [4, 5, 53], "50770583": [4, 5, 53], "52786027": [4, 5, 53], "46324027": [4, 5, 53], "75171924": [4, 5, 53], "52523439": [4, 5, 53], "71058719": [4, 5, 53], "23218578": [4, 5, 53], "72269505": [4, 5, 53], "7555881": [4, 5, 53], "24855529": [4, 5, 53], "67539066": [4, 5, 53], "6795503": [4, 5, 53], "8397554": [4, 5, 53], "64947346": [4, 5, 53], "22478436": [4, 5, 53], "18": [4, 5, 53], "35236821": [4, 5, 53], "83077635": [4, 5, 53], "65541542": [4, 5, 53], "98441453": [4, 5, 53], "03322162": [4, 5, 53], "11755953": [4, 5, 53], "11": [4, 5, 53, 56], "77699299": [4, 5, 53], "90192605": [4, 5, 53], "94690136": [4, 5, 53], "42679234": [4, 5, 53], "72441631": [4, 5, 53], "7338296": [4, 5, 53], "12": [4, 5, 31, 51, 53], "27428886": [4, 5, 53], "2094947": [4, 5, 53], "43848935": [4, 5, 53], "92898549": [4, 5, 53], "34927984": [4, 5, 53], "79890552": [4, 5, 53], "37383273": [4, 5, 53], "50284147": [4, 5, 53], "0800645": [4, 5, 53], "47797863": [4, 5, 53], "10399908": [4, 5, 53], "int641": [4, 5, 53], "1arrai": [4, 5, 53], "can": [4, 5, 7, 53, 56], "plot": [4, 5, 8, 11, 19, 25, 37, 38, 45, 48, 52, 53], "extract": [4, 5, 46], "new": [4, 6, 7, 46, 53, 56], "standalon": 4, "call": [4, 5, 46, 53], "scatter": [4, 7, 19], "to_dataset": 4, "x": [4, 5, 8, 11, 14, 25, 28, 31, 51, 53, 54], "y": [4, 5, 8, 11, 25, 28, 46], "c": [4, 54], "collect": [4, 50, 53], "pathcollect": 4, "0x169027290": 4, "one": [4, 32, 53], "each": [4, 28, 53], "kind": 4, "depend": [4, 7, 54], "flat": [4, 53], "background": [4, 28], "signal": [4, 28, 46], "gaussian": [4, 32, 38, 53], "nois": [4, 53], "power": [4, 53], "law": 4, "decai": 4, "both": [4, 46], "have": [4, 5, 43, 46, 50, 53, 56], "domain": 4, "e": [4, 50, 53, 54, 56], "g": [4, 28], "would": [4, 50], "q": [4, 28, 31, 46, 51], "spectroscopi": 4, "wavelength": [4, 28], "wavenumb": 4, "geomspac": 4, "001": [4, 5, 32, 39, 53], "150": [4, 5, 53], "m": [4, 56], "normal": [4, 5, 29, 31, 41, 51, 53], "loc": 4, "scale": [4, 25, 46, 53], "shape": [4, 14, 19], "append": [4, 6, 7, 19, 31, 43, 51], "els": 4, "1e": [4, 19, 29, 31, 39, 51, 53, 54], "124kb": 4, "1kb": [4, 5, 53], "001047": [4, 5, 53], "001097": [4, 5, 53], "9547": [4, 5, 53], "120kb": [4, 5, 53], "915e": [4, 5, 53], "06": [4, 5, 53], "479e": [4, 5, 53], "885xarrai": 4, "2x": [4, 5, 53], "150coordin": 4, "0arrai": [4, 5, 53], "001149": [4, 5, 53], "001204": [4, 5, 53], "001261": [4, 5, 53], "001321": [4, 5, 53], "001383": [4, 5, 53], "001449": [4, 5, 53], "001518": [4, 5, 53], "00159": [4, 5, 53], "001665": [4, 5, 53], "001744": [4, 5, 53], "001827": [4, 5, 53], "001914": [4, 5, 53], "002005": [4, 5, 53], "0021": [4, 5, 53], "002199": [4, 5, 53], "002304": [4, 5, 53], "002413": [4, 5, 53], "002527": [4, 5, 53], "002647": [4, 5, 53], "002773": [4, 5, 53], "002905": [4, 5, 53], "003042": [4, 5, 53], "003187": [4, 5, 53], "003338": [4, 5, 53], "003496": [4, 5, 53], "003662": [4, 5, 53], "003836": [4, 5, 53], "004018": [4, 5, 53], "004209": [4, 5, 53], "004409": [4, 5, 53], "004618": [4, 5, 53], "004837": [4, 5, 53], "005066": [4, 5, 53], "005307": [4, 5, 53], "005559": [4, 5, 53], "005822": [4, 5, 53], "006099": [4, 5, 53], "006388": [4, 5, 53], "006691": [4, 5, 53], "007009": [4, 5, 53], "007341": [4, 5, 53], "00769": [4, 5, 53], "008055": [4, 5, 53], "008437": [4, 5, 53], "008837": [4, 5, 53], "009256": [4, 5, 53], "009696": [4, 5, 53], "010156": [4, 5, 53], "010638": [4, 5, 53], "011142": [4, 5, 53], "011671": [4, 5, 53], "012225": [4, 5, 53], "012805": [4, 5, 53], "013413": [4, 5, 53], "014049": [4, 5, 53], "014716": [4, 5, 53], "015414": [4, 5, 53], "016146": [4, 5, 53], "016912": [4, 5, 53], "017714": [4, 5, 53], "018555": [4, 5, 53], "019435": [4, 5, 53], "020358": [4, 5, 53], "021324": [4, 5, 53], "022335": [4, 5, 53], "023395": [4, 5, 53], "024505": [4, 5, 53], "025668": [4, 5, 53], "026886": [4, 5, 53], "028162": [4, 5, 53], "029498": [4, 5, 53], "030898": [4, 5, 53], "032364": [4, 5, 53], "0339": [4, 5, 53], "035509": [4, 5, 53], "037194": [4, 5, 53], "038959": [4, 5, 53], "040807": [4, 5, 53], "042744": [4, 5, 53], "044772": [4, 5, 53], "046897": [4, 5, 53], "049122": [4, 5, 53], "051453": [4, 5, 53], "053894": [4, 5, 53], "056452": [4, 5, 53], "059131": [4, 5, 53], "061936": [4, 5, 53], "064875": [4, 5, 53], "067954": [4, 5, 53], "071179": [4, 5, 53], "074556": [4, 5, 53], "078094": [4, 5, 53], "0818": [4, 5, 53], "085681": [4, 5, 53], "089747": [4, 5, 53], "094006": [4, 5, 53], "098467": [4, 5, 53], "103139": [4, 5, 53], "108033": [4, 5, 53], "11316": [4, 5, 53], "118529": [4, 5, 53], "124154": [4, 5, 53], "130045": [4, 5, 53], "136216": [4, 5, 53], "14268": [4, 5, 53], "14945": [4, 5, 53], "156542": [4, 5, 53], "16397": [4, 5, 53], "171751": [4, 5, 53], "179901": [4, 5, 53], "188438": [4, 5, 53], "197379": [4, 5, 53], "206746": [4, 5, 53], "216556": [4, 5, 53], "226832": [4, 5, 53], "237596": [4, 5, 53], "24887": [4, 5, 53], "26068": [4, 5, 53], "27305": [4, 5, 53], "286006": [4, 5, 53], "299578": [4, 5, 53], "313794": [4, 5, 53], "328684": [4, 5, 53], "344281": [4, 5, 53], "360618": [4, 5, 53], "37773": [4, 5, 53], "395654": [4, 5, 53], "414429": [4, 5, 53], "434094": [4, 5, 53], "454693": [4, 5, 53], "476269": [4, 5, 53], "498869": [4, 5, 53], "522542": [4, 5, 53], "547337": [4, 5, 53], "57331": [4, 5, 53], "600514": [4, 5, 53], "62901": [4, 5, 53], "658858": [4, 5, 53], "690122": [4, 5, 53], "72287": [4, 5, 53], "757172": [4, 5, 53], "793102": [4, 5, 53], "830736": [4, 5, 53], "870156": [4, 5, 53], "911447": [4, 5, 53], "954697": [4, 5, 53], "float641": [4, 5, 53], "766": [4, 5, 53], "885arrai": [4, 5, 53], "91473866e": [4, 5, 53], "47945621e": [4, 5, 53], "36028471e": [4, 5, 53], "94187833e": [4, 5, 53], "95975369e": [4, 5, 53], "07151476e": [4, 5, 53], "97716281e": [4, 5, 53], "35648739e": [4, 5, 53], "63877436e": [4, 5, 53], "90008720e": [4, 5, 53], "76008223e": [4, 5, 53], "09466497e": [4, 5, 53], "73830160e": [4, 5, 53], "68956928e": [4, 5, 53], "03891097e": [4, 5, 53], "25128766e": [4, 5, 53], "82586751e": [4, 5, 53], "00886636e": [4, 5, 53], "42016873e": [4, 5, 53], "73396019e": [4, 5, 53], "23904051e": [4, 5, 53], "14723090e": [4, 5, 53], "27145347e": [4, 5, 53], "40494323e": [4, 5, 53], "96972776e": [4, 5, 53], "80114117e": [4, 5, 53], "63801728e": [4, 5, 53], "53037078e": [4, 5, 53], "96144836e": [4, 5, 53], "37164783e": [4, 5, 53], "34596686e": [4, 5, 53], "77244286e": [4, 5, 53], "36862577e": [4, 5, 53], "05730051e": [4, 5, 53], "76616880e": [4, 5, 53], "88473841e": [4, 5, 53], "xpandasindexpandasindex": [4, 5, 53], "0010474522360006332": [4, 5, 53], "0010971561867027272": [4, 5, 53], "0011492187010036998": [4, 5, 53], "0012037516980200685": [4, 5, 53], "0012608724076806808": [4, 5, 53], "001320703622736631": [4, 5, 53], "0013833739627296209": [4, 5, 53], "001449018150486198": [4, 5, 53], "0015177773017322714": [4, 5, 53], "6588581861506815": [4, 5, 53], "6901224802908528": [4, 5, 53], "7228703350949566": [4, 5, 53], "75717214883374": [4, 5, 53], "7931016603333051": [4, 5, 53], "8307361074919352": [4, 5, 53], "8701563933188907": [4, 5, 53], "9114472598521185": [4, 5, 53], "9546974703287516": [4, 5, 53], "length": [4, 5, 50, 53], "group": [4, 53, 54, 56], "sub_d": 4, "groupbi": 4, "figur": [4, 38, 45], "marker": [4, 53], "l": 4, "none": [4, 8, 11, 14, 17, 19, 25, 28, 29, 31, 32, 37, 38, 41, 42, 43, 45, 46, 49, 51, 53, 56], "xscale": [4, 5, 53], "log": [4, 5, 53], "yscale": [4, 5, 53], "add_legend": [4, 5, 53], "fals": [4, 5, 8, 11, 25, 31, 37, 42, 43, 46, 51, 53], "titl": [4, 5, 53], "f": 4, "show": [4, 53], "final": [4, 46, 53, 54], "piec": 4, "start": [4, 5, 7, 53, 55], "defin": [4, 5, 43, 53], "evalu": [4, 32, 53], "when": [4, 32, 46, 53], "choos": [4, 32, 53], "num_grid_point": 4, "50": [4, 19, 29, 31, 39, 51, 53], "a_grid": 4, "linspac": [4, 54], "b_grid": 4, "composition_grid": [4, 5, 19, 27, 29, 53, 54], "meshgrid": 4, "ravel": 4, "164kb": [4, 5, 53], "2500": [4, 5, 53], "885": [4, 5, 53], "40kb": [4, 5, 53], "0xarrai": [4, 5, 53], "150grid": [4, 5, 53], "2500coordin": [4, 5, 53], "2041": [4, 5, 53], "20408163": [4, 5, 53], "40816327": [4, 5, 53], "59183673": [4, 5, 53], "79591837": [4, 5, 53], "inspect": 4, "edgecolor": 4, "other": [4, 11, 25, 53, 54], "memori": 4, "netcdf": 4, "format": [4, 43], "to_netcdf": 4, "example_dataset": [4, 5, 53], "nc": [4, 5, 53], "demonstr": [4, 53], "ad": [4, 46, 53], "ground": [4, 53], "truth": [4, 53], "explor": 4, "result": [4, 5, 40, 41, 43, 50, 53], "contain": [4, 19, 43, 53], "all": [4, 5, 7, 28, 32, 38, 39, 41, 43, 45, 46, 53, 54, 56], "train": [4, 53], "activ": [4, 7, 44, 53, 56], "learn": [4, 5, 7, 53], "correspond": [4, 53], "valid": 4, "structur": [4, 53], "repres": [4, 53], "typic": [4, 50], "expect": [4, 5], "mani": [4, 53], "double_ag": [4, 5, 27, 52, 53, 54], "exact": [4, 43], "chang": [4, 53], "share": 4, "foundat": [4, 53], "featur": [4, 53, 56], "analyz": [4, 7, 28], "formul": [4, 7], "materi": [4, 7], "problem": 4, "where": [4, 53], "vari": 4, "guid": [5, 7, 53, 55, 56], "walk": 5, "custom": 5, "build": [5, 6, 7, 43, 54, 55, 56], "block": 5, "thei": [5, 53], "perform": [5, 53], "specif": [5, 6, 7], "data": [5, 6, 7, 14, 28, 31, 38, 39, 45, 46, 51, 52, 54], "transform": [5, 46], "analys": [5, 53], "chain": 5, "togeth": [5, 54], "By": 5, "own": [5, 7], "extend": [5, 43], "function": [5, 11, 25, 32, 53, 54], "meet": 5, "pipelineop": [5, 32, 37, 38, 39, 40, 41, 42, 43, 46, 48, 50, 52, 53], "implement": [5, 7, 53], "algorithm": [5, 7, 53], "parent": 5, "should": [5, 43, 45, 53], "directli": [5, 56], "indirectli": 5, "anoth": 5, "from": [5, 6, 7, 28, 32, 43, 46, 53, 54], "sub": 5, "It": [5, 7, 46, 53], "method": [5, 32, 43, 50, 53], "constructor": [5, 43, 46, 50], "init": [5, 11], "take": [5, 38, 39, 43, 46, 53], "singl": [5, 11, 53], "argument": [5, 53], "mynorm": 5, "def": [5, 50], "__init__": [5, 50], "self": [5, 7, 25, 32, 37, 38, 39, 41, 43, 45, 46, 53], "input_vari": [5, 32, 37, 39, 40, 41, 42, 43, 45, 46, 53, 54], "output_vari": [5, 32, 38, 39, 40, 41, 42, 43, 45, 46, 53, 54], "three": 5, "store": [5, 7, 43, 53], "them": [5, 53], "super": 5, "dataset": [5, 6, 7, 14, 31, 32, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 51, 53, 54], "_get_vari": 5, "logic": 5, "here": [5, 53], "normalized_data": 5, "max": [5, 39, 46], "output": [5, 40, 43, 45, 53], "attr": 5, "descript": [5, 53], "return": [5, 14, 28, 41, 43, 44], "test": [5, 50, 56], "out": [5, 50, 53], "first": [5, 32, 46, 53, 54], "load": [5, 19], "xarrai": [5, 6, 7, 32, 38, 39, 41, 45, 46, 53, 54], "load_dataset": [5, 53], "grid": [5, 31, 32, 38, 39, 40, 46, 51, 53, 54], "composit": [5, 19, 29, 31, 32, 38, 46, 51, 54], "measur": [5, 19, 32, 46, 54], "our": [5, 53, 54], "run": [5, 43, 53, 54], "normalized_measur": 5, "ds_result": [5, 53], "284kb": 5, "7918": 5, "794e": 5, "07xarrai": 5, "6118": 5, "07descript": 5, "datanam": [5, 53], "mynormalizerinput_vari": 5, "measurementoutput_vari": [5, 53], "normalized_measurementinput_prefix": 5, "noneoutput_prefix": [5, 53], "nonearrai": [5, 53], "91802470e": 5, "11799984e": 5, "62518958e": 5, "03025545e": 5, "07": 5, "10417548e": 5, "56634140e": 5, "17616748e": 5, "60948648e": 5, "77682868e": 5, "85743648e": 5, "27847351e": 5, "66207454e": 5, "02708288e": 5, "17986996e": 5, "29621174e": 5, "82568785e": 5, "82270310e": 5, "17196818e": 5, "87282815e": 5, "61175726e": 5, "12380807e": 5, "74414748e": 5, "25784547e": 5, "88922908e": 5, "14542131e": 5, "44826467e": 5, "77369791e": 5, "04638501e": 5, "11118349e": 5, "80748260e": 5, "70128402e": 5, "32958846e": 5, "65968238e": 5, "50756118e": 5, "30364331e": 5, "79396458e": 5, "side": [5, 53], "compar": [5, 53], "fig": [5, 53], "ax": [5, 19, 29, 31, 51, 53], "subplot": [5, 19, 53], "figsiz": [5, 43, 53], "set": [5, 32, 53], "raw": [5, 28, 53], "tight_layout": 5, "axi": [5, 28, 53], "subclass": 5, "base": [5, 7, 8, 11, 14, 17, 19, 25, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 56], "requir": [5, 11, 25, 43], "execut": [5, 7, 8, 11, 25, 43, 53], "visual": [5, 7, 53], "confirm": 5, "allow": [5, 7, 44, 53], "task": [6, 7], "an": [6, 7, 32, 43, 50], "scratch": [6, 7], "oper": [6, 7, 43, 45, 46, 52, 53, 54], "python": [7, 43, 50, 56], "user": 7, "scienc": 7, "applic": 7, "rather": [7, 46, 53], "than": [7, 46, 53], "provid": [7, 32, 38, 39, 43, 45], "framework": 7, "achiev": 7, "modular": [7, 53], "extens": 7, "api": 7, "compos": 7, "multipl": [7, 46, 53, 56], "machin": [7, 53, 56], "If": [7, 43, 46, 56], "research": 7, "pleas": [7, 27, 52], "cite": 7, "manuscript": 7, "autonom": 7, "small": [7, 53], "angl": [7, 28], "acceler": 7, "soft": 7, "optim": [7, 38, 53], "under": 7, "review": 7, "visualiz": 7, "serializ": 7, "intermedi": [7, 53], "model": [7, 11, 44, 53], "rich": 7, "tool": [7, 53, 56], "trivial": 7, "support": [7, 56], "multimod": 7, "map": 7, "properti": [7, 19, 38], "pip": [7, 56], "git": [7, 56], "http": [7, 44, 56], "github": [7, 56], "com": [7, 44, 56], "usnistgov": [7, 56], "see": [7, 44, 53, 54, 56], "setup": [7, 55], "page": [7, 53], "more": [7, 32, 53, 54], "detail": [7, 53, 54], "organ": 7, "accord": [7, 39], "philosphi": 7, "describ": 7, "daniel": 7, "procida": 7, "diataxi": 7, "fr": 7, "four": 7, "step": [7, 39, 55], "beginn": [7, 55], "discuss": 7, "principl": 7, "refer": 7, "technic": [7, 50], "prerequisit": 7, "basic": [7, 54], "develop": 7, "option": 7, "branch": 7, "offlin": 7, "troubleshoot": 7, "quick": [7, 53, 55], "exampl": [7, 50, 53, 55], "conclus": [7, 55], "doubl": 7, "acquisit": [8, 11, 25, 27, 32, 53], "add_exclus": [8, 11, 25], "point": [8, 11, 14, 25, 28, 32, 38, 53], "copi": [8, 11, 14, 17, 19, 25, 31, 43, 45, 51, 56], "get_next_sampl": [8, 11, 25, 32], "nth": [8, 11, 25], "composition_check": [8, 11, 25], "mask": [8, 11, 25, 28, 31, 40, 51], "kwarg": [8, 11, 14, 25], "reset_phasemap": [8, 11, 25], "phasemap": [8, 11, 17, 19, 25, 27, 52], "iterationcombin": [8, 27], "function1": 8, "function2": 8, "function2_frequ": 8, "calculate_metr": [8, 11, 25], "gp": [8, 11, 25], "lowestdens": [8, 27], "bandwidth": 8, "075": 8, "y_mean": 8, "y_var": 8, "varianc": [8, 27], "gauss2d": [8, 11, 25, 27], "cx": [8, 11, 25], "cy": [8, 11, 25], "sx": [8, 11, 25], "sy": [8, 11, 25], "sample_randomli": [11, 25], "ei": [11, 27], "model_typ": 11, "classifi": [11, 25, 38, 53], "either": 11, "regressor": [11, 25, 38], "pseudoei": [11, 27], "thompson_sampl": [11, 25], "One": [11, 25], "ha": [11, 25, 53, 56], "generaliz": [11, 25], "some": [11, 25], "thought": [11, 25], "gpr": [11, 25], "delaunai": [14, 27, 41], "data_vari": [14, 17], "param": [14, 17, 41, 42, 53, 54], "similar": [14, 27, 41, 54], "comput": [14, 28, 53, 54], "triangul": 14, "given": 14, "num_nod": 14, "adjac": 14, "matrix": [14, 41, 53], "distanc": [14, 27, 41], "constrain_sam": [14, 41], "constrain_differ": [14, 41, 53], "dummi": [14, 27, 41], "apply_constraint": [14, 41], "arg": [14, 25], "normalize1": [14, 41], "normalize2": [14, 41], "to_dict": 14, "multimetr": [14, 27], "combine_bi": [14, 41], "prod": [14, 41], "combine_by_pow": [14, 41], "combine_by_coeff": [14, 41], "data_list": [14, 41], "sum": [14, 41], "update_nam": 14, "listifi": [14, 27, 50], "obj": [14, 50], "affinitypropag": [17, 27, 42], "dbscan": [17, 27], "gaussianmixturemodel": [17, 27, 42], "kerasclassifi": [17, 27], "model_path": 17, "model_q": 17, "deriv0": 17, "transpose_var": 17, "remap_labels_by_count": [17, 42], "silhouett": [17, 42], "w": [17, 42], "spectralclust": [17, 27, 42, 53, 54], "label_encod": 19, "labels_ordin": [19, 31, 51], "numer": [19, 46], "sort": 19, "spatial": 19, "posit": [19, 53], "classmethod": [19, 44], "fname": 19, "ncompon": 19, "rescal": [19, 53], "true": [19, 29, 31, 38, 43, 45, 46, 49, 51, 53], "mpl_kw": [19, 31, 49, 51], "save": 19, "slice": [19, 46], "indic": [19, 46, 53], "update_encod": 19, "phasemapmodel": [19, 27], "phasemapview_mpl": [19, 27], "cmap": 19, "jet": 19, "xy": [19, 46], "make_ax": 19, "scatter_ternari": 19, "cart2ternari": [19, 27], "ternari": [19, 29, 31, 46, 49, 51], "cartesian": [19, 29, 31, 39, 51], "coorid": 19, "pts_per_row": [19, 29, 31, 39, 51], "dim": [19, 29, 31, 39, 42, 46, 51, 53, 54], "ep": [19, 29, 39], "09": [19, 29, 39], "format_plot_ternari": [19, 27], "label_a": 19, "label_b": 19, "label_c": 19, "phasemap_grid_factori": [19, 27], "rescale_composit": [19, 27], "remove_zero": 19, "ternary2cart": [19, 27], "get_next_sample_passthrough": [25, 27], "next_sampl": [25, 32, 53, 54], "pseudoucb": [25, 27, 32], "modul": [27, 48, 52, 53, 54], "deprec": [27, 52], "remov": [27, 28, 46, 52, 53], "futur": [27, 52], "version": [27, 52, 56], "instead": [27, 52], "acquisitionfunct": [27, 48, 52], "ei_acquisitionfunct": [27, 52], "ucb_acquisitionfunct": [27, 52], "gaussianprocess": [27, 52], "hscedgaussianprocess": [27, 52], "phaselabel": [27, 48, 52], "phasemap_panda": [27, 52], "metric": [27, 52, 53, 54], "agentcli": [27, 48, 52], "sas_agentdriv": [27, 52], "multimodal_agentdriv": [27, 52], "dowshampoo_sampledriv": [27, 52], "sans_al_sampledriv": [27, 52], "saxs_al_sampledriv": [27, 52], "sas_al_sampledriv": [27, 52], "sas_grid_al_sampledriv": [27, 52], "multimodal_al_sampledriv": [27, 52], "vsas_nodeck_al_sampledriv": [27, 52], "watchdog": [27, 52], "xarray_extens": [27, 48, 52], "afl_dataarraytool": [27, 31, 51], "afl_datasettool": [27, 31, 51], "compositiontool": [27, 31, 51], "labeltool": [27, 31, 51], "scatteringtool": [27, 31, 51], "util": [27, 31, 51, 52], "reduce_usax": [27, 52], "amplifier_correct": [27, 28], "calc_r_q": [27, 28], "centroid": [27, 28], "reduce_uascan": [27, 28], "remove_masked_data": [27, 28], "composition_grid_ternari": [27, 29], "mpl_format_ternari": [27, 29], "ternary_to_xi": [27, 29, 31, 51], "r": 28, "usax": 28, "second": [28, 46, 53], "dark": 28, "gain": 28, "correct": [28, 46], "amplifi": 28, "current": [28, 31, 43, 44, 51], "v": 28, "pd": 28, "pd_bkg": 28, "pd_gain": 28, "i0": 28, "i0_bkg": 28, "i0_gain": 28, "ar_cent": 28, "v_f_gain": 28, "paramet": [28, 43, 46, 50, 53], "float": [28, 32, 37, 39, 46], "lambda": [28, 32], "center": 28, "rock": 28, "curv": 28, "ndarrai": [28, 41], "crystal": 28, "count": [28, 32], "time": [28, 53], "photodiod": 28, "incid": 28, "monitor": 28, "i0_amp_gain": 28, "voltag": 28, "frequenc": 28, "convert": 28, "qvec": 28, "rvec": 28, "i_o": 28, "dictionari": [28, 45, 53], "root": 28, "reduct": 28, "livedata": 28, "conveni": 28, "routin": 28, "range_spec": 29, "label_right": 29, "label_top": 29, "label_left": 29, "comp": 29, "da": [31, 51], "data_dict": [31, 51], "concat_dim": [31, 51], "warn": [31, 46, 51], "much": [31, 51], "loss": [31, 51], "add_grid": [31, 51], "dim_nam": [31, 51], "overwrit": [31, 51], "get": [31, 43, 51, 53, 54], "get_grid": [31, 51], "get_grid_old": [31, 51], "get_range_sc": [31, 51], "spec": [31, 51], "get_standard_sc": [31, 51], "plot_3d": [31, 51], "set_label": [31, 51], "plot_continu": 31, "plot_discret": 31, "plot_mask": [31, 51], "mask_nam": [31, 51], "components_nam": [31, 51], "components_grid": [31, 51], "plot_scatt": [31, 51], "set_axes_label": [31, 49, 51], "discrete_label": [31, 49, 51], "plot_surfac": [31, 51], "make_default": [31, 51], "make_ordin": [31, 51], "ordinal_nam": [31, 51], "labels_nam": [31, 51], "sortbi": [31, 51], "clean": [31, 46, 51], "qlo": [31, 51], "qhi": [31, 51], "qlo_isel": [31, 51], "qhi_isel": [31, 51], "pedest": [31, 46, 51], "npt": [31, 46, 51], "250": [31, 46, 51, 53], "deriv": [31, 46, 51, 53, 54], "sgf_window_length": [31, 51], "31": [31, 46, 51], "sgf_polyord": [31, 51], "apply_log_scal": [31, 46, 51, 53], "plot_linlin": [31, 51], "logq": [31, 51], "ylabel": [31, 51], "intens": [31, 51], "u": [31, 51, 53], "xlabel": [31, 51], "\u00e5": [31, 51], "legend": [31, 51], "plot_loglog": [31, 51], "plot_logwaterfal": [31, 51], "plot_waterfal": [31, 51], "preprocess_data": [31, 51], "xname": [31, 51], "yname": [31, 51], "xlo": [31, 46, 51], "xhi": [31, 46, 51], "xlo_isel": [31, 46, 51], "xhi_isel": [31, 46, 51], "logx": [31, 51], "logi": [31, 51], "gather": 32, "suppli": [32, 38, 39, 41, 46, 53], "except": [32, 44], "acquisitionerror": 32, "rais": [32, 46], "error": [32, 53, 56], "decis": [32, 53], "occur": 32, "list": [32, 37, 38, 39, 41, 43, 44, 45, 46, 49, 50, 53], "str": [32, 37, 38, 39, 41, 43, 45, 46, 49, 50], "grid_vari": [32, 38, 39, 53, 54], "grid_dim": [32, 38, 39, 53, 54], "output_prefix": [32, 37, 38, 40, 45, 53, 54], "next_composit": 32, "decision_rtol": 32, "05": 32, "excluded_comps_vari": [32, 53], "excluded_comps_dim": 32, "exclusion_radiu": [32, 39], "acquisitionfunctionbas": 32, "appli": [32, 38, 39, 40, 41, 46, 53], "exclude_previous_sampl": 32, "modifi": [32, 53], "surfac": [32, 53], "place": [32, 53], "exclus": 32, "zone": 32, "over": [32, 46, 50, 53], "previous": 32, "find": [32, 46, 53], "within": 32, "maximum": [32, 46, 53], "valu": [32, 41, 46, 53], "randomli": [32, 53], "maxvalueaf": [32, 53, 54], "combine_coeff": 32, "multimodalmask_maxvalueaf": 32, "decision_vari": 32, "mask_label_vari": 32, "phase_select_coord": 32, "dict": [32, 39, 41, 43, 46, 50], "randomaf": 32, "exclud": 32, "previou": 32, "boundaryscor": 37, "gt_hull_vari": 37, "al_hull_vari": 37, "boundary_scor": 37, "bool": [37, 43, 46, 49], "concavehul": 37, "hull_tracing_ratio": 37, "drop_phas": 37, "component_dim": [37, 39, 46, 49, 53, 54], "label_vari": 37, "segmentize_length": 37, "025": 37, "allow_hol": 37, "discret": 38, "onto": [38, 46], "dummyextrapol": 38, "feature_input_vari": [38, 53, 54], "predictor_input_vari": [38, 53, 54], "sample_dim": [38, 39, 41, 46, 53, 54], "mpl_kwarg": [38, 45], "gaussianprocessclassifi": [38, 53, 54], "kernel": 38, "fmin_l_bfgs_b": 38, "gaussianprocessregressor": 38, "predictor_uncertainty_vari": 38, "fix_nan": 38, "parametr": 39, "barycentricgrid": 39, "barycentricgridgener": 39, "cartesiangrid": 39, "grid_spec": 39, "cartesiangridgener": 39, "produc": [39, 40, 41, 43, 53], "min": [39, 46], "gaussianpoint": 39, "comps_dim": 39, "exclusion_depth": 39, "gaussianpointsgener": 39, "generatorbas": 39, "pairmetr": [40, 48, 52], "pair": [40, 41, 53], "matric": [40, 41], "mask_vari": 40, "grid_dim_in": 40, "grid_dim_out": 40, "renam": 40, "combinemetr": 41, "number": [41, 46, 53], "ani": [41, 44, 50, 56], "delaunaymetr": 41, "distancemetr": 41, "dummymetr": 41, "j": [41, 53], "constrain": 41, "perfectli": [41, 53], "dissimilar": 41, "diagon": [41, 53], "equal": 41, "between": [41, 54], "similaritymetr": [41, 53], "use_silhouett": 42, "pipelinesop": 43, "signatur": 43, "pipelineopbas": [43, 45], "write": 43, "dataarrai": [43, 53], "prefer": 43, "op": [43, 46, 50], "pipelinecontext": [43, 48, 52], "mirror": 43, "behavior": [43, 53], "tiled_data": [43, 45], "disable_progress_bar": 43, "clear_output": 43, "clear": [43, 53], "edge_label": 43, "graph": [43, 53], "draw_plotli": [43, 53], "fulli": 43, "includ": 43, "aren": 43, "These": [43, 53], "hopefulli": 43, "distinguish": 43, "isn": 43, "enforc": 43, "moment": 43, "make_graph": 43, "networkx": 43, "represent": 43, "print": [43, 50, 53], "summari": [43, 46], "print_cod": 43, "string": [43, 50], "approxim": 43, "code": 43, "fail": 43, "edit": [43, 56], "mai": 43, "ident": 43, "caution": 43, "static": 43, "read": 43, "filenam": 43, "pickl": 43, "file": [43, 56], "disk": 43, "pipeline1": 43, "pickled_pipelin": 43, "pkl": 43, "search": [43, 46, 53, 54], "filepath": 43, "written": 43, "nocontextexcept": 44, "inherit": [44, 45], "abus": 44, "stackoverflow": 44, "question": 44, "49573131": 44, "pymc3": 44, "assign": [44, 53], "_thread": 44, "_local": 44, "get_context": 44, "deepest": 44, "stack": 44, "input_prefix": [45, 53], "abc": 45, "abstract": 45, "processor": 45, "add_to_dataset": 45, "copy_dataset": 45, "add_to_til": 45, "tile": 45, "catalogu": 45, "preprocess": 46, "arraytovar": 46, "split_dim": 46, "postfix": 46, "squeez": 46, "datasettovar": 46, "insert": 46, "split": 46, "datarrai": 46, "barycentrictoternaryxi": 46, "adapt": 46, "barycentr": 46, "mpltern": 46, "yuzie007": 46, "destandard": 46, "scale_vari": [46, 53], "min_val": [46, 53, 54], "max_val": [46, 53, 54], "extrema": 46, "return_coord": 46, "slice_dim": 46, "preprocessorbas": 46, "savgolfilt": [46, 53, 54], "window_length": [46, 53], "polyord": 46, "smooth": [46, 53], "via": 46, "savitski": 46, "golai": 46, "filter": 46, "scipi": 46, "savgol_filt": 46, "taken": 46, "trim": 46, "former": 46, "while": [46, 50, 53], "latter": 46, "integ": 46, "advis": 46, "varieti": 46, "attempt": [46, 50], "log10": 46, "log_": 46, "duplic": 46, "same": 46, "averag": 46, "nan": 46, "fill": 46, "interpol": 46, "constant": [46, 53], "minimum": [46, 53], "geometr": 46, "linearli": 46, "remain": 46, "drop": 46, "standard": [46, 53, 54], "subtract": 46, "coord_valu": 46, "baselin": 46, "subtractmin": 46, "sympytransform": 46, "transform_dim": 46, "sympi": 46, "express": 46, "ternaryxytobarycentr": 46, "varstoarrai": 46, "variable_dim": 46, "variable_map": 46, "zscale": 46, "z": 46, "mean": [46, 53], "deviat": [46, 53], "zscaleerror": 46, "zscale_error": 46, "y_err": 46, "autosa": [48, 52], "extrapol": [48, 52, 54], "maskgrid": [48, 52], "preprocessor": [48, 52], "tensorflowextrapol": [48, 52], "autosas_driv": [48, 52], "agentdriv": [48, 52], "plot_scatter_mpl": [49, 53], "component_vari": 49, "artist": 49, "plot_surface_mpl": [49, 53], "helper": [50, 53], "extract_paramet": 50, "reconstruct": 50, "target": 50, "try": [50, 56], "iter": 50, "primari": 50, "case": [50, 53], "handl": 50, "sometim": 50, "alwai": [50, 53], "pass": [50, 53], "particular": 50, "which": [50, 53], "want": [50, 53, 54, 56], "my_func": 50, "last": 50, "been": 50, "newlin": 50, "component_var": 51, "packag": [52, 56], "core": 52, "apiserv": 52, "driver": 52, "autom": [52, 56], "improv": 53, "converg": 53, "savitzki": 53, "spectral": 53, "fit": 53, "entropi": [53, 54], "posterior": 53, "pre": 53, "prepar": 53, "flexibl": 53, "multi": 53, "simul": 53, "wa": 53, "labels": 53, "column": 53, "tabl": 53, "check": 53, "align": 53, "better": 53, "so": 53, "construct": 53, "shown": 53, "approach": 53, "automat": 53, "my_first_pipelin": [53, 54], "normalized_composit": [53, 54], "n": 53, "statist": 53, "view": 53, "about": 53, "recreat": 53, "normalized_composition_grid": [53, 54], "205kb": 53, "57": 53, "2042": 53, "05441": 53, "0478": 53, "2042descript": 53, "rang": 53, "1name": 53, "standardizeinput_vari": 53, "compositionoutput_vari": 53, "normalized_compositioninput_prefix": 53, "nonedim": 53, "samplecomponent_dim": 53, "componentmin_v": 53, "56999576": 53, "05440701": 53, "89378202": 53, "64695366": 53, "3779011": 53, "78781278": 53, "9825356": 53, "28654046": 53, "16037012": 53, "94928719": 53, "79099475": 53, "58855406": 53, "2174658": 53, "19018012": 53, "93087565": 53, "11452453": 53, "27892679": 53, "00196367": 53, "50368155": 53, "71226209": 53, "11852969": 53, "656343": 53, "16521403": 53, "79104271": 53, "27317673": 53, "00754016": 53, "92231422": 53, "2887113": 53, "83356002": 53, "20882985": 53, "81071181": 53, "89444805": 53, "41026329": 53, "24709323": 53, "79409605": 53, "43932029": 53, "65823861": 53, "6111219": 53, "37802657": 53, "82060143": 53, "50825235": 53, "21457642": 53, "85077058": 53, "10111441": 53, "44632403": 53, "27006877": 53, "85252344": 53, "26842349": 53, "92321858": 53, "8289078": 53, "67555881": 53, "40994221": 53, "76753907": 53, "06718201": 53, "58397554": 53, "42597894": 53, "02247844": 53, "73409473": 53, "88307764": 53, "42621662": 53, "89844145": 53, "00132886": 53, "01175595": 53, "47107972": 53, "7901926": 53, "75787605": 53, "74267923": 53, "94897665": 53, "87338296": 53, "49097155": 53, "22094947": 53, "37753957": 53, "89289855": 53, "41397119": 53, "07989055": 53, "65495331": 53, "25028415": 53, "00320258": 53, "04779786": 53, "20415996": 53, "02041": 53, "0descript": 53, "composition_gridoutput_vari": 53, "normalized_composition_gridinput_prefix": 53, "gridcomponent_dim": 53, "02040816": 53, "04081633": 53, "95918367": 53, "97959184": 53, "were": 53, "visualis": 53, "text": 53, "39": 53, "rel": 53, "unchang": 53, "magnitud": 53, "move": 53, "help": [53, 54], "emphas": 53, "focu": 53, "window": [53, 56], "larger": 53, "give": 53, "smoother": 53, "befor": [53, 56], "span": 53, "407kb": 53, "log_x": 53, "988": 53, "200kb": 53, "82": 53, "4063xarrai": 53, "2500log_x": 53, "250coordin": 53, "976": 53, "01205": 53, "987952": 53, "975904": 53, "024096": 53, "012048": 53, "825": 53, "3897": 53, "4063descript": 53, "savgolfilterinput_vari": 53, "derivativeinput_prefix": 53, "xnpt": 53, "250xlo": 53, "nonexhi": 53, "nonexlo_isel": 53, "nonexhi_isel": 53, "nonepedest": 53, "nonederiv": 53, "1apply_log_scal": 53, "truepolyord": 53, "2window_length": 53, "50arrai": 53, "82019992": 53, "82462256": 53, "82904519": 53, "35145453": 53, "36993018": 53, "38840584": 53, "2626048": 53, "24893257": 53, "23526033": 53, "01349491": 53, "01809932": 53, "02270373": 53, "50261177": 53, "4760206": 53, "44942943": 53, "12473091": 53, "13576784": 53, "14680477": 53, "24159282": 53, "24193045": 53, "24226809": 53, "52407629": 53, "54400047": 53, "56392465": 53, "67922195": 53, "69182355": 53, "70442514": 53, "30180559": 53, "31353524": 53, "32526489": 53, "96638732": 53, "97110223": 53, "97581713": 53, "37305086": 53, "389679": 53, "40630713": 53, "log_xpandasindexpandasindex": 53, "9879518072289155": 53, "9759036144578315": 53, "963855421686747": 53, "9518072289156625": 53, "9397590361445785": 53, "927710843373494": 53, "9156626506024095": 53, "9036144578313254": 53, "891566265060241": 53, "10843373493975905": 53, "09638554216867457": 53, "08433734939759008": 53, "07228915662650603": 53, "06024096385542155": 53, "04819277108433706": 53, "03614457831325302": 53, "02409638554216853": 53, "012048192771084043": 53, "savgol": 53, "right": 53, "region": 53, "left": 53, "easier": 53, "simlar": 53, "separ": 53, "laplacian": [53, 54], "gamma": [53, 54], "follow": 53, "487kb": 53, "sample_i": 53, "sample_j": 53, "4063": 53, "80kb": 53, "250sample_i": 53, "100sample_j": 53, "100coordin": 53, "9974": 53, "9503": 53, "0metric": 53, "laplaciangamma": 53, "0001name": 53, "similaritymetricinput_vari": 53, "derivativeoutput_vari": 53, "similarityinput_prefix": 53, "nonesample_dim": 53, "sampleconstrain_sam": 53, "99741833": 53, "950302": 53, "95081738": 53, "99761626": 53, "99830741": 53, "95025158": 53, "95041344": 53, "99752619": 53, "99755674": 53, "99504435": 53, "9505596": 53, "95006123": 53, "95158475": 53, "95047502": 53, "99740548": 53, "quadmesh": 53, "0x312e02690": 53, "pixel": 53, "imag": 53, "bright": 53, "high": 53, "darker": 53, "reduc": 53, "perfect": 53, "becaus": 53, "itself": 53, "n_phase": [53, 54], "488kb": 53, "1n_phase": 53, "2name": 53, "spectralclusteringinput_vari": 53, "similarityoutput_vari": 53, "labelsinput_prefix": 53, "sampleuse_silhouett": 53, "falsearrai": 53, "extrap": [53, 54], "extrap_mean": 53, "extrap_entropi": [53, 54], "predict": 53, "prefix": 53, "548kb": 53, "20kb": 53, "5813": 53, "5687": 53, "4603": 53, "extrap_y_prob": 53, "4603xarrai": 53, "gaussianprocessclassifierinput_vari": 53, "extrapfeature_input_vari": 53, "normalized_compositionpredictor_input_vari": 53, "labelsgrid_vari": 53, "normalized_composition_gridsample_dim": 53, "samplegrid_dim": 53, "gridgrid": 53, "noneoptim": 53, "fmin_l_bfgs_barrai": 53, "4565": 53, "4603name": 53, "58125708": 53, "56865533": 53, "55554833": 53, "45390195": 53, "45652977": 53, "46031056": 53, "extrap_y_entropi": 53, "most": 53, "like": 53, "relat": 53, "confid": 53, "maxim": 53, "uncertainti": 53, "select": [53, 54], "sinc": 53, "uncertain": 53, "21": 53, "568kb": 53, "af_sampl": 53, "decision_surfac": 53, "7655": 53, "7391": 53, "512": 53, "16b": 53, "082": 53, "24": 53, "49xarrai": 53, "100af_sampl": 53, "1coordin": 53, "5041": 53, "512descript": 53, "determin": 53, "next_samplenam": 53, "maxvalueafinput_vari": 53, "next_sampleinput_prefix": 53, "noneinput_vari": 53, "noneexcluded_comps_dim": 53, "nonecount": 53, "1grid_vari": 53, "composition_gridgrid_dim": 53, "griddecision_rtol": 53, "05exclusion_radiu": 53, "001combine_coeff": 53, "noneacquisit": 53, "60kb": 53, "comp_grid": 53, "7116": 53, "512arrai": 53, "76549835": 53, "73908732": 53, "7116174": 53, "49858474": 53, "50409217": 53, "51201603": 53, "float644": 53, "49name": 53, "08163265": 53, "48979592": 53, "color": 53, "red": 53, "sever": [53, 54, 56], "doesn": 53, "absolut": 53, "top": 53, "acquisition_rtol": 53, "percent": 53, "With": 53, "whole": 53, "appeal": 53, "wai": [53, 56], "consist": 53, "flow": 53, "complex": 53, "identif": 53, "classif": 53, "further": 53, "built": 53, "complet": 53, "workflow": 53, "easili": 53, "individu": 53, "maintain": 53, "For": [53, 56], "short": 54, "doc": 54, "building_pipelin": 54, "synthet": 54, "n_sampl": 54, "n_point": 54, "acquisitin": 54, "data_var": 54, "component_grid": 54, "coord": 54, "ds_out": 54, "break": 54, "down": 54, "what": 54, "happen": 54, "syntax": 54, "cluster": 54, "highest": 54, "ve": 54, "seen": 54, "might": 54, "complic": 54, "architectur": 54, "cover": 56, "ensur": 56, "later": 56, "sourc": 56, "simplest": 56, "clone": 56, "repositori": 56, "mode": 56, "cd": 56, "jupyt": 56, "tensorflow": 56, "gpflow": 56, "pytorch": 56, "dev": 56, "squar": 56, "bracket": 56, "commit": 56, "hash": 56, "environ": 56, "internet": 56, "access": 56, "wheel": 56, "On": 56, "whl": 56, "afl_ag": 56, "py3": 56, "common": 56, "issu": 56, "solut": 56, "conflict": 56, "encount": 56, "venv": 56, "bin": 56, "script": 56, "miss": 56, "after": 56, "failur": 56, "sure": 56, "latest": 56, "upgrad": 56, "setuptool": 56}, "objects": {"AFL.agent": [[8, 0, 0, "-", "AcquisitionFunction"], [11, 0, 0, "-", "EI_AcquisitionFunction"], [14, 0, 0, "-", "Metric"], [17, 0, 0, "-", "PhaseLabeler"], [18, 0, 0, "-", "PhaseMap"], [19, 0, 0, "-", "PhaseMap_pandas"], [25, 0, 0, "-", "UCB_AcquisitionFunction"], [28, 0, 0, "-", "reduce_usaxs"], [29, 0, 0, "-", "util"], [31, 0, 0, "-", "xarray_extensions"]], "AFL.agent.AcquisitionFunction": [[8, 1, 1, "", "Acquisition"], [8, 1, 1, "", "IterationCombined"], [8, 1, 1, "", "LowestDensity"], [8, 1, 1, "", "Random"], [8, 1, 1, "", "Variance"], [8, 3, 1, "", "gauss2d"]], "AFL.agent.AcquisitionFunction.Acquisition": [[8, 2, 1, "", "add_exclusion"], [8, 2, 1, "", "copy"], [8, 2, 1, "", "execute"], [8, 2, 1, "", "get_next_sample"], [8, 2, 1, "", "plot"], [8, 2, 1, "", "reset_phasemap"]], "AFL.agent.AcquisitionFunction.IterationCombined": [[8, 2, 1, "", "calculate_metric"], [8, 2, 1, "", "reset_phasemap"]], "AFL.agent.AcquisitionFunction.LowestDensity": [[8, 2, 1, "", "calculate_metric"]], "AFL.agent.AcquisitionFunction.Random": [[8, 2, 1, "", "calculate_metric"]], "AFL.agent.AcquisitionFunction.Variance": [[8, 2, 1, "", "calculate_metric"]], "AFL.agent.EI_AcquisitionFunction": [[11, 1, 1, "", "Acquisition"], [11, 1, 1, "", "EI"], [11, 3, 1, "", "gauss2d"], [11, 1, 1, "", "pseudoEI"]], "AFL.agent.EI_AcquisitionFunction.Acquisition": [[11, 2, 1, "", "add_exclusion"], [11, 2, 1, "", "copy"], [11, 2, 1, "", "execute"], [11, 2, 1, "", "get_next_sample"], [11, 2, 1, "", "plot"], [11, 2, 1, "", "reset_phasemap"]], "AFL.agent.EI_AcquisitionFunction.EI": [[11, 2, 1, "", "calculate_metric"]], "AFL.agent.EI_AcquisitionFunction.pseudoEI": [[11, 2, 1, "", "calculate_metric"]], "AFL.agent.Metric": [[14, 1, 1, "", "Delaunay"], [14, 1, 1, "", "Distance"], [14, 1, 1, "", "Dummy"], [14, 1, 1, "", "Metric"], [14, 1, 1, "", "MultiMetric"], [14, 1, 1, "", "Similarity"], [14, 3, 1, "", "listify"]], "AFL.agent.Metric.Delaunay": [[14, 2, 1, "", "calculate"]], "AFL.agent.Metric.Distance": [[14, 2, 1, "", "calculate"]], "AFL.agent.Metric.Dummy": [[14, 2, 1, "", "calculate"]], "AFL.agent.Metric.Metric": [[14, 2, 1, "", "apply_constraints"], [14, 2, 1, "", "calculate"], [14, 2, 1, "", "copy"], [14, 2, 1, "", "normalize1"], [14, 2, 1, "", "normalize2"], [14, 2, 1, "", "to_dict"]], "AFL.agent.Metric.MultiMetric": [[14, 2, 1, "", "calculate"], [14, 2, 1, "", "prod"], [14, 2, 1, "", "sum"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "update_name"]], "AFL.agent.Metric.Similarity": [[14, 2, 1, "", "calculate"]], "AFL.agent.PhaseLabeler": [[17, 1, 1, "", "AffinityPropagation"], [17, 1, 1, "", "DBSCAN"], [17, 1, 1, "", "GaussianMixtureModel"], [17, 1, 1, "", "KerasClassifier"], [17, 1, 1, "", "PhaseLabeler"], [17, 1, 1, "", "SpectralClustering"]], "AFL.agent.PhaseLabeler.AffinityPropagation": [[17, 2, 1, "", "label"]], "AFL.agent.PhaseLabeler.DBSCAN": [[17, 2, 1, "", "label"]], "AFL.agent.PhaseLabeler.GaussianMixtureModel": [[17, 2, 1, "", "label"]], "AFL.agent.PhaseLabeler.KerasClassifier": [[17, 2, 1, "", "label"]], "AFL.agent.PhaseLabeler.PhaseLabeler": [[17, 2, 1, "", "copy"], [17, 2, 1, "", "label"], [17, 2, 1, "", "remap_labels_by_count"], [17, 2, 1, "", "silhouette"]], "AFL.agent.PhaseLabeler.SpectralClustering": [[17, 2, 1, "", "label"]], "AFL.agent.PhaseMap_pandas": [[19, 1, 1, "", "PhaseMap"], [19, 1, 1, "", "PhaseMapModel"], [19, 1, 1, "", "PhaseMapView_MPL"], [19, 3, 1, "", "cart2ternary"], [19, 3, 1, "", "composition_grid"], [19, 3, 1, "", "format_plot_ternary"], [19, 3, 1, "", "phasemap_grid_factory"], [19, 3, 1, "", "rescale_compositions"], [19, 3, 1, "", "ternary2cart"]], "AFL.agent.PhaseMap_pandas.PhaseMap": [[19, 2, 1, "", "append"], [19, 4, 1, "", "components"], [19, 4, 1, "", "compositions"], [19, 2, 1, "", "copy"], [19, 4, 1, "", "label_encoder"], [19, 4, 1, "", "labels"], [19, 4, 1, "", "labels_ordinal"], [19, 2, 1, "", "load"], [19, 4, 1, "", "measurements"], [19, 4, 1, "", "ncomponents"], [19, 2, 1, "", "plot"], [19, 2, 1, "", "project"], [19, 2, 1, "", "save"], [19, 4, 1, "", "shape"], [19, 4, 1, "", "size"], [19, 2, 1, "", "slice"], [19, 2, 1, "", "update_encoder"]], "AFL.agent.PhaseMap_pandas.PhaseMapModel": [[19, 2, 1, "", "append"]], "AFL.agent.PhaseMap_pandas.PhaseMapView_MPL": [[19, 2, 1, "", "lines"], [19, 2, 1, "", "make_axes"], [19, 2, 1, "", "scatter"], [19, 2, 1, "", "scatter_ternary"]], "AFL.agent.UCB_AcquisitionFunction": [[25, 1, 1, "", "Acquisition"], [25, 3, 1, "", "gauss2d"], [25, 3, 1, "", "get_next_sample_passthrough"], [25, 1, 1, "", "pseudoUCB"]], "AFL.agent.UCB_AcquisitionFunction.Acquisition": [[25, 2, 1, "", "add_exclusion"], [25, 2, 1, "", "copy"], [25, 2, 1, "", "execute"], [25, 2, 1, "", "get_next_sample"], [25, 2, 1, "", "plot"], [25, 2, 1, "", "reset_phasemap"]], "AFL.agent.UCB_AcquisitionFunction.pseudoUCB": [[25, 2, 1, "", "calculate_metric"]], "AFL.agent.reduce_usaxs": [[28, 3, 1, "", "amplifier_corrections"], [28, 3, 1, "", "calc_R_Q"], [28, 3, 1, "", "centroid"], [28, 3, 1, "", "reduce_uascan"], [28, 3, 1, "", "remove_masked_data"]], "AFL.agent.util": [[29, 3, 1, "", "composition_grid"], [29, 3, 1, "", "composition_grid_ternary"], [29, 3, 1, "", "mpl_format_ternary"], [29, 3, 1, "", "ternary_to_xy"]], "AFL.agent.xarray_extensions": [[31, 1, 1, "", "AFL_DataArrayTools"], [31, 1, 1, "", "AFL_DatasetTools"], [31, 1, 1, "", "CompositionTools"], [31, 1, 1, "", "LabelTools"], [31, 1, 1, "", "ScatteringTools"], [31, 1, 1, "", "Utilities"]], "AFL.agent.xarray_extensions.AFL_DatasetTools": [[31, 2, 1, "", "append"]], "AFL.agent.xarray_extensions.CompositionTools": [[31, 2, 1, "", "add_grid"], [31, 2, 1, "", "get"], [31, 2, 1, "", "get_grid"], [31, 2, 1, "", "get_grid_old"], [31, 2, 1, "", "get_range_scaled"], [31, 2, 1, "", "get_standard_scaled"], [31, 2, 1, "", "plot_3D"], [31, 2, 1, "", "plot_continuous"], [31, 2, 1, "", "plot_discrete"], [31, 2, 1, "", "plot_mask"], [31, 2, 1, "", "plot_scatter"], [31, 2, 1, "", "plot_surface"], [31, 2, 1, "", "ternary_to_xy"]], "AFL.agent.xarray_extensions.LabelTools": [[31, 2, 1, "", "make_default"], [31, 2, 1, "", "make_ordinal"]], "AFL.agent.xarray_extensions.ScatteringTools": [[31, 2, 1, "", "clean"], [31, 2, 1, "", "plot_linlin"], [31, 2, 1, "", "plot_loglog"], [31, 2, 1, "", "plot_logwaterfall"], [31, 2, 1, "", "plot_waterfall"]], "AFL.agent.xarray_extensions.Utilities": [[31, 2, 1, "", "preprocess_data"]], "AFL.double_agent": [[32, 0, 0, "-", "AcquisitionFunction"], [37, 0, 0, "-", "Boundary"], [38, 0, 0, "-", "Extrapolator"], [39, 0, 0, "-", "Generator"], [40, 0, 0, "-", "MaskGrid"], [41, 0, 0, "-", "PairMetric"], [42, 0, 0, "-", "PhaseLabeler"], [43, 0, 0, "-", "Pipeline"], [44, 0, 0, "-", "PipelineContext"], [45, 0, 0, "-", "PipelineOp"], [46, 0, 0, "-", "Preprocessor"], [49, 0, 0, "-", "plotting"], [50, 0, 0, "-", "util"], [51, 0, 0, "-", "xarray_extensions"]], "AFL.double_agent.AcquisitionFunction": [[32, 5, 1, "", "AcquisitionError"], [32, 1, 1, "", "AcquisitionFunction"], [32, 1, 1, "", "MaxValueAF"], [32, 1, 1, "", "MultimodalMask_MaxValueAF"], [32, 1, 1, "", "PseudoUCB"], [32, 1, 1, "", "RandomAF"]], "AFL.double_agent.AcquisitionFunction.AcquisitionFunction": [[32, 2, 1, "", "calculate"], [32, 2, 1, "", "exclude_previous_samples"], [32, 2, 1, "", "get_next_samples"]], "AFL.double_agent.AcquisitionFunction.MaxValueAF": [[32, 2, 1, "", "calculate"]], "AFL.double_agent.AcquisitionFunction.MultimodalMask_MaxValueAF": [[32, 2, 1, "", "calculate"]], "AFL.double_agent.AcquisitionFunction.PseudoUCB": [[32, 2, 1, "", "calculate"]], "AFL.double_agent.AcquisitionFunction.RandomAF": [[32, 2, 1, "", "calculate"]], "AFL.double_agent.Boundary": [[37, 1, 1, "", "BoundaryScore"], [37, 1, 1, "", "ConcaveHull"]], "AFL.double_agent.Boundary.BoundaryScore": [[37, 2, 1, "", "calculate"]], "AFL.double_agent.Boundary.ConcaveHull": [[37, 2, 1, "", "calculate"]], "AFL.double_agent.Extrapolator": [[38, 1, 1, "", "DummyExtrapolator"], [38, 1, 1, "", "Extrapolator"], [38, 1, 1, "", "GaussianProcessClassifier"], [38, 1, 1, "", "GaussianProcessRegressor"]], "AFL.double_agent.Extrapolator.DummyExtrapolator": [[38, 2, 1, "", "calculate"]], "AFL.double_agent.Extrapolator.Extrapolator": [[38, 2, 1, "", "calculate"], [38, 2, 1, "", "plot"]], "AFL.double_agent.Extrapolator.GaussianProcessClassifier": [[38, 2, 1, "", "calculate"]], "AFL.double_agent.Extrapolator.GaussianProcessRegressor": [[38, 2, 1, "", "calculate"]], "AFL.double_agent.Generator": [[39, 1, 1, "", "BarycentricGrid"], [39, 1, 1, "", "CartesianGrid"], [39, 1, 1, "", "GaussianPoints"], [39, 1, 1, "", "Generator"]], "AFL.double_agent.Generator.BarycentricGrid": [[39, 2, 1, "", "calculate"]], "AFL.double_agent.Generator.CartesianGrid": [[39, 2, 1, "", "calculate"]], "AFL.double_agent.Generator.GaussianPoints": [[39, 2, 1, "", "calculate"]], "AFL.double_agent.Generator.Generator": [[39, 2, 1, "", "calculate"]], "AFL.double_agent.MaskGrid": [[40, 1, 1, "", "MaskGrid"]], "AFL.double_agent.MaskGrid.MaskGrid": [[40, 2, 1, "", "calculate"]], "AFL.double_agent.PairMetric": [[41, 1, 1, "", "CombineMetric"], [41, 1, 1, "", "Delaunay"], [41, 1, 1, "", "Distance"], [41, 1, 1, "", "Dummy"], [41, 1, 1, "", "PairMetric"], [41, 1, 1, "", "Similarity"]], "AFL.double_agent.PairMetric.CombineMetric": [[41, 2, 1, "", "calculate"], [41, 2, 1, "", "prod"], [41, 2, 1, "", "sum"]], "AFL.double_agent.PairMetric.Delaunay": [[41, 2, 1, "", "calculate"]], "AFL.double_agent.PairMetric.Distance": [[41, 2, 1, "", "calculate"]], "AFL.double_agent.PairMetric.Dummy": [[41, 2, 1, "", "calculate"]], "AFL.double_agent.PairMetric.PairMetric": [[41, 2, 1, "", "apply_constraints"], [41, 2, 1, "", "calculate"], [41, 2, 1, "", "normalize1"], [41, 2, 1, "", "normalize2"]], "AFL.double_agent.PairMetric.Similarity": [[41, 2, 1, "", "calculate"]], "AFL.double_agent.PhaseLabeler": [[42, 1, 1, "", "AffinityPropagation"], [42, 1, 1, "", "GaussianMixtureModel"], [42, 1, 1, "", "PhaseLabeler"], [42, 1, 1, "", "SpectralClustering"]], "AFL.double_agent.PhaseLabeler.AffinityPropagation": [[42, 2, 1, "", "calculate"]], "AFL.double_agent.PhaseLabeler.GaussianMixtureModel": [[42, 2, 1, "", "calculate"]], "AFL.double_agent.PhaseLabeler.PhaseLabeler": [[42, 2, 1, "", "remap_labels_by_count"], [42, 2, 1, "", "silhouette"]], "AFL.double_agent.PhaseLabeler.SpectralClustering": [[42, 2, 1, "", "calculate"]], "AFL.double_agent.Pipeline": [[43, 1, 1, "", "Pipeline"]], "AFL.double_agent.Pipeline.Pipeline": [[43, 2, 1, "", "append"], [43, 2, 1, "", "calculate"], [43, 2, 1, "", "clear_outputs"], [43, 2, 1, "", "copy"], [43, 2, 1, "", "draw"], [43, 2, 1, "", "draw_plotly"], [43, 2, 1, "", "extend"], [43, 2, 1, "", "input_variables"], [43, 2, 1, "", "make_graph"], [43, 2, 1, "", "output_variables"], [43, 2, 1, "", "print"], [43, 2, 1, "", "print_code"], [43, 2, 1, "", "read"], [43, 2, 1, "", "search"], [43, 2, 1, "", "write"]], "AFL.double_agent.PipelineContext": [[44, 5, 1, "", "NoContextException"], [44, 1, 1, "", "PipelineContext"]], "AFL.double_agent.PipelineContext.PipelineContext": [[44, 6, 1, "", "contexts"], [44, 2, 1, "", "get_context"], [44, 2, 1, "", "get_contexts"]], "AFL.double_agent.PipelineOp": [[45, 1, 1, "", "PipelineOp"]], "AFL.double_agent.PipelineOp.PipelineOp": [[45, 2, 1, "", "add_to_dataset"], [45, 2, 1, "", "add_to_tiled"], [45, 2, 1, "", "calculate"], [45, 2, 1, "", "copy"], [45, 2, 1, "", "plot"]], "AFL.double_agent.Preprocessor": [[46, 1, 1, "", "ArrayToVars"], [46, 1, 1, "", "BarycentricToTernaryXY"], [46, 1, 1, "", "Destandardize"], [46, 1, 1, "", "Extrema"], [46, 1, 1, "", "Preprocessor"], [46, 1, 1, "", "SavgolFilter"], [46, 1, 1, "", "Standardize"], [46, 1, 1, "", "Subtract"], [46, 1, 1, "", "SubtractMin"], [46, 1, 1, "", "SympyTransform"], [46, 1, 1, "", "TernaryXYToBarycentric"], [46, 1, 1, "", "VarsToArray"], [46, 1, 1, "", "Zscale"], [46, 1, 1, "", "ZscaleError"]], "AFL.double_agent.Preprocessor.ArrayToVars": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.BarycentricToTernaryXY": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.Destandardize": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.Extrema": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.Preprocessor": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.SavgolFilter": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.Standardize": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.Subtract": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.SubtractMin": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.SympyTransform": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.TernaryXYToBarycentric": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.VarsToArray": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.Zscale": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.ZscaleError": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.plotting": [[49, 3, 1, "", "plot_scatter_mpl"], [49, 3, 1, "", "plot_surface_mpl"]], "AFL.double_agent.util": [[50, 3, 1, "", "extract_parameters"], [50, 3, 1, "", "listify"]], "AFL.double_agent.xarray_extensions": [[51, 1, 1, "", "AFL_DataArrayTools"], [51, 1, 1, "", "AFL_DatasetTools"], [51, 1, 1, "", "CompositionTools"], [51, 1, 1, "", "LabelTools"], [51, 1, 1, "", "ScatteringTools"], [51, 1, 1, "", "Utilities"]], "AFL.double_agent.xarray_extensions.AFL_DatasetTools": [[51, 2, 1, "", "append"]], "AFL.double_agent.xarray_extensions.CompositionTools": [[51, 2, 1, "", "add_grid"], [51, 2, 1, "", "get"], [51, 2, 1, "", "get_grid"], [51, 2, 1, "", "get_grid_old"], [51, 2, 1, "", "get_range_scaled"], [51, 2, 1, "", "get_standard_scaled"], [51, 2, 1, "", "plot_3D"], [51, 2, 1, "", "plot_mask"], [51, 2, 1, "", "plot_scatter"], [51, 2, 1, "", "plot_surface"], [51, 2, 1, "", "ternary_to_xy"]], "AFL.double_agent.xarray_extensions.LabelTools": [[51, 2, 1, "", "make_default"], [51, 2, 1, "", "make_ordinal"]], "AFL.double_agent.xarray_extensions.ScatteringTools": [[51, 2, 1, "", "clean"], [51, 2, 1, "", "plot_linlin"], [51, 2, 1, "", "plot_loglog"], [51, 2, 1, "", "plot_logwaterfall"], [51, 2, 1, "", "plot_waterfall"]], "AFL.double_agent.xarray_extensions.Utilities": [[51, 2, 1, "", "preprocess_data"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:exception", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"pipelin": [0, 2, 5, 43, 48, 53], "context": 0, "manag": 0, "explan": 1, "topic": 1, "append": 3, "data": [3, 4, 27, 53], "xarrai": [3, 4], "dataset": [3, 4], "build": [4, 53], "an": 4, "from": [4, 56], "scratch": 4, "first": 4, "step": [4, 46, 53, 54], "composit": [4, 53], "simul": 4, "measur": [4, 53], "grid": 4, "save": 4, "disk": 4, "conclus": [4, 5, 53], "creat": 5, "new": 5, "oper": [5, 48], "how": 6, "To": 6, "guid": 6, "afl": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "agent": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 52], "kei": 7, "featur": 7, "instal": [7, 56], "content": 7, "acquisitionfunct": [8, 32], "modul": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51], "agentcli": [9, 33], "dowshampoo_sampledriv": 10, "ei_acquisitionfunct": 11, "gaussianprocess": 12, "hscedgaussianprocess": 13, "metric": 14, "multimodal_al_sampledriv": 15, "multimodal_agentdriv": 16, "phaselabel": [17, 42], "phasemap": 18, "phasemap_panda": 19, "sans_al_sampledriv": 20, "sas_al_sampledriv": 21, "sas_agentdriv": 22, "sas_grid_al_sampledriv": 23, "saxs_al_sampledriv": 24, "ucb_acquisitionfunct": 25, "watchdog": 26, "packag": [27, 48], "core": [27, 48], "compon": [27, 48], "driver": [27, 48], "autom": 27, "process": 27, "reduce_usax": 28, "util": [29, 48, 50], "vsas_nodeck_al_sampledriv": 30, "xarray_extens": [31, 51], "double_ag": [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "agentdriv": 34, "autosa": 35, "autosas_driv": 36, "boundari": 37, "extrapol": [38, 53], "gener": 39, "maskgrid": 40, "pairmetr": 41, "usag": 43, "pipelinecontext": 44, "pipelineop": 45, "preprocessor": 46, "tensorflowextrapol": 47, "apiserv": 48, "plot": 49, "refer": 52, "doubl": 52, "api": 52, "load": 53, "input": 53, "1": 53, "preprocess": 53, "2": 53, "savitski": 53, "golai": 53, "filter": 53, "calcul": 53, "similar": 53, "between": 53, "3": 53, "cluster": 53, "base": 53, "4": 53, "label": 53, "5": 53, "next": [53, 54], "sampl": 53, "full": 53, "quick": 54, "start": 54, "exampl": 54, "understand": 54, "tutori": 55, "setup": 56, "prerequisit": 56, "basic": 56, "develop": 56, "option": 56, "depend": 56, "specif": 56, "branch": 56, "offlin": 56, "troubleshoot": 56}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Pipeline Context Manager": [[0, "pipeline-context-manager"]], "Explanations": [[1, "explanations"]], "Topics:": [[1, null]], "Pipelines": [[2, "pipelines"]], "Appending Data to xarray.Datasets": [[3, "appending-data-to-xarray-datasets"]], "Build an xarray.Dataset from Scratch": [[4, "Build-an-xarray.Dataset-from-Scratch"]], "First Steps": [[4, "First-Steps"]], "Compositions": [[4, "Compositions"]], "Simulated Measurement Data": [[4, "Simulated-Measurement-Data"]], "Composition Grid": [[4, "Composition-Grid"]], "Saving the Dataset to disk": [[4, "Saving-the-Dataset-to-disk"]], "Conclusion": [[4, "Conclusion"], [5, "Conclusion"], [53, "Conclusion"]], "Creating a New Pipeline Operation": [[5, "Creating-a-New-Pipeline-Operation"]], "How-To Guides": [[6, "how-to-guides"]], "AFL-agent": [[7, "afl-agent"]], "Key Features": [[7, "key-features"]], "Installation": [[7, "installation"]], "Contents": [[7, "contents"]], "Contents:": [[7, null]], "AFL.agent.AcquisitionFunction module": [[8, "module-AFL.agent.AcquisitionFunction"]], "AFL.agent.AgentClient module": [[9, "afl-agent-agentclient-module"]], "AFL.agent.DowShampoo_SampleDriver module": [[10, "afl-agent-dowshampoo-sampledriver-module"]], "AFL.agent.EI_AcquisitionFunction module": [[11, "module-AFL.agent.EI_AcquisitionFunction"]], "AFL.agent.GaussianProcess module": [[12, "afl-agent-gaussianprocess-module"]], "AFL.agent.HscedGaussianProcess module": [[13, "afl-agent-hscedgaussianprocess-module"]], "AFL.agent.Metric module": [[14, "module-AFL.agent.Metric"]], "AFL.agent.Multimodal_AL_SampleDriver module": [[15, "afl-agent-multimodal-al-sampledriver-module"]], "AFL.agent.Multimodal_AgentDriver module": [[16, "afl-agent-multimodal-agentdriver-module"]], "AFL.agent.PhaseLabeler module": [[17, "module-AFL.agent.PhaseLabeler"]], "AFL.agent.PhaseMap module": [[18, "module-AFL.agent.PhaseMap"]], "AFL.agent.PhaseMap_pandas module": [[19, "module-AFL.agent.PhaseMap_pandas"]], "AFL.agent.SANS_AL_SampleDriver module": [[20, "afl-agent-sans-al-sampledriver-module"]], "AFL.agent.SAS_AL_SampleDriver module": [[21, "afl-agent-sas-al-sampledriver-module"]], "AFL.agent.SAS_AgentDriver module": [[22, "afl-agent-sas-agentdriver-module"]], "AFL.agent.SAS_Grid_AL_SampleDriver module": [[23, "afl-agent-sas-grid-al-sampledriver-module"]], "AFL.agent.SAXS_AL_SampleDriver module": [[24, "afl-agent-saxs-al-sampledriver-module"]], "AFL.agent.UCB_AcquisitionFunction module": [[25, "module-AFL.agent.UCB_AcquisitionFunction"]], "AFL.agent.WatchDog module": [[26, "afl-agent-watchdog-module"]], "AFL.agent package": [[27, "afl-agent-package"]], "Core Components": [[27, "core-components"], [48, "core-components"]], "Drivers and Automation": [[27, "drivers-and-automation"]], "Data Processing": [[27, "data-processing"]], "AFL.agent.reduce_usaxs module": [[28, "module-AFL.agent.reduce_usaxs"]], "AFL.agent.util module": [[29, "module-AFL.agent.util"]], "AFL.agent.vSAS_NoDeck_AL_SampleDriver module": [[30, "afl-agent-vsas-nodeck-al-sampledriver-module"]], "AFL.agent.xarray_extensions module": [[31, "module-AFL.agent.xarray_extensions"]], "AFL.double_agent.AcquisitionFunction module": [[32, "module-AFL.double_agent.AcquisitionFunction"]], "AFL.double_agent.AgentClient module": [[33, "afl-double-agent-agentclient-module"]], "AFL.double_agent.AgentDriver module": [[34, "afl-double-agent-agentdriver-module"]], "AFL.double_agent.AutoSAS module": [[35, "afl-double-agent-autosas-module"]], "AFL.double_agent.AutoSAS_Driver module": [[36, "afl-double-agent-autosas-driver-module"]], "AFL.double_agent.Boundary module": [[37, "module-AFL.double_agent.Boundary"]], "AFL.double_agent.Extrapolator module": [[38, "module-AFL.double_agent.Extrapolator"]], "AFL.double_agent.Generator module": [[39, "module-AFL.double_agent.Generator"]], "AFL.double_agent.MaskGrid module": [[40, "module-AFL.double_agent.MaskGrid"]], "AFL.double_agent.PairMetric module": [[41, "module-AFL.double_agent.PairMetric"]], "AFL.double_agent.PhaseLabeler module": [[42, "module-AFL.double_agent.PhaseLabeler"]], "AFL.double_agent.Pipeline module": [[43, "module-AFL.double_agent.Pipeline"]], "Usage": [[43, "usage"]], "AFL.double_agent.PipelineContext module": [[44, "module-AFL.double_agent.PipelineContext"]], "AFL.double_agent.PipelineOp module": [[45, "module-AFL.double_agent.PipelineOp"]], "AFL.double_agent.Preprocessor module": [[46, "module-AFL.double_agent.Preprocessor"]], "Steps": [[46, "steps"]], "AFL.double_agent.TensorFlowExtrapolator module": [[47, "afl-double-agent-tensorflowextrapolator-module"]], "AFL.double_agent Package": [[48, "afl-double-agent-package"]], "Pipeline Operations": [[48, "pipeline-operations"]], "Utilities": [[48, "utilities"]], "APIServer Drivers": [[48, "apiserver-drivers"]], "AFL.double_agent.plotting module": [[49, "module-AFL.double_agent.plotting"]], "AFL.double_agent.util module": [[50, "module-AFL.double_agent.util"]], "AFL.double_agent.xarray_extensions module": [[51, "module-AFL.double_agent.xarray_extensions"]], "Reference": [[52, "reference"]], "Double Agent API": [[52, "double-agent-api"]], "Agent API": [[52, "agent-api"]], "Building Pipelines": [[53, "Building-Pipelines"]], "Load Input Data": [[53, "Load-Input-Data"]], "Step 1: Composition Preprocessing": [[53, "Step-1:-Composition-Preprocessing"]], "Step 2: Savitsky-Golay Filter": [[53, "Step-2:-Savitsky-Golay-Filter"]], "Step 2: Calculate Similarity between Measurement Data": [[53, "Step-2:-Calculate-Similarity-between-Measurement-Data"]], "Step 3: Cluster Measurement Data based on Similarity": [[53, "Step-3:-Cluster-Measurement-Data-based-on-Similarity"]], "Step 4: Extrapolate Cluster Labels": [[53, "Step-4:-Extrapolate-Cluster-Labels"]], "Step 5: Calculate Next Sample": [[53, "Step-5:-Calculate-Next-Sample"]], "Full Pipeline": [[53, "Full-Pipeline"]], "Quick Start Example": [[54, "quick-start-example"]], "Understanding the Example": [[54, "understanding-the-example"]], "Next Steps": [[54, "next-steps"]], "Tutorials": [[55, "tutorials"]], "Setup": [[56, "setup"]], "Prerequisites": [[56, "prerequisites"]], "Basic Installation": [[56, "basic-installation"]], "Development Installation": [[56, "development-installation"]], "Optional Dependencies": [[56, "optional-dependencies"]], "Installation from a Specific Branch": [[56, "installation-from-a-specific-branch"]], "Offline Installation": [[56, "offline-installation"]], "Troubleshooting": [[56, "troubleshooting"]]}, "indexentries": {"afl.agent.acquisitionfunction": [[8, "module-AFL.agent.AcquisitionFunction"]], "acquisition (class in afl.agent.acquisitionfunction)": [[8, "AFL.agent.AcquisitionFunction.Acquisition"]], "iterationcombined (class in afl.agent.acquisitionfunction)": [[8, "AFL.agent.AcquisitionFunction.IterationCombined"]], "lowestdensity (class in afl.agent.acquisitionfunction)": [[8, "AFL.agent.AcquisitionFunction.LowestDensity"]], "random (class in afl.agent.acquisitionfunction)": [[8, "AFL.agent.AcquisitionFunction.Random"]], "variance (class in afl.agent.acquisitionfunction)": [[8, "AFL.agent.AcquisitionFunction.Variance"]], "add_exclusion() (afl.agent.acquisitionfunction.acquisition method)": [[8, "AFL.agent.AcquisitionFunction.Acquisition.add_exclusion"]], "calculate_metric() (afl.agent.acquisitionfunction.iterationcombined method)": [[8, "AFL.agent.AcquisitionFunction.IterationCombined.calculate_metric"]], "calculate_metric() (afl.agent.acquisitionfunction.lowestdensity method)": [[8, "AFL.agent.AcquisitionFunction.LowestDensity.calculate_metric"]], "calculate_metric() (afl.agent.acquisitionfunction.random method)": [[8, "AFL.agent.AcquisitionFunction.Random.calculate_metric"]], "calculate_metric() (afl.agent.acquisitionfunction.variance method)": [[8, "AFL.agent.AcquisitionFunction.Variance.calculate_metric"]], "copy() (afl.agent.acquisitionfunction.acquisition method)": [[8, "AFL.agent.AcquisitionFunction.Acquisition.copy"]], "execute() (afl.agent.acquisitionfunction.acquisition method)": [[8, "AFL.agent.AcquisitionFunction.Acquisition.execute"]], "gauss2d() (in module afl.agent.acquisitionfunction)": [[8, "AFL.agent.AcquisitionFunction.gauss2d"]], "get_next_sample() (afl.agent.acquisitionfunction.acquisition method)": [[8, "AFL.agent.AcquisitionFunction.Acquisition.get_next_sample"]], "module": [[8, "module-AFL.agent.AcquisitionFunction"], [11, "module-AFL.agent.EI_AcquisitionFunction"], [14, "module-AFL.agent.Metric"], [17, "module-AFL.agent.PhaseLabeler"], [18, "module-AFL.agent.PhaseMap"], [19, "module-AFL.agent.PhaseMap_pandas"], [25, "module-AFL.agent.UCB_AcquisitionFunction"], [28, "module-AFL.agent.reduce_usaxs"], [29, "module-AFL.agent.util"], [31, "module-AFL.agent.xarray_extensions"], [32, "module-AFL.double_agent.AcquisitionFunction"], [37, "module-AFL.double_agent.Boundary"], [38, "module-AFL.double_agent.Extrapolator"], [39, "module-AFL.double_agent.Generator"], [40, "module-AFL.double_agent.MaskGrid"], [41, "module-AFL.double_agent.PairMetric"], [42, "module-AFL.double_agent.PhaseLabeler"], [43, "module-AFL.double_agent.Pipeline"], [44, "module-AFL.double_agent.PipelineContext"], [45, "module-AFL.double_agent.PipelineOp"], [46, "module-AFL.double_agent.Preprocessor"], [49, "module-AFL.double_agent.plotting"], [50, "module-AFL.double_agent.util"], [51, "module-AFL.double_agent.xarray_extensions"]], "plot() (afl.agent.acquisitionfunction.acquisition method)": [[8, "AFL.agent.AcquisitionFunction.Acquisition.plot"]], "reset_phasemap() (afl.agent.acquisitionfunction.acquisition method)": [[8, "AFL.agent.AcquisitionFunction.Acquisition.reset_phasemap"]], "reset_phasemap() (afl.agent.acquisitionfunction.iterationcombined method)": [[8, "AFL.agent.AcquisitionFunction.IterationCombined.reset_phasemap"]], "afl.agent.ei_acquisitionfunction": [[11, "module-AFL.agent.EI_AcquisitionFunction"]], "acquisition (class in afl.agent.ei_acquisitionfunction)": [[11, "AFL.agent.EI_AcquisitionFunction.Acquisition"]], "ei (class in afl.agent.ei_acquisitionfunction)": [[11, "AFL.agent.EI_AcquisitionFunction.EI"]], "add_exclusion() (afl.agent.ei_acquisitionfunction.acquisition method)": [[11, "AFL.agent.EI_AcquisitionFunction.Acquisition.add_exclusion"]], "calculate_metric() (afl.agent.ei_acquisitionfunction.ei method)": [[11, "AFL.agent.EI_AcquisitionFunction.EI.calculate_metric"]], "calculate_metric() (afl.agent.ei_acquisitionfunction.pseudoei method)": [[11, "AFL.agent.EI_AcquisitionFunction.pseudoEI.calculate_metric"]], "copy() (afl.agent.ei_acquisitionfunction.acquisition method)": [[11, "AFL.agent.EI_AcquisitionFunction.Acquisition.copy"]], "execute() (afl.agent.ei_acquisitionfunction.acquisition method)": [[11, "AFL.agent.EI_AcquisitionFunction.Acquisition.execute"]], "gauss2d() (in module afl.agent.ei_acquisitionfunction)": [[11, "AFL.agent.EI_AcquisitionFunction.gauss2d"]], "get_next_sample() (afl.agent.ei_acquisitionfunction.acquisition method)": [[11, "AFL.agent.EI_AcquisitionFunction.Acquisition.get_next_sample"]], "plot() (afl.agent.ei_acquisitionfunction.acquisition method)": [[11, "AFL.agent.EI_AcquisitionFunction.Acquisition.plot"]], "pseudoei (class in afl.agent.ei_acquisitionfunction)": [[11, "AFL.agent.EI_AcquisitionFunction.pseudoEI"]], "reset_phasemap() (afl.agent.ei_acquisitionfunction.acquisition method)": [[11, "AFL.agent.EI_AcquisitionFunction.Acquisition.reset_phasemap"]], "afl.agent.metric": [[14, "module-AFL.agent.Metric"]], "delaunay (class in afl.agent.metric)": [[14, "AFL.agent.Metric.Delaunay"]], "distance (class in afl.agent.metric)": [[14, "AFL.agent.Metric.Distance"]], "dummy (class in afl.agent.metric)": [[14, "AFL.agent.Metric.Dummy"]], "metric (class in afl.agent.metric)": [[14, "AFL.agent.Metric.Metric"]], "multimetric (class in afl.agent.metric)": [[14, "AFL.agent.Metric.MultiMetric"]], "similarity (class in afl.agent.metric)": [[14, "AFL.agent.Metric.Similarity"]], "apply_constraints() (afl.agent.metric.metric method)": [[14, "AFL.agent.Metric.Metric.apply_constraints"]], "calculate() (afl.agent.metric.delaunay method)": [[14, "AFL.agent.Metric.Delaunay.calculate"]], "calculate() (afl.agent.metric.distance method)": [[14, "AFL.agent.Metric.Distance.calculate"]], "calculate() (afl.agent.metric.dummy method)": [[14, "AFL.agent.Metric.Dummy.calculate"]], "calculate() (afl.agent.metric.metric method)": [[14, "AFL.agent.Metric.Metric.calculate"]], "calculate() (afl.agent.metric.multimetric method)": [[14, "AFL.agent.Metric.MultiMetric.calculate"]], "calculate() (afl.agent.metric.similarity method)": [[14, "AFL.agent.Metric.Similarity.calculate"]], "copy() (afl.agent.metric.metric method)": [[14, "AFL.agent.Metric.Metric.copy"]], "listify() (in module afl.agent.metric)": [[14, "AFL.agent.Metric.listify"]], "normalize1() (afl.agent.metric.metric method)": [[14, "AFL.agent.Metric.Metric.normalize1"]], "normalize2() (afl.agent.metric.metric method)": [[14, "AFL.agent.Metric.Metric.normalize2"]], "prod() (afl.agent.metric.multimetric method)": [[14, "AFL.agent.Metric.MultiMetric.prod"]], "sum() (afl.agent.metric.multimetric method)": [[14, "AFL.agent.Metric.MultiMetric.sum"]], "to_dict() (afl.agent.metric.metric method)": [[14, "AFL.agent.Metric.Metric.to_dict"]], "to_dict() (afl.agent.metric.multimetric method)": [[14, "AFL.agent.Metric.MultiMetric.to_dict"]], "update_name() (afl.agent.metric.multimetric method)": [[14, "AFL.agent.Metric.MultiMetric.update_name"]], "afl.agent.phaselabeler": [[17, "module-AFL.agent.PhaseLabeler"]], "affinitypropagation (class in afl.agent.phaselabeler)": [[17, "AFL.agent.PhaseLabeler.AffinityPropagation"]], "dbscan (class in afl.agent.phaselabeler)": [[17, "AFL.agent.PhaseLabeler.DBSCAN"]], "gaussianmixturemodel (class in afl.agent.phaselabeler)": [[17, "AFL.agent.PhaseLabeler.GaussianMixtureModel"]], "kerasclassifier (class in afl.agent.phaselabeler)": [[17, "AFL.agent.PhaseLabeler.KerasClassifier"]], "phaselabeler (class in afl.agent.phaselabeler)": [[17, "AFL.agent.PhaseLabeler.PhaseLabeler"]], "spectralclustering (class in afl.agent.phaselabeler)": [[17, "AFL.agent.PhaseLabeler.SpectralClustering"]], "copy() (afl.agent.phaselabeler.phaselabeler method)": [[17, "AFL.agent.PhaseLabeler.PhaseLabeler.copy"]], "label() (afl.agent.phaselabeler.affinitypropagation method)": [[17, "AFL.agent.PhaseLabeler.AffinityPropagation.label"]], "label() (afl.agent.phaselabeler.dbscan method)": [[17, "AFL.agent.PhaseLabeler.DBSCAN.label"]], "label() (afl.agent.phaselabeler.gaussianmixturemodel method)": [[17, "AFL.agent.PhaseLabeler.GaussianMixtureModel.label"]], "label() (afl.agent.phaselabeler.kerasclassifier method)": [[17, "AFL.agent.PhaseLabeler.KerasClassifier.label"]], "label() (afl.agent.phaselabeler.phaselabeler method)": [[17, "AFL.agent.PhaseLabeler.PhaseLabeler.label"]], "label() (afl.agent.phaselabeler.spectralclustering method)": [[17, "AFL.agent.PhaseLabeler.SpectralClustering.label"]], "remap_labels_by_count() (afl.agent.phaselabeler.phaselabeler method)": [[17, "AFL.agent.PhaseLabeler.PhaseLabeler.remap_labels_by_count"]], "silhouette() (afl.agent.phaselabeler.phaselabeler method)": [[17, "AFL.agent.PhaseLabeler.PhaseLabeler.silhouette"]], "afl.agent.phasemap": [[18, "module-AFL.agent.PhaseMap"]], "afl.agent.phasemap_pandas": [[19, "module-AFL.agent.PhaseMap_pandas"]], "phasemap (class in afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap"]], "phasemapmodel (class in afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMapModel"]], "phasemapview_mpl (class in afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMapView_MPL"]], "append() (afl.agent.phasemap_pandas.phasemap method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.append"]], "append() (afl.agent.phasemap_pandas.phasemapmodel method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMapModel.append"]], "cart2ternary() (in module afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.cart2ternary"]], "components (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.components"]], "composition_grid() (in module afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.composition_grid"]], "compositions (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.compositions"]], "copy() (afl.agent.phasemap_pandas.phasemap method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.copy"]], "format_plot_ternary() (in module afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.format_plot_ternary"]], "label_encoder (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.label_encoder"]], "labels (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.labels"]], "labels_ordinal (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.labels_ordinal"]], "lines() (afl.agent.phasemap_pandas.phasemapview_mpl method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMapView_MPL.lines"]], "load() (afl.agent.phasemap_pandas.phasemap class method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.load"]], "make_axes() (afl.agent.phasemap_pandas.phasemapview_mpl method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMapView_MPL.make_axes"]], "measurements (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.measurements"]], "ncomponents (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.ncomponents"]], "phasemap_grid_factory() (in module afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.phasemap_grid_factory"]], "plot() (afl.agent.phasemap_pandas.phasemap method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.plot"]], "project() (afl.agent.phasemap_pandas.phasemap method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.project"]], "rescale_compositions() (in module afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.rescale_compositions"]], "save() (afl.agent.phasemap_pandas.phasemap method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.save"]], "scatter() (afl.agent.phasemap_pandas.phasemapview_mpl method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMapView_MPL.scatter"]], "scatter_ternary() (afl.agent.phasemap_pandas.phasemapview_mpl method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMapView_MPL.scatter_ternary"]], "shape (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.shape"]], "size (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.size"]], "slice() (afl.agent.phasemap_pandas.phasemap method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.slice"]], "ternary2cart() (in module afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.ternary2cart"]], "update_encoder() (afl.agent.phasemap_pandas.phasemap method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.update_encoder"]], "afl.agent.ucb_acquisitionfunction": [[25, "module-AFL.agent.UCB_AcquisitionFunction"]], "acquisition (class in afl.agent.ucb_acquisitionfunction)": [[25, "AFL.agent.UCB_AcquisitionFunction.Acquisition"]], "add_exclusion() (afl.agent.ucb_acquisitionfunction.acquisition method)": [[25, "AFL.agent.UCB_AcquisitionFunction.Acquisition.add_exclusion"]], "calculate_metric() (afl.agent.ucb_acquisitionfunction.pseudoucb method)": [[25, "AFL.agent.UCB_AcquisitionFunction.pseudoUCB.calculate_metric"]], "copy() (afl.agent.ucb_acquisitionfunction.acquisition method)": [[25, "AFL.agent.UCB_AcquisitionFunction.Acquisition.copy"]], "execute() (afl.agent.ucb_acquisitionfunction.acquisition method)": [[25, "AFL.agent.UCB_AcquisitionFunction.Acquisition.execute"]], "gauss2d() (in module afl.agent.ucb_acquisitionfunction)": [[25, "AFL.agent.UCB_AcquisitionFunction.gauss2d"]], "get_next_sample() (afl.agent.ucb_acquisitionfunction.acquisition method)": [[25, "AFL.agent.UCB_AcquisitionFunction.Acquisition.get_next_sample"]], "get_next_sample_passthrough() (in module afl.agent.ucb_acquisitionfunction)": [[25, "AFL.agent.UCB_AcquisitionFunction.get_next_sample_passthrough"]], "plot() (afl.agent.ucb_acquisitionfunction.acquisition method)": [[25, "AFL.agent.UCB_AcquisitionFunction.Acquisition.plot"]], "pseudoucb (class in afl.agent.ucb_acquisitionfunction)": [[25, "AFL.agent.UCB_AcquisitionFunction.pseudoUCB"]], "reset_phasemap() (afl.agent.ucb_acquisitionfunction.acquisition method)": [[25, "AFL.agent.UCB_AcquisitionFunction.Acquisition.reset_phasemap"]], "afl.agent.reduce_usaxs": [[28, "module-AFL.agent.reduce_usaxs"]], "amplifier_corrections() (in module afl.agent.reduce_usaxs)": [[28, "AFL.agent.reduce_usaxs.amplifier_corrections"]], "calc_r_q() (in module afl.agent.reduce_usaxs)": [[28, "AFL.agent.reduce_usaxs.calc_R_Q"]], "centroid() (in module afl.agent.reduce_usaxs)": [[28, "AFL.agent.reduce_usaxs.centroid"]], "reduce_uascan() (in module afl.agent.reduce_usaxs)": [[28, "AFL.agent.reduce_usaxs.reduce_uascan"]], "remove_masked_data() (in module afl.agent.reduce_usaxs)": [[28, "AFL.agent.reduce_usaxs.remove_masked_data"]], "afl.agent.util": [[29, "module-AFL.agent.util"]], "composition_grid() (in module afl.agent.util)": [[29, "AFL.agent.util.composition_grid"]], "composition_grid_ternary() (in module afl.agent.util)": [[29, "AFL.agent.util.composition_grid_ternary"]], "mpl_format_ternary() (in module afl.agent.util)": [[29, "AFL.agent.util.mpl_format_ternary"]], "ternary_to_xy() (in module afl.agent.util)": [[29, "AFL.agent.util.ternary_to_xy"]], "afl.agent.xarray_extensions": [[31, "module-AFL.agent.xarray_extensions"]], "afl_dataarraytools (class in afl.agent.xarray_extensions)": [[31, "AFL.agent.xarray_extensions.AFL_DataArrayTools"]], "afl_datasettools (class in afl.agent.xarray_extensions)": [[31, "AFL.agent.xarray_extensions.AFL_DatasetTools"]], "compositiontools (class in afl.agent.xarray_extensions)": [[31, "AFL.agent.xarray_extensions.CompositionTools"]], "labeltools (class in afl.agent.xarray_extensions)": [[31, "AFL.agent.xarray_extensions.LabelTools"]], "scatteringtools (class in afl.agent.xarray_extensions)": [[31, "AFL.agent.xarray_extensions.ScatteringTools"]], "utilities (class in afl.agent.xarray_extensions)": [[31, "AFL.agent.xarray_extensions.Utilities"]], "add_grid() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.add_grid"]], "append() (afl.agent.xarray_extensions.afl_datasettools method)": [[31, "AFL.agent.xarray_extensions.AFL_DatasetTools.append"]], "clean() (afl.agent.xarray_extensions.scatteringtools method)": [[31, "AFL.agent.xarray_extensions.ScatteringTools.clean"]], "get() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.get"]], "get_grid() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.get_grid"]], "get_grid_old() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.get_grid_old"]], "get_range_scaled() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.get_range_scaled"]], "get_standard_scaled() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.get_standard_scaled"]], "make_default() (afl.agent.xarray_extensions.labeltools method)": [[31, "AFL.agent.xarray_extensions.LabelTools.make_default"]], "make_ordinal() (afl.agent.xarray_extensions.labeltools method)": [[31, "AFL.agent.xarray_extensions.LabelTools.make_ordinal"]], "plot_3d() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.plot_3D"]], "plot_continuous() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.plot_continuous"]], "plot_discrete() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.plot_discrete"]], "plot_linlin() (afl.agent.xarray_extensions.scatteringtools method)": [[31, "AFL.agent.xarray_extensions.ScatteringTools.plot_linlin"]], "plot_loglog() (afl.agent.xarray_extensions.scatteringtools method)": [[31, "AFL.agent.xarray_extensions.ScatteringTools.plot_loglog"]], "plot_logwaterfall() (afl.agent.xarray_extensions.scatteringtools method)": [[31, "AFL.agent.xarray_extensions.ScatteringTools.plot_logwaterfall"]], "plot_mask() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.plot_mask"]], "plot_scatter() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.plot_scatter"]], "plot_surface() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.plot_surface"]], "plot_waterfall() (afl.agent.xarray_extensions.scatteringtools method)": [[31, "AFL.agent.xarray_extensions.ScatteringTools.plot_waterfall"]], "preprocess_data() (afl.agent.xarray_extensions.utilities method)": [[31, "AFL.agent.xarray_extensions.Utilities.preprocess_data"]], "ternary_to_xy() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.ternary_to_xy"]], "afl.double_agent.acquisitionfunction": [[32, "module-AFL.double_agent.AcquisitionFunction"]], "acquisitionerror": [[32, "AFL.double_agent.AcquisitionFunction.AcquisitionError"]], "acquisitionfunction (class in afl.double_agent.acquisitionfunction)": [[32, "AFL.double_agent.AcquisitionFunction.AcquisitionFunction"]], "maxvalueaf (class in afl.double_agent.acquisitionfunction)": [[32, "AFL.double_agent.AcquisitionFunction.MaxValueAF"]], "multimodalmask_maxvalueaf (class in afl.double_agent.acquisitionfunction)": [[32, "AFL.double_agent.AcquisitionFunction.MultimodalMask_MaxValueAF"]], "pseudoucb (class in afl.double_agent.acquisitionfunction)": [[32, "AFL.double_agent.AcquisitionFunction.PseudoUCB"]], "randomaf (class in afl.double_agent.acquisitionfunction)": [[32, "AFL.double_agent.AcquisitionFunction.RandomAF"]], "calculate() (afl.double_agent.acquisitionfunction.acquisitionfunction method)": [[32, "AFL.double_agent.AcquisitionFunction.AcquisitionFunction.calculate"]], "calculate() (afl.double_agent.acquisitionfunction.maxvalueaf method)": [[32, "AFL.double_agent.AcquisitionFunction.MaxValueAF.calculate"]], "calculate() (afl.double_agent.acquisitionfunction.multimodalmask_maxvalueaf method)": [[32, "AFL.double_agent.AcquisitionFunction.MultimodalMask_MaxValueAF.calculate"]], "calculate() (afl.double_agent.acquisitionfunction.pseudoucb method)": [[32, "AFL.double_agent.AcquisitionFunction.PseudoUCB.calculate"]], "calculate() (afl.double_agent.acquisitionfunction.randomaf method)": [[32, "AFL.double_agent.AcquisitionFunction.RandomAF.calculate"]], "exclude_previous_samples() (afl.double_agent.acquisitionfunction.acquisitionfunction method)": [[32, "AFL.double_agent.AcquisitionFunction.AcquisitionFunction.exclude_previous_samples"]], "get_next_samples() (afl.double_agent.acquisitionfunction.acquisitionfunction method)": [[32, "AFL.double_agent.AcquisitionFunction.AcquisitionFunction.get_next_samples"]], "afl.double_agent.boundary": [[37, "module-AFL.double_agent.Boundary"]], "boundaryscore (class in afl.double_agent.boundary)": [[37, "AFL.double_agent.Boundary.BoundaryScore"]], "concavehull (class in afl.double_agent.boundary)": [[37, "AFL.double_agent.Boundary.ConcaveHull"]], "calculate() (afl.double_agent.boundary.boundaryscore method)": [[37, "AFL.double_agent.Boundary.BoundaryScore.calculate"]], "calculate() (afl.double_agent.boundary.concavehull method)": [[37, "AFL.double_agent.Boundary.ConcaveHull.calculate"]], "afl.double_agent.extrapolator": [[38, "module-AFL.double_agent.Extrapolator"]], "dummyextrapolator (class in afl.double_agent.extrapolator)": [[38, "AFL.double_agent.Extrapolator.DummyExtrapolator"]], "extrapolator (class in afl.double_agent.extrapolator)": [[38, "AFL.double_agent.Extrapolator.Extrapolator"]], "gaussianprocessclassifier (class in afl.double_agent.extrapolator)": [[38, "AFL.double_agent.Extrapolator.GaussianProcessClassifier"]], "gaussianprocessregressor (class in afl.double_agent.extrapolator)": [[38, "AFL.double_agent.Extrapolator.GaussianProcessRegressor"]], "calculate() (afl.double_agent.extrapolator.dummyextrapolator method)": [[38, "AFL.double_agent.Extrapolator.DummyExtrapolator.calculate"]], "calculate() (afl.double_agent.extrapolator.extrapolator method)": [[38, "AFL.double_agent.Extrapolator.Extrapolator.calculate"]], "calculate() (afl.double_agent.extrapolator.gaussianprocessclassifier method)": [[38, "AFL.double_agent.Extrapolator.GaussianProcessClassifier.calculate"]], "calculate() (afl.double_agent.extrapolator.gaussianprocessregressor method)": [[38, "AFL.double_agent.Extrapolator.GaussianProcessRegressor.calculate"]], "plot() (afl.double_agent.extrapolator.extrapolator method)": [[38, "AFL.double_agent.Extrapolator.Extrapolator.plot"]], "afl.double_agent.generator": [[39, "module-AFL.double_agent.Generator"]], "barycentricgrid (class in afl.double_agent.generator)": [[39, "AFL.double_agent.Generator.BarycentricGrid"]], "cartesiangrid (class in afl.double_agent.generator)": [[39, "AFL.double_agent.Generator.CartesianGrid"]], "gaussianpoints (class in afl.double_agent.generator)": [[39, "AFL.double_agent.Generator.GaussianPoints"]], "generator (class in afl.double_agent.generator)": [[39, "AFL.double_agent.Generator.Generator"]], "calculate() (afl.double_agent.generator.barycentricgrid method)": [[39, "AFL.double_agent.Generator.BarycentricGrid.calculate"]], "calculate() (afl.double_agent.generator.cartesiangrid method)": [[39, "AFL.double_agent.Generator.CartesianGrid.calculate"]], "calculate() (afl.double_agent.generator.gaussianpoints method)": [[39, "AFL.double_agent.Generator.GaussianPoints.calculate"]], "calculate() (afl.double_agent.generator.generator method)": [[39, "AFL.double_agent.Generator.Generator.calculate"]], "afl.double_agent.maskgrid": [[40, "module-AFL.double_agent.MaskGrid"]], "maskgrid (class in afl.double_agent.maskgrid)": [[40, "AFL.double_agent.MaskGrid.MaskGrid"]], "calculate() (afl.double_agent.maskgrid.maskgrid method)": [[40, "AFL.double_agent.MaskGrid.MaskGrid.calculate"]], "afl.double_agent.pairmetric": [[41, "module-AFL.double_agent.PairMetric"]], "combinemetric (class in afl.double_agent.pairmetric)": [[41, "AFL.double_agent.PairMetric.CombineMetric"]], "delaunay (class in afl.double_agent.pairmetric)": [[41, "AFL.double_agent.PairMetric.Delaunay"]], "distance (class in afl.double_agent.pairmetric)": [[41, "AFL.double_agent.PairMetric.Distance"]], "dummy (class in afl.double_agent.pairmetric)": [[41, "AFL.double_agent.PairMetric.Dummy"]], "pairmetric (class in afl.double_agent.pairmetric)": [[41, "AFL.double_agent.PairMetric.PairMetric"]], "similarity (class in afl.double_agent.pairmetric)": [[41, "AFL.double_agent.PairMetric.Similarity"]], "apply_constraints() (afl.double_agent.pairmetric.pairmetric method)": [[41, "AFL.double_agent.PairMetric.PairMetric.apply_constraints"]], "calculate() (afl.double_agent.pairmetric.combinemetric method)": [[41, "AFL.double_agent.PairMetric.CombineMetric.calculate"]], "calculate() (afl.double_agent.pairmetric.delaunay method)": [[41, "AFL.double_agent.PairMetric.Delaunay.calculate"]], "calculate() (afl.double_agent.pairmetric.distance method)": [[41, "AFL.double_agent.PairMetric.Distance.calculate"]], "calculate() (afl.double_agent.pairmetric.dummy method)": [[41, "AFL.double_agent.PairMetric.Dummy.calculate"]], "calculate() (afl.double_agent.pairmetric.pairmetric method)": [[41, "AFL.double_agent.PairMetric.PairMetric.calculate"]], "calculate() (afl.double_agent.pairmetric.similarity method)": [[41, "AFL.double_agent.PairMetric.Similarity.calculate"]], "normalize1() (afl.double_agent.pairmetric.pairmetric method)": [[41, "AFL.double_agent.PairMetric.PairMetric.normalize1"]], "normalize2() (afl.double_agent.pairmetric.pairmetric method)": [[41, "AFL.double_agent.PairMetric.PairMetric.normalize2"]], "prod() (afl.double_agent.pairmetric.combinemetric method)": [[41, "AFL.double_agent.PairMetric.CombineMetric.prod"]], "sum() (afl.double_agent.pairmetric.combinemetric method)": [[41, "AFL.double_agent.PairMetric.CombineMetric.sum"]], "afl.double_agent.phaselabeler": [[42, "module-AFL.double_agent.PhaseLabeler"]], "affinitypropagation (class in afl.double_agent.phaselabeler)": [[42, "AFL.double_agent.PhaseLabeler.AffinityPropagation"]], "gaussianmixturemodel (class in afl.double_agent.phaselabeler)": [[42, "AFL.double_agent.PhaseLabeler.GaussianMixtureModel"]], "phaselabeler (class in afl.double_agent.phaselabeler)": [[42, "AFL.double_agent.PhaseLabeler.PhaseLabeler"]], "spectralclustering (class in afl.double_agent.phaselabeler)": [[42, "AFL.double_agent.PhaseLabeler.SpectralClustering"]], "calculate() (afl.double_agent.phaselabeler.affinitypropagation method)": [[42, "AFL.double_agent.PhaseLabeler.AffinityPropagation.calculate"]], "calculate() (afl.double_agent.phaselabeler.gaussianmixturemodel method)": [[42, "AFL.double_agent.PhaseLabeler.GaussianMixtureModel.calculate"]], "calculate() (afl.double_agent.phaselabeler.spectralclustering method)": [[42, "AFL.double_agent.PhaseLabeler.SpectralClustering.calculate"]], "remap_labels_by_count() (afl.double_agent.phaselabeler.phaselabeler method)": [[42, "AFL.double_agent.PhaseLabeler.PhaseLabeler.remap_labels_by_count"]], "silhouette() (afl.double_agent.phaselabeler.phaselabeler method)": [[42, "AFL.double_agent.PhaseLabeler.PhaseLabeler.silhouette"]], "afl.double_agent.pipeline": [[43, "module-AFL.double_agent.Pipeline"]], "pipeline (class in afl.double_agent.pipeline)": [[43, "AFL.double_agent.Pipeline.Pipeline"]], "append() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.append"]], "calculate() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.calculate"]], "clear_outputs() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.clear_outputs"]], "copy() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.copy"]], "draw() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.draw"]], "draw_plotly() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.draw_plotly"]], "extend() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.extend"]], "input_variables() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.input_variables"]], "make_graph() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.make_graph"]], "output_variables() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.output_variables"]], "print() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.print"]], "print_code() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.print_code"]], "read() (afl.double_agent.pipeline.pipeline static method)": [[43, "AFL.double_agent.Pipeline.Pipeline.read"]], "search() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.search"]], "write() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.write"]], "afl.double_agent.pipelinecontext": [[44, "module-AFL.double_agent.PipelineContext"]], "nocontextexception": [[44, "AFL.double_agent.PipelineContext.NoContextException"]], "pipelinecontext (class in afl.double_agent.pipelinecontext)": [[44, "AFL.double_agent.PipelineContext.PipelineContext"]], "contexts (afl.double_agent.pipelinecontext.pipelinecontext attribute)": [[44, "AFL.double_agent.PipelineContext.PipelineContext.contexts"]], "get_context() (afl.double_agent.pipelinecontext.pipelinecontext class method)": [[44, "AFL.double_agent.PipelineContext.PipelineContext.get_context"]], "get_contexts() (afl.double_agent.pipelinecontext.pipelinecontext class method)": [[44, "AFL.double_agent.PipelineContext.PipelineContext.get_contexts"]], "afl.double_agent.pipelineop": [[45, "module-AFL.double_agent.PipelineOp"]], "pipelineop (class in afl.double_agent.pipelineop)": [[45, "AFL.double_agent.PipelineOp.PipelineOp"]], "add_to_dataset() (afl.double_agent.pipelineop.pipelineop method)": [[45, "AFL.double_agent.PipelineOp.PipelineOp.add_to_dataset"]], "add_to_tiled() (afl.double_agent.pipelineop.pipelineop method)": [[45, "AFL.double_agent.PipelineOp.PipelineOp.add_to_tiled"]], "calculate() (afl.double_agent.pipelineop.pipelineop method)": [[45, "AFL.double_agent.PipelineOp.PipelineOp.calculate"]], "copy() (afl.double_agent.pipelineop.pipelineop method)": [[45, "AFL.double_agent.PipelineOp.PipelineOp.copy"]], "plot() (afl.double_agent.pipelineop.pipelineop method)": [[45, "AFL.double_agent.PipelineOp.PipelineOp.plot"]], "afl.double_agent.preprocessor": [[46, "module-AFL.double_agent.Preprocessor"]], "arraytovars (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.ArrayToVars"]], "barycentrictoternaryxy (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.BarycentricToTernaryXY"]], "destandardize (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.Destandardize"]], "extrema (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.Extrema"]], "preprocessor (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.Preprocessor"]], "savgolfilter (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.SavgolFilter"]], "standardize (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.Standardize"]], "subtract (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.Subtract"]], "subtractmin (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.SubtractMin"]], "sympytransform (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.SympyTransform"]], "ternaryxytobarycentric (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.TernaryXYToBarycentric"]], "varstoarray (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.VarsToArray"]], "zscale (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.Zscale"]], "zscaleerror (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.ZscaleError"]], "calculate() (afl.double_agent.preprocessor.arraytovars method)": [[46, "AFL.double_agent.Preprocessor.ArrayToVars.calculate"]], "calculate() (afl.double_agent.preprocessor.barycentrictoternaryxy method)": [[46, "AFL.double_agent.Preprocessor.BarycentricToTernaryXY.calculate"]], "calculate() (afl.double_agent.preprocessor.destandardize method)": [[46, "AFL.double_agent.Preprocessor.Destandardize.calculate"]], "calculate() (afl.double_agent.preprocessor.extrema method)": [[46, "AFL.double_agent.Preprocessor.Extrema.calculate"]], "calculate() (afl.double_agent.preprocessor.preprocessor method)": [[46, "AFL.double_agent.Preprocessor.Preprocessor.calculate"]], "calculate() (afl.double_agent.preprocessor.savgolfilter method)": [[46, "AFL.double_agent.Preprocessor.SavgolFilter.calculate"]], "calculate() (afl.double_agent.preprocessor.standardize method)": [[46, "AFL.double_agent.Preprocessor.Standardize.calculate"]], "calculate() (afl.double_agent.preprocessor.subtract method)": [[46, "AFL.double_agent.Preprocessor.Subtract.calculate"]], "calculate() (afl.double_agent.preprocessor.subtractmin method)": [[46, "AFL.double_agent.Preprocessor.SubtractMin.calculate"]], "calculate() (afl.double_agent.preprocessor.sympytransform method)": [[46, "AFL.double_agent.Preprocessor.SympyTransform.calculate"]], "calculate() (afl.double_agent.preprocessor.ternaryxytobarycentric method)": [[46, "AFL.double_agent.Preprocessor.TernaryXYToBarycentric.calculate"]], "calculate() (afl.double_agent.preprocessor.varstoarray method)": [[46, "AFL.double_agent.Preprocessor.VarsToArray.calculate"]], "calculate() (afl.double_agent.preprocessor.zscale method)": [[46, "AFL.double_agent.Preprocessor.Zscale.calculate"]], "calculate() (afl.double_agent.preprocessor.zscaleerror method)": [[46, "AFL.double_agent.Preprocessor.ZscaleError.calculate"]], "afl.double_agent.plotting": [[49, "module-AFL.double_agent.plotting"]], "plot_scatter_mpl() (in module afl.double_agent.plotting)": [[49, "AFL.double_agent.plotting.plot_scatter_mpl"]], "plot_surface_mpl() (in module afl.double_agent.plotting)": [[49, "AFL.double_agent.plotting.plot_surface_mpl"]], "afl.double_agent.util": [[50, "module-AFL.double_agent.util"]], "extract_parameters() (in module afl.double_agent.util)": [[50, "AFL.double_agent.util.extract_parameters"]], "listify() (in module afl.double_agent.util)": [[50, "AFL.double_agent.util.listify"]], "afl.double_agent.xarray_extensions": [[51, "module-AFL.double_agent.xarray_extensions"]], "afl_dataarraytools (class in afl.double_agent.xarray_extensions)": [[51, "AFL.double_agent.xarray_extensions.AFL_DataArrayTools"]], "afl_datasettools (class in afl.double_agent.xarray_extensions)": [[51, "AFL.double_agent.xarray_extensions.AFL_DatasetTools"]], "compositiontools (class in afl.double_agent.xarray_extensions)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools"]], "labeltools (class in afl.double_agent.xarray_extensions)": [[51, "AFL.double_agent.xarray_extensions.LabelTools"]], "scatteringtools (class in afl.double_agent.xarray_extensions)": [[51, "AFL.double_agent.xarray_extensions.ScatteringTools"]], "utilities (class in afl.double_agent.xarray_extensions)": [[51, "AFL.double_agent.xarray_extensions.Utilities"]], "add_grid() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.add_grid"]], "append() (afl.double_agent.xarray_extensions.afl_datasettools method)": [[51, "AFL.double_agent.xarray_extensions.AFL_DatasetTools.append"]], "clean() (afl.double_agent.xarray_extensions.scatteringtools method)": [[51, "AFL.double_agent.xarray_extensions.ScatteringTools.clean"]], "get() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.get"]], "get_grid() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.get_grid"]], "get_grid_old() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.get_grid_old"]], "get_range_scaled() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.get_range_scaled"]], "get_standard_scaled() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.get_standard_scaled"]], "make_default() (afl.double_agent.xarray_extensions.labeltools method)": [[51, "AFL.double_agent.xarray_extensions.LabelTools.make_default"]], "make_ordinal() (afl.double_agent.xarray_extensions.labeltools method)": [[51, "AFL.double_agent.xarray_extensions.LabelTools.make_ordinal"]], "plot_3d() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.plot_3D"]], "plot_linlin() (afl.double_agent.xarray_extensions.scatteringtools method)": [[51, "AFL.double_agent.xarray_extensions.ScatteringTools.plot_linlin"]], "plot_loglog() (afl.double_agent.xarray_extensions.scatteringtools method)": [[51, "AFL.double_agent.xarray_extensions.ScatteringTools.plot_loglog"]], "plot_logwaterfall() (afl.double_agent.xarray_extensions.scatteringtools method)": [[51, "AFL.double_agent.xarray_extensions.ScatteringTools.plot_logwaterfall"]], "plot_mask() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.plot_mask"]], "plot_scatter() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.plot_scatter"]], "plot_surface() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.plot_surface"]], "plot_waterfall() (afl.double_agent.xarray_extensions.scatteringtools method)": [[51, "AFL.double_agent.xarray_extensions.ScatteringTools.plot_waterfall"]], "preprocess_data() (afl.double_agent.xarray_extensions.utilities method)": [[51, "AFL.double_agent.xarray_extensions.Utilities.preprocess_data"]], "ternary_to_xy() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.ternary_to_xy"]]}})