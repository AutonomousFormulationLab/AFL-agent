Search.setIndex({"docnames": ["explanations/context_manager", "explanations/index", "explanations/pipelines", "how-to/appending_to_xarray", "how-to/building_xarray_datasets", "how-to/create_pipelineop", "how-to/index", "index", "reference/api/agent/AcquisitionFunction", "reference/api/agent/AgentClient", "reference/api/agent/DowShampoo_SampleDriver", "reference/api/agent/EI_AcquisitionFunction", "reference/api/agent/GaussianProcess", "reference/api/agent/HscedGaussianProcess", "reference/api/agent/Metric", "reference/api/agent/Multimodal_AL_SampleDriver", "reference/api/agent/Multimodal_AgentDriver", "reference/api/agent/PhaseLabeler", "reference/api/agent/PhaseMap", "reference/api/agent/PhaseMap_pandas", "reference/api/agent/SANS_AL_SampleDriver", "reference/api/agent/SAS_AL_SampleDriver", "reference/api/agent/SAS_AgentDriver", "reference/api/agent/SAS_Grid_AL_SampleDriver", "reference/api/agent/SAXS_AL_SampleDriver", "reference/api/agent/UCB_AcquisitionFunction", "reference/api/agent/WatchDog", "reference/api/agent/index", "reference/api/agent/reduce_usaxs", "reference/api/agent/util", "reference/api/agent/vSAS_NoDeck_AL_SampleDriver", "reference/api/agent/xarray_extensions", "reference/api/double_agent/AcquisitionFunction", "reference/api/double_agent/AgentClient", "reference/api/double_agent/AgentDriver", "reference/api/double_agent/AutoSAS", "reference/api/double_agent/AutoSAS_Driver", "reference/api/double_agent/Boundary", "reference/api/double_agent/Extrapolator", "reference/api/double_agent/Generator", "reference/api/double_agent/MaskGrid", "reference/api/double_agent/PairMetric", "reference/api/double_agent/PhaseLabeler", "reference/api/double_agent/Pipeline", "reference/api/double_agent/PipelineContext", "reference/api/double_agent/PipelineOp", "reference/api/double_agent/Preprocessor", "reference/api/double_agent/TensorFlowExtrapolator", "reference/api/double_agent/index", "reference/api/double_agent/plotting", "reference/api/double_agent/util", "reference/api/double_agent/xarray_extensions", "reference/index", "tutorials/_getting_started", "tutorials/building_pipelines", "tutorials/index", "tutorials/installation", "tutorials/quickstart"], "filenames": ["explanations/context_manager.rst", "explanations/index.rst", "explanations/pipelines.rst", "how-to/appending_to_xarray.rst", "how-to/building_xarray_datasets.ipynb", "how-to/create_pipelineop.ipynb", "how-to/index.rst", "index.rst", "reference/api/agent/AcquisitionFunction.rst", "reference/api/agent/AgentClient.rst", "reference/api/agent/DowShampoo_SampleDriver.rst", "reference/api/agent/EI_AcquisitionFunction.rst", "reference/api/agent/GaussianProcess.rst", "reference/api/agent/HscedGaussianProcess.rst", "reference/api/agent/Metric.rst", "reference/api/agent/Multimodal_AL_SampleDriver.rst", "reference/api/agent/Multimodal_AgentDriver.rst", "reference/api/agent/PhaseLabeler.rst", "reference/api/agent/PhaseMap.rst", "reference/api/agent/PhaseMap_pandas.rst", "reference/api/agent/SANS_AL_SampleDriver.rst", "reference/api/agent/SAS_AL_SampleDriver.rst", "reference/api/agent/SAS_AgentDriver.rst", "reference/api/agent/SAS_Grid_AL_SampleDriver.rst", "reference/api/agent/SAXS_AL_SampleDriver.rst", "reference/api/agent/UCB_AcquisitionFunction.rst", "reference/api/agent/WatchDog.rst", "reference/api/agent/index.rst", "reference/api/agent/reduce_usaxs.rst", "reference/api/agent/util.rst", "reference/api/agent/vSAS_NoDeck_AL_SampleDriver.rst", "reference/api/agent/xarray_extensions.rst", "reference/api/double_agent/AcquisitionFunction.rst", "reference/api/double_agent/AgentClient.rst", "reference/api/double_agent/AgentDriver.rst", "reference/api/double_agent/AutoSAS.rst", "reference/api/double_agent/AutoSAS_Driver.rst", "reference/api/double_agent/Boundary.rst", "reference/api/double_agent/Extrapolator.rst", "reference/api/double_agent/Generator.rst", "reference/api/double_agent/MaskGrid.rst", "reference/api/double_agent/PairMetric.rst", "reference/api/double_agent/PhaseLabeler.rst", "reference/api/double_agent/Pipeline.rst", "reference/api/double_agent/PipelineContext.rst", "reference/api/double_agent/PipelineOp.rst", "reference/api/double_agent/Preprocessor.rst", "reference/api/double_agent/TensorFlowExtrapolator.rst", "reference/api/double_agent/index.rst", "reference/api/double_agent/plotting.rst", "reference/api/double_agent/util.rst", "reference/api/double_agent/xarray_extensions.rst", "reference/index.rst", "tutorials/_getting_started.rst", "tutorials/building_pipelines.ipynb", "tutorials/index.rst", "tutorials/installation.rst", "tutorials/quickstart.ipynb"], "titles": ["The Context Manager Pattern", "Explanations", "Understanding Pipelines in AFL-agent", "Appending Data to xarray.Datasets", "Build an xarray.Dataset from Scratch", "Creating a New Pipeline Operation", "How-To Guides", "AFL-agent", "AFL.agent.AcquisitionFunction module", "AFL.agent.AgentClient module", "AFL.agent.DowShampoo_SampleDriver module", "AFL.agent.EI_AcquisitionFunction module", "AFL.agent.GaussianProcess module", "AFL.agent.HscedGaussianProcess module", "AFL.agent.Metric module", "AFL.agent.Multimodal_AL_SampleDriver module", "AFL.agent.Multimodal_AgentDriver module", "AFL.agent.PhaseLabeler module", "AFL.agent.PhaseMap module", "AFL.agent.PhaseMap_pandas module", "AFL.agent.SANS_AL_SampleDriver module", "AFL.agent.SAS_AL_SampleDriver module", "AFL.agent.SAS_AgentDriver module", "AFL.agent.SAS_Grid_AL_SampleDriver module", "AFL.agent.SAXS_AL_SampleDriver module", "AFL.agent.UCB_AcquisitionFunction module", "AFL.agent.WatchDog module", "AFL.agent package", "AFL.agent.reduce_usaxs module", "AFL.agent.util module", "AFL.agent.vSAS_NoDeck_AL_SampleDriver module", "AFL.agent.xarray_extensions module", "AFL.double_agent.AcquisitionFunction module", "AFL.double_agent.AgentClient module", "AFL.double_agent.AgentDriver module", "AFL.double_agent.AutoSAS module", "AFL.double_agent.AutoSAS_Driver module", "AFL.double_agent.Boundary module", "AFL.double_agent.Extrapolator module", "AFL.double_agent.Generator module", "AFL.double_agent.MaskGrid module", "AFL.double_agent.PairMetric module", "AFL.double_agent.PhaseLabeler module", "AFL.double_agent.Pipeline module", "AFL.double_agent.PipelineContext module", "AFL.double_agent.PipelineOp module", "AFL.double_agent.Preprocessor module", "AFL.double_agent.TensorFlowExtrapolator module", "AFL.double_agent Package", "AFL.double_agent.plotting module", "AFL.double_agent.util module", "AFL.double_agent.xarray_extensions module", "Reference", "Quick Start Example", "Building Pipelines", "Tutorials", "Setup", "Quickstart"], "terms": {"afl": [0, 1, 4, 5, 52, 53, 54, 55, 56, 57], "doubl": [0, 7], "agent": [0, 1, 4, 5, 43, 53, 54, 55, 56, 57], "framework": [0, 2, 7], "emploi": 0, "python": [0, 2, 4, 7, 43, 50, 56], "": [0, 2, 4, 5, 28, 41, 50, 53, 54, 57], "creat": [0, 2, 4, 6, 7, 46, 53, 54, 56, 57], "an": [0, 2, 6, 7, 32, 43, 50, 57], "eleg": 0, "intuit": 0, "interfac": 0, "build": [0, 5, 6, 7, 43, 53, 55, 56, 57], "pipelin": [0, 1, 4, 6, 7, 44, 46, 52, 53, 55], "thi": [0, 1, 2, 3, 4, 5, 7, 11, 25, 32, 38, 39, 41, 43, 46, 50, 53, 54, 56, 57], "document": [0, 2, 4, 7, 54], "explain": [0, 2], "underpin": 0, "choic": 0, "intern": 0, "provid": [0, 2, 7, 32, 38, 39, 43, 45], "develop": [0, 7], "us": [0, 2, 4, 7, 27, 32, 38, 39, 43, 46, 50, 52, 53, 54, 55, 56, 57], "statement": 0, "tradition": 0, "serv": 0, "two": [0, 4, 5, 11, 25, 54, 57], "primari": [0, 50], "purpos": 0, "resourc": 0, "thei": [0, 2, 5, 54], "ensur": [0, 2, 56], "proper": 0, "acquisit": [0, 8, 11, 25, 27, 32, 54], "releas": 0, "like": [0, 54], "file": [0, 43, 56], "handl": [0, 50], "network": 0, "connect": 0, "state": [0, 2], "temporarili": 0, "establish": 0, "specif": [0, 5, 6, 7], "environ": [0, 56], "block": [0, 5], "code": [0, 2, 43], "In": [0, 4, 5, 50, 54, 57], "system": [0, 2, 57], "we": [0, 4, 5, 50, 53, 54, 57], "leverag": 0, "second": [0, 28, 46, 54], "aspect": 0, "temporari": 0, "which": [0, 50, 54], "oper": [0, 2, 6, 7, 43, 45, 46, 52, 53, 54, 57], "ar": [0, 2, 4, 5, 7, 28, 32, 40, 41, 43, 44, 46, 50, 54], "automat": [0, 54, 57], "associ": 0, "current": [0, 2, 28, 31, 43, 44, 51], "more": [0, 7, 32, 53, 54], "readabl": 0, "api": [0, 7], "reduc": [0, 54], "boilerpl": 0, "make": [0, 2, 4, 50, 54, 56, 57], "construct": [0, 54], "feel": 0, "natur": 0, "here": [0, 5, 54], "simpl": [0, 57], "exampl": [0, 50, 54], "improv": [0, 54], "name": [0, 2, 4, 5, 14, 31, 32, 37, 38, 39, 40, 41, 42, 43, 45, 46, 51, 54, 56, 57], "mypipelin": 0, "myoper": 0, "input_vari": [0, 5, 32, 37, 39, 40, 41, 42, 43, 45, 46, 53, 54, 57], "data": [0, 1, 5, 6, 7, 14, 28, 31, 38, 39, 45, 46, 51, 52, 53], "output_vari": [0, 5, 32, 38, 39, 40, 41, 42, 43, 45, 46, 53, 54, 57], "processed_data": 0, "anotheroper": 0, "final_result": 0, "without": [0, 4, 5, 32, 50, 54, 56, 57], "verbos": 0, "error": [0, 32, 54, 56], "prone": 0, "op1": 0, "append": [0, 6, 7, 19, 31, 43, 51], "op2": 0, "At": [0, 2], "heart": 0, "i": [0, 1, 2, 3, 4, 7, 27, 28, 41, 43, 46, 50, 52, 53, 54, 56, 57], "thread": 0, "local": 0, "pipelinecontext": [0, 43, 48, 52], "py": [0, 4], "show": [0, 4, 54], "class": [0, 2, 4, 5, 8, 11, 14, 17, 19, 25, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 57], "inherit": [0, 44, 45], "allow": [0, 2, 5, 7, 44, 54], "abus": [0, 44], "def": [0, 4, 5, 50], "__enter__": 0, "self": [0, 5, 7, 25, 32, 37, 38, 39, 41, 43, 45, 46, 54], "type": [0, 57], "get_context": [0, 44], "return": [0, 4, 5, 14, 28, 41, 43, 44], "__exit__": 0, "typ": 0, "valu": [0, 32, 41, 46, 54], "traceback": 0, "pop": 0, "classmethod": [0, 19, 44], "cl": 0, "list": [0, 2, 32, 37, 38, 39, 41, 43, 44, 45, 46, 49, 50, 54], "hasattr": 0, "ani": [0, 41, 44, 50, 56], "deepest": [0, 44], "try": [0, 50, 56, 57], "1": [0, 4, 5, 7, 8, 11, 19, 25, 28, 29, 31, 32, 39, 41, 46, 50, 51, 53, 57], "except": [0, 32, 44], "indexerror": 0, "rais": [0, 32, 46], "nocontextexcept": [0, 44], "No": 0, "safeti": 0, "differ": [0, 4, 5, 54, 56, 57], "maintain": [0, 2, 54], "separ": [0, 54, 57], "prevent": 0, "cross": 0, "interfer": 0, "enabl": [0, 2], "nest": 0, "most": [0, 54], "recent": 0, "enter": 0, "becom": 0, "activ": [0, 4, 7, 44, 54, 56], "one": [0, 4, 32, 54, 57], "preserv": [0, 2, 4], "relationship": [0, 2], "between": [0, 2, 41, 53, 57], "contain": [0, 2, 4, 19, 43, 54, 57], "dure": [0, 2], "principl": [0, 1, 7], "when": [0, 2, 4, 32, 46, 54], "you": [0, 4, 5, 7, 53, 54, 56], "within": [0, 2, 32], "insid": 0, "ad": [0, 2, 4, 46, 54, 57], "flow": [0, 1, 54], "push": 0, "onto": [0, 38, 46], "while": [0, 46, 50, 54], "execut": [0, 1, 5, 7, 8, 11, 25, 43, 54], "access": [0, 2, 56], "pipelineop": [0, 2, 5, 32, 37, 38, 39, 40, 41, 42, 43, 46, 48, 50, 52, 54], "instanti": 0, "tri": 0, "add": [0, 4, 5, 45, 53, 54], "itself": [0, 54], "exit": 0, "from": [0, 5, 6, 7, 28, 32, 43, 46, 53, 54, 57], "previou": [0, 2, 32], "again": 0, "illustr": 0, "regist": 0, "themselv": 0, "__init__": [0, 5, 50], "option": [0, 7], "str": [0, 32, 37, 38, 39, 41, 43, 45, 46, 49, 50], "none": [0, 4, 8, 11, 14, 17, 19, 25, 28, 29, 31, 32, 37, 38, 41, 42, 43, 45, 46, 49, 51, 54, 56], "input_prefix": [0, 45, 54], "output_prefix": [0, 32, 37, 38, 40, 45, 53, 54], "other": [0, 4, 11, 25, 53, 54, 57], "initi": 0, "object": [0, 4, 5, 8, 11, 14, 17, 19, 25, 31, 38, 44, 46, 50, 51, 54, 57], "silent": 0, "continu": 0, "those": 0, "outsid": 0, "pass": [0, 50, 54], "process": [0, 2, 4, 5, 7, 38, 52, 54, 57], "hierarch": 0, "structur": [0, 2, 4, 54], "visual": [0, 1, 5, 7, 54, 57], "reflect": 0, "sever": [0, 2, 53, 54, 56], "import": [0, 4, 5, 43, 53, 54, 56, 57], "each": [0, 2, 4, 28, 54, 57], "would": [0, 4, 50], "need": [0, 2, 4, 5, 11, 25, 43, 56, 57], "explicitli": [0, 2], "its": [0, 2], "clutter": 0, "repetit": 0, "call": [0, 2, 4, 5, 46, 54, 57], "indent": 0, "indic": [0, 19, 46, 54], "belong": 0, "enhanc": 0, "consist": [0, 2, 54, 57], "alwai": [0, 50, 54], "correct": [0, 28, 46], "risk": 0, "being": 0, "unintention": 0, "omit": 0, "wrong": 0, "grace": 0, "degrad": 0, "If": [0, 7, 43, 46, 56], "gracefulli": 0, "situat": 0, "rather": [0, 7, 46, 54], "than": [0, 7, 46, 54], "flexibl": [0, 2, 54], "usag": 0, "There": 0, "few": 0, "awar": 0, "attempt": [0, 46, 50, 57], "get": [0, 31, 43, 51, 53, 54], "constructor": [0, 5, 43, 46, 50], "sinc": [0, 54], "must": 0, "same": [0, 46, 57], "typic": [0, 4, 50], "issu": [0, 56], "could": [0, 2, 4], "multithread": 0, "applic": [0, 7], "v": [0, 28], "manual": 0, "conveni": [0, 2, 28], "wai": [0, 2, 54, 56], "can": [0, 2, 4, 5, 7, 54, 56, 57], "still": 0, "accommod": 0, "program": 0, "style": 0, "requir": [0, 2, 5, 11, 25, 43], "pipeline1": [0, 43], "p1": 0, "x": [0, 4, 5, 8, 11, 14, 25, 28, 31, 51, 53, 54, 57], "y": [0, 4, 5, 8, 11, 25, 28, 46], "p2": 0, "pipeline2": 0, "op": [0, 43, 46, 50], "factori": 0, "function": [0, 4, 5, 11, 25, 32, 53, 54], "clean": [0, 31, 46, 51], "configur": 0, "templat": 0, "create_processing_pipelin": 0, "data_typ": 0, "threshold": 0, "0": [0, 4, 5, 8, 11, 19, 25, 29, 31, 32, 37, 39, 41, 46, 51, 53, 54, 57], "5": [0, 4, 5, 8, 46, 57], "standard": [0, 46, 53, 54], "f": [0, 4, 57], "_process": 0, "common": [0, 2, 56], "all": [0, 2, 4, 5, 7, 28, 32, 38, 39, 41, 43, 45, 46, 53, 54, 56], "normal": [0, 4, 5, 29, 31, 41, 51, 54], "raw_data": 0, "normalized_data": [0, 5], "condit": 0, "imag": [0, 54], "imagefilt": 0, "filtered_data": 0, "filter_typ": 0, "gaussian": [0, 4, 32, 38, 54], "threshold_var": 0, "elif": 0, "signal": [0, 4, 28, 46, 57], "signalfilt": 0, "lowpass": 0, "els": [0, 4], "final": [0, 4, 46, 53, 54, 57], "thresholded_data": 0, "image_pipelin": 0, "75": 0, "signal_pipelin": 0, "25": [0, 4, 5, 53, 54, 57], "directli": [0, 5, 56], "support": [0, 2, 7, 56], "extend": [0, 2, 5, 43], "where": [0, 2, 4, 54], "sub": [0, 5], "parent": [0, 5], "might": [0, 53], "master_pipelin": 0, "master": 0, "some": [0, 11, 25, 57], "dataload": 0, "file_path": 0, "preprocess": [0, 46], "nestedpipelin": 0, "preprocessed_data": 0, "removeoutli": 0, "last": [0, 50], "output": [0, 2, 5, 40, 43, 45, 54], "modelpredictor": 0, "predict": [0, 54], "dynam": 0, "easier": [0, 2, 54], "condition": 0, "runtim": 0, "paramet": [0, 28, 43, 46, 50, 54], "build_adaptive_pipelin": 0, "data_properti": 0, "adapt": [0, 46], "properti": [0, 7, 19, 38], "adaptive_pipelin": 0, "basic": [0, 7, 53], "case": [0, 50, 54], "loaddata": 0, "data_path": 0, "has_missing_valu": 0, "fals": [0, 4, 5, 8, 11, 25, 31, 37, 42, 43, 46, 51, 54, 57], "imputemissingvalu": 0, "imputed_data": 0, "current_data": 0, "needs_norm": 0, "true": [0, 19, 29, 31, 38, 43, 45, 46, 49, 51, 54], "dimension": [0, 4, 54], "reduct": [0, 28], "ha": [0, 2, 11, 25, 54, 56], "high": [0, 54, 57], "dimens": [0, 2, 4, 5, 40, 46, 54, 57], "100": [0, 4, 5, 19, 53, 54, 57], "pca": 0, "reduced_data": 0, "n_compon": 0, "target_dimens": 0, "50": [0, 4, 19, 29, 31, 39, 51, 54, 57], "analyz": [0, 4, 7, 28, 57], "result": [0, 2, 4, 5, 40, 41, 43, 50, 54, 57], "data_prop": 0, "500": 0, "my_pipelin": 0, "wa": [0, 2, 54, 57], "chosen": 0, "over": [0, 32, 46, 50, 54], "fluent": 0, "builder": 0, "A": [0, 2, 4, 5, 28, 31, 46, 50, 51, 53, 54, 57], "chain": [0, 5], "method": [0, 2, 4, 5, 32, 43, 50, 54], "e": [0, 4, 50, 53, 54, 56], "g": [0, 4, 28], "add_op1": 0, "add_op2": 0, "less": 0, "wouldn": 0, "t": [0, 4, 28, 43, 50, 54], "hypothet": 0, "path": 0, "explicit": [0, 2], "registr": 0, "transpar": [0, 2], "loader": 0, "processor": [0, 45], "decor": 0, "defin": [0, 2, 4, 5, 43, 54], "limit": 0, "reus": 0, "load_data": 0, "dataset": [0, 2, 5, 6, 7, 14, 31, 32, 37, 38, 39, 40, 41, 42, 43, 45, 46, 49, 51, 53, 54, 57], "load": [0, 5, 19], "loaded_data": 0, "process_data": 0, "demonstr": [0, 4, 54, 57], "languag": 0, "featur": [0, 4, 54, 56], "By": [0, 2, 5], "balanc": 0, "clariti": [0, 2], "concis": 0, "complex": [0, 2, 54], "tho": 1, "goal": 1, "section": [1, 7], "deepen": 1, "broaden": 1, "your": [1, 5, 7, 53, 54, 56], "understand": [1, 7], "codebas": 1, "project": [1, 19], "underli": [1, 2, 7, 54], "concept": [1, 2, 4, 7, 53], "core": [1, 52], "architectur": [1, 53], "model": [1, 7, 11, 44, 54], "inspect": [1, 4], "conclus": [1, 7, 55], "The": [1, 2, 4, 5, 7, 27, 43, 46, 50, 52, 54, 56, 57], "context": [1, 2, 7, 44, 53, 54], "manag": [1, 2, 7, 44, 53, 54], "pattern": [1, 2, 7, 57], "why": [1, 2], "stack": [1, 44], "base": [1, 2, 5, 7, 8, 11, 14, 17, 19, 25, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 56, 57], "design": [1, 2], "how": [1, 2, 3, 4, 5, 7, 44, 54, 57], "It": [1, 2, 5, 7, 46, 54, 57], "work": [1, 3, 5, 11, 25, 54, 56, 57], "conceptu": [1, 2], "benefit": 1, "approach": [1, 2, 54], "implement": [1, 5, 7, 54], "detail": [1, 7, 53, 54, 57], "consider": 1, "advanc": 1, "altern": 1, "consid": 1, "fundament": 2, "systemat": 2, "organ": [2, 7], "variou": 2, "compon": [2, 4, 5, 19, 29, 31, 32, 37, 39, 46, 49, 51, 52, 53, 54, 57], "fit": [2, 54], "togeth": [2, 5, 53], "built": [2, 54], "around": 2, "kei": 2, "compos": [2, 7], "individu": [2, 54], "combin": 2, "sequenc": 2, "workflow": [2, 54], "modular": [2, 7, 54], "reusabl": 2, "declar": 2, "input": [2, 4, 32, 39, 43, 46, 50], "traceabl": 2, "help": [2, 53, 54, 57], "debug": 2, "move": [2, 54], "through": [2, 4, 5, 7, 54], "direct": 2, "acycl": 2, "graph": [2, 43, 54], "dag": 2, "repres": [2, 4, 54, 57], "node": 2, "variabl": [2, 4, 5, 43, 44, 46, 54, 57], "edg": 2, "transform": [2, 5, 46], "via": [2, 46], "share": [2, 4], "xarrai": [2, 5, 6, 7, 32, 38, 39, 41, 45, 46, 53, 54, 57], "captur": 2, "follow": [2, 54], "hold": 2, "abstract": [2, 45], "minimum": [2, 46, 54], "what": [2, 53], "produc": [2, 39, 40, 41, 43, 54], "calcul": [2, 4, 5, 7, 14, 28, 32, 37, 38, 39, 40, 41, 42, 43, 45, 46, 53, 57], "logic": [2, 5], "creation": 2, "consum": 2, "advantag": 2, "format": [2, 4, 43], "label": [2, 4, 17, 19, 31, 38, 49, 51, 53, 57], "coordin": [2, 4, 5, 29, 31, 46, 51, 54, 57], "metadata": 2, "attach": 2, "proven": 2, "user": [2, 7], "lazi": 2, "evalu": [2, 4, 32, 54], "potenti": 2, "onli": [2, 4, 11, 25, 41, 54], "sequenti": 2, "order": [2, 4, 46, 54], "were": [2, 54], "For": [2, 54, 56, 57], "store": [2, 5, 7, 43, 54], "dictionari": [2, 28, 45, 54], "These": [2, 43, 54], "merg": 2, "befor": [2, 54, 56], "next": [2, 4, 32], "correctli": 2, "have": [2, 4, 5, 43, 46, 50, 54, 56], "One": [2, 11, 25], "strength": 2, "abil": 2, "gener": [2, 4, 43, 46, 48, 52, 53, 54, 56], "represent": [2, 43], "capabl": 2, "includ": [2, 43], "networkx": [2, 43], "plotli": 2, "interact": 2, "tool": [2, 7, 54, 56, 57], "invalu": 2, "power": [2, 4, 54, 57], "adher": 2, "yet": 2, "progress": 3, "stub": [3, 39, 46], "To": [4, 7, 54, 56, 57], "ll": [4, 5, 54, 56, 57], "go": [4, 54, 57], "up": 4, "random": [4, 8, 27], "fake": 4, "along": [4, 28, 46, 54, 57], "notebook": [4, 56, 57], "basi": [4, 19, 29, 31, 39, 51], "tutori": [4, 5, 7, 53, 54, 57], "begin": [4, 54], "let": [4, 5, 53, 54, 57], "necessari": [4, 53, 56], "librari": [4, 7], "empti": 4, "numpi": [4, 28, 46, 53, 54], "np": [4, 53, 54], "xr": [4, 5, 43, 53, 54, 57], "matplotlib": [4, 54], "pyplot": [4, 54], "plt": [4, 5, 54, 57], "d": [4, 5, 28, 31, 51, 53, 54, 57], "lt": [4, 5, 54, 57], "gt": [4, 5, 54, 57], "size": [4, 5, 19, 54, 57], "0b": 4, "datasetdimens": [4, 5, 54, 57], "index": [4, 5, 54, 57], "attribut": [4, 5, 43, 54, 57], "do": [4, 50, 54], "virtual": [4, 56], "2": [4, 5, 14, 31, 37, 46, 50, 51, 53, 57], "space": [4, 46], "b": [4, 5, 53, 54, 57], "placehold": 4, "imagin": 4, "concentr": 4, "liquid": 4, "mixtur": 4, "num_measur": 4, "uniform": 4, "10": [4, 5, 31, 51, 53, 54, 57], "arrai": [4, 5, 14, 28, 54, 57], "93506959": [4, 57], "4": [4, 5, 53, 57], "33877746": [4, 57], "3": [4, 5, 19, 29, 39, 46, 56, 57], "99993228": [4, 57], "15": [4, 5, 54, 57], "11981127": [4, 57], "14403166": [4, 57], "65850983": [4, 57], "57883235": [4, 57], "12": [4, 5, 31, 51, 54, 57], "34183192": [4, 57], "8": [4, 5, 43, 54, 57], "05567528": [4, 57], "47358865": [4, 57], "04161007": [4, 57], "22": [4, 5, 54, 57], "83361697": [4, 57], "85757901": [4, 57], "18": [4, 5, 54, 57], "81270953": [4, 57], "29558185": [4, 57], "16": [4, 5, 54, 57], "91442648": [4, 57], "14950211": [4, 57], "08947439": [4, 57], "7": [4, 5, 54, 57], "65251749": [4, 57], "13": [4, 5, 54, 57], "05015789": [4, 57], "58833051": [4, 57], "55301393": [4, 57], "75864958": [4, 57], "90004698": [4, 57], "9": [4, 5, 54, 57], "03579843": [4, 57], "04110731": [4, 57], "6": [4, 5, 54, 57], "94709288": [4, 57], "03909555": [4, 57], "30872735": [4, 57], "23": [4, 5, 54, 57], "08178649": [4, 57], "38214203": [4, 57], "24": [4, 54, 57], "28281802": [4, 57], "09861924": [4, 57], "67560421": [4, 57], "12177663": [4, 57], "50263558": [4, 57], "4271795": [4, 57], "05339109": [4, 57], "32773495": [4, 57], "91733508": [4, 57], "22656778": 4, "12750637": 4, "77255352": 4, "61982803": 4, "58024907": 4, "89957219": 4, "62964449": 4, "64241493": 4, "87628903": 4, "11": [4, 5, 54, 56, 57], "61657773": 4, "13234999": 4, "35880089": 4, "02453785": 4, "78092744": 4, "29667967": 4, "70296135": 4, "87889006": 4, "21": [4, 54, 57], "23149213": 4, "33476093": 4, "21218938": 4, "96178175": 4, "14": [4, 5, 54, 57], "54078124": 4, "94068744": 4, "1306839": 4, "81347609": 4, "31807371": 4, "65653358": 4, "86819243": 4, "97030945": 4, "30596251": 4, "93130382": 4, "20": [4, 5, 54], "47763125": 4, "37753719": 4, "17": [4, 5, 54, 57], "91516725": 4, "41716654": 4, "43289172": 4, "1435741": 4, "91629814": 4, "08112256": 4, "13119176": 4, "25354877": 4, "45231719": 4, "20589227": 4, "57879028": 4, "89243271": 4, "31509607": 4, "94687163": 4, "82218341": 4, "23403931": 4, "79257162": 4, "68249381": 4, "53839805": 4, "06877839": 4, "32097668": 4, "89831494": 4, "4644321": 4, "55458517": 4, "16727467": 4, "45829217": 4, "24497194": 4, "9361479": 4, "47144486": 4, "41770086": 4, "88253153": 4, "88298706": 4, "25514364": 4, "345648": 4, "08596411": 4, "03642353": 4, "48281264": 4, "17349873": 4, "80265345": 4, "24719952": 4, "52786849": 4, "19131724": 4, "11486603": 4, "78123421": 4, "94805308": 4, "24072184": 4, "0863877": 4, "50409961": 4, "27277289": 4, "38188047": 4, "72138619": 4, "60295083": 4, "67442285": 4, "58444436": 4, "57143555": 4, "35239534": 4, "00199993": 4, "50574801": 4, "33916381": 4, "27476499": 4, "83797279": 4, "75461602": 4, "60987228": 4, "55448762": 4, "08902153": 4, "82063523": 4, "43360895": 4, "96279418": 4, "66791611": 4, "31501072": 4, "0249756": 4, "4606": 4, "38843633": 4, "1328654": 4, "19": [4, 5, 54], "8844552": 4, "08471932": 4, "10690158": 4, "48469695": 4, "10944636": 4, "99946032": 4, "58338866": 4, "99427379": 4, "09969": 4, "71171219": 4, "02035713": 4, "30678607": 4, "33877297": 4, "76378269": [4, 57], "99343589": [4, 57], "45991402": [4, 57], "11174006": [4, 57], "63854343": [4, 57], "54025074": [4, 57], "81733253": [4, 57], "43775453": [4, 57], "20059135": [4, 57], "85811728": [4, 57], "20804772": [4, 57], "7721729": [4, 57], "65472461": [4, 57], "43961665": [4, 57], "21345636": [4, 57], "74735116": [4, 57], "92147334": [4, 57], "55468087": [4, 57], "52663079": [4, 57], "77762994": [4, 57], "01379838": [4, 57], "20232276": [4, 57], "23914684": [4, 57], "4963898": [4, 57], "46456904": [4, 57], "84968187": [4, 57], "26618359": [4, 57], "12557401": [4, 57], "1156883": [4, 57], "45431966": [4, 57], "91416382": [4, 57], "4816626": [4, 57], "59623227": [4, 57], "69198605": [4, 57], "02031934": [4, 57], "93580074": [4, 57], "21402634": [4, 57], "84272796": [4, 57], "87824238": [4, 57], "33035062": [4, 57], "now": [4, 5, 53, 54, 57], "inform": [4, 32, 54], "note": [4, 5, 46, 54], "specifi": [4, 11, 46, 54], "also": [4, 54], "sampl": [4, 5, 17, 31, 32, 38, 41, 42, 51, 53, 57], "2kb": [4, 5, 54, 57], "u1": [4, 5, 54, 57], "8b": [4, 5, 54, 57], "x27": [4, 5, 54, 57], "float64": [4, 5, 54, 57], "935": [4, 57], "339": [4, 57], "878": [4, 57], "33xarrai": 4, "100compon": [4, 5, 54, 57], "2coordin": 4, "dtype": [4, 5, 54, 57], "float641": [4, 5, 54, 57], "33arrai": [4, 57], "componentpandasindexpandasindex": [4, 5, 54, 57], "okai": [4, 54], "phase": [4, 7, 53, 54, 57], "boundari": [4, 7, 48, 52, 54], "draw": [4, 43, 54], "arbitrari": 4, "line": [4, 5, 19, 54, 57], "abov": [4, 57], "below": [4, 46, 54], "astyp": 4, "int": [4, 32, 39, 46], "ground_truth_label": [4, 5, 54, 57], "33": [4, 57], "int64": [4, 5, 54, 57], "800b": [4, 5, 54, 57], "1xarrai": [4, 54, 57], "int641": [4, 5, 54, 57], "1arrai": [4, 5, 54, 57], "plot": [4, 5, 8, 11, 19, 25, 37, 38, 45, 48, 52, 54, 57], "extract": [4, 5, 46], "new": [4, 6, 7, 46, 54, 56], "standalon": 4, "scatter": [4, 7, 19], "to_dataset": 4, "c": [4, 53], "kind": 4, "depend": [4, 7, 53], "flat": [4, 54, 57], "background": [4, 28, 57], "nois": [4, 54, 57], "law": [4, 57], "decai": [4, 57], "both": [4, 46, 57], "randomli": [4, 32, 54], "m": [4, 56], "ones_lik": 4, "1e": [4, 19, 29, 31, 39, 51, 53, 54, 57], "loc": 4, "scale": [4, 25, 46, 54], "shape": [4, 14, 19, 57], "domain": 4, "q": [4, 28, 31, 46, 51], "spectroscopi": 4, "wavelength": [4, 28], "wavenumb": 4, "geomspac": 4, "001": [4, 5, 32, 39, 54, 57], "150": [4, 5, 54, 57], "conduct": 4, "gather": [4, 32], "124kb": 4, "1kb": [4, 5, 54, 57], "001047": [4, 5, 54, 57], "001097": [4, 5, 54, 57], "9547": [4, 5, 54, 57], "120kb": [4, 5, 54, 57], "047e": [4, 57], "06": [4, 5, 54, 57], "318e": [4, 57], "065xarrai": 4, "2x": [4, 5, 54, 57], "150coordin": 4, "float640": [4, 5, 54, 57], "0arrai": [4, 5, 54, 57], "001149": [4, 5, 54, 57], "001204": [4, 5, 54, 57], "001261": [4, 5, 54, 57], "001321": [4, 5, 54, 57], "001383": [4, 5, 54, 57], "001449": [4, 5, 54, 57], "001518": [4, 5, 54, 57], "00159": [4, 5, 54, 57], "001665": [4, 5, 54, 57], "001744": [4, 5, 54, 57], "001827": [4, 5, 54, 57], "001914": [4, 5, 54, 57], "002005": [4, 5, 54, 57], "0021": [4, 5, 54, 57], "002199": [4, 5, 54, 57], "002304": [4, 5, 54, 57], "002413": [4, 5, 54, 57], "002527": [4, 5, 54, 57], "002647": [4, 5, 54, 57], "002773": [4, 5, 54, 57], "002905": [4, 5, 54, 57], "003042": [4, 5, 54, 57], "003187": [4, 5, 54, 57], "003338": [4, 5, 54, 57], "003496": [4, 5, 54, 57], "003662": [4, 5, 54, 57], "003836": [4, 5, 54, 57], "004018": [4, 5, 54, 57], "004209": [4, 5, 54, 57], "004409": [4, 5, 54, 57], "004618": [4, 5, 54, 57], "004837": [4, 5, 54, 57], "005066": [4, 5, 54, 57], "005307": [4, 5, 54, 57], "005559": [4, 5, 54, 57], "005822": [4, 5, 54, 57], "006099": [4, 5, 54, 57], "006388": [4, 5, 54, 57], "006691": [4, 5, 54, 57], "007009": [4, 5, 54, 57], "007341": [4, 5, 54, 57], "00769": [4, 5, 54, 57], "008055": [4, 5, 54, 57], "008437": [4, 5, 54, 57], "008837": [4, 5, 54, 57], "009256": [4, 5, 54, 57], "009696": [4, 5, 54, 57], "010156": [4, 5, 54, 57], "010638": [4, 5, 54, 57], "011142": [4, 5, 54, 57], "011671": [4, 5, 54, 57], "012225": [4, 5, 54, 57], "012805": [4, 5, 54, 57], "013413": [4, 5, 54, 57], "014049": [4, 5, 54, 57], "014716": [4, 5, 54, 57], "015414": [4, 5, 54, 57], "016146": [4, 5, 54, 57], "016912": [4, 5, 54, 57], "017714": [4, 5, 54, 57], "018555": [4, 5, 54, 57], "019435": [4, 5, 54, 57], "020358": [4, 5, 54, 57], "021324": [4, 5, 54, 57], "022335": [4, 5, 54, 57], "023395": [4, 5, 54, 57], "024505": [4, 5, 54, 57], "025668": [4, 5, 54, 57], "026886": [4, 5, 54, 57], "028162": [4, 5, 54, 57], "029498": [4, 5, 54, 57], "030898": [4, 5, 54, 57], "032364": [4, 5, 54, 57], "0339": [4, 5, 54, 57], "035509": [4, 5, 54, 57], "037194": [4, 5, 54, 57], "038959": [4, 5, 54, 57], "040807": [4, 5, 54, 57], "042744": [4, 5, 54, 57], "044772": [4, 5, 54, 57], "046897": [4, 5, 54, 57], "049122": [4, 5, 54, 57], "051453": [4, 5, 54, 57], "053894": [4, 5, 54, 57], "056452": [4, 5, 54, 57], "059131": [4, 5, 54, 57], "061936": [4, 5, 54, 57], "064875": [4, 5, 54, 57], "067954": [4, 5, 54, 57], "071179": [4, 5, 54, 57], "074556": [4, 5, 54, 57], "078094": [4, 5, 54, 57], "0818": [4, 5, 54, 57], "085681": [4, 5, 54, 57], "089747": [4, 5, 54, 57], "094006": [4, 5, 54, 57], "098467": [4, 5, 54, 57], "103139": [4, 5, 54, 57], "108033": [4, 5, 54, 57], "11316": [4, 5, 54, 57], "118529": [4, 5, 54, 57], "124154": [4, 5, 54, 57], "130045": [4, 5, 54, 57], "136216": [4, 5, 54, 57], "14268": [4, 5, 54, 57], "14945": [4, 5, 54, 57], "156542": [4, 5, 54, 57], "16397": [4, 5, 54, 57], "171751": [4, 5, 54, 57], "179901": [4, 5, 54, 57], "188438": [4, 5, 54, 57], "197379": [4, 5, 54, 57], "206746": [4, 5, 54, 57], "216556": [4, 5, 54, 57], "226832": [4, 5, 54, 57], "237596": [4, 5, 54, 57], "24887": [4, 5, 54, 57], "26068": [4, 5, 54, 57], "27305": [4, 5, 54, 57], "286006": [4, 5, 54, 57], "299578": [4, 5, 54, 57], "313794": [4, 5, 54, 57], "328684": [4, 5, 54, 57], "344281": [4, 5, 54, 57], "360618": [4, 5, 54, 57], "37773": [4, 5, 54, 57], "395654": [4, 5, 54, 57], "414429": [4, 5, 54, 57], "434094": [4, 5, 54, 57], "454693": [4, 5, 54, 57], "476269": [4, 5, 54, 57], "498869": [4, 5, 54, 57], "522542": [4, 5, 54, 57], "547337": [4, 5, 54, 57], "57331": [4, 5, 54, 57], "600514": [4, 5, 54, 57], "62901": [4, 5, 54, 57], "658858": [4, 5, 54, 57], "690122": [4, 5, 54, 57], "72287": [4, 5, 54, 57], "757172": [4, 5, 54, 57], "793102": [4, 5, 54, 57], "830736": [4, 5, 54, 57], "870156": [4, 5, 54, 57], "911447": [4, 5, 54, 57], "954697": [4, 5, 54, 57], "float642": [4, 57], "065arrai": [4, 57], "04747510e": [4, 57], "31787805e": [4, 57], "66353926e": [4, 57], "83722728e": [4, 57], "00": [4, 5, 54, 57], "67819206e": [4, 57], "80172430e": [4, 57], "50599443e": [4, 57], "89610589e": [4, 57], "12165544e": [4, 57], "34843582e": [4, 57], "99188297e": [4, 57], "86768381e": [4, 57], "40521543e": [4, 57], "65651582e": [4, 57], "28591956e": [4, 57], "94777344e": [4, 57], "32372734e": [4, 57], "13555353e": [4, 57], "98128536e": [4, 57], "66812833e": [4, 57], "50017820e": [4, 57], "01786432e": [4, 57], "26314347e": [4, 57], "05432275e": [4, 57], "94306337e": [4, 57], "94648513e": [4, 57], "16565727e": [4, 57], "14827245e": [4, 57], "94185540e": [4, 57], "69232987e": [4, 57], "02892678e": [4, 57], "57481288e": [4, 57], "35646331e": [4, 57], "23068376e": [4, 57], "12047399e": [4, 57], "06485436e": [4, 57], "xpandasindexpandasindex": [4, 5, 54, 57], "0010474522360006332": [4, 5, 54, 57], "0010971561867027272": [4, 5, 54, 57], "0011492187010036998": [4, 5, 54, 57], "0012037516980200685": [4, 5, 54, 57], "0012608724076806808": [4, 5, 54, 57], "001320703622736631": [4, 5, 54, 57], "0013833739627296209": [4, 5, 54, 57], "001449018150486198": [4, 5, 54, 57], "0015177773017322714": [4, 5, 54, 57], "6588581861506815": [4, 5, 54, 57], "6901224802908528": [4, 5, 54, 57], "7228703350949566": [4, 5, 54, 57], "75717214883374": [4, 5, 54, 57], "7931016603333051": [4, 5, 54, 57], "8307361074919352": [4, 5, 54, 57], "8701563933188907": [4, 5, 54, 57], "9114472598521185": [4, 5, 54, 57], "9546974703287516": [4, 5, 54, 57], "length": [4, 5, 50, 54, 57], "group": [4, 53, 54, 56, 57], "sub_d": [4, 57], "groupbi": [4, 57], "figur": [4, 38, 45], "marker": [4, 54], "l": 4, "xscale": [4, 5, 54, 57], "log": [4, 5, 54, 57], "yscale": [4, 5, 54, 57], "add_legend": [4, 5, 54, 57], "titl": [4, 5, 54], "piec": 4, "start": [4, 5, 54, 57], "choos": [4, 32, 54], "num_grid_point": 4, "a_grid": 4, "linspac": [4, 53], "b_grid": 4, "composition_grid": [4, 5, 19, 27, 29, 53, 54, 57], "meshgrid": 4, "ravel": 4, "164kb": [4, 5, 54, 57], "2500": [4, 5, 54, 57], "065": [4, 57], "40kb": [4, 5, 54, 57], "0xarrai": [4, 5, 54, 57], "150grid": [4, 5, 54, 57], "2500coordin": [4, 5, 54, 57], "2041": [4, 5, 54, 57], "20408163": [4, 5, 54, 57], "40816327": [4, 5, 54, 57], "59183673": [4, 5, 54, 57], "79591837": [4, 5, 54, 57], "edgecolor": 4, "memori": 4, "netcdf": 4, "to_netcdf": 4, "example_dataset": [4, 5, 54, 57], "nc": [4, 5, 54, 57], "ground": [4, 54], "truth": [4, 54], "explor": 4, "train": [4, 54], "learn": [4, 5, 7, 54], "correspond": [4, 54], "valid": 4, "expect": [4, 5], "mani": [4, 54], "double_ag": [4, 5, 27, 52, 53, 54, 57], "exact": [4, 43], "chang": [4, 54, 57], "foundat": [4, 54], "formul": [4, 7], "materi": [4, 7], "problem": 4, "vari": 4, "guid": [5, 7, 54, 55, 56], "walk": 5, "custom": 5, "perform": [5, 54], "analys": [5, 54], "own": [5, 7], "meet": 5, "algorithm": [5, 7, 54], "should": [5, 43, 45, 54], "indirectli": 5, "anoth": 5, "init": [5, 11], "take": [5, 38, 39, 43, 46, 54], "singl": [5, 11, 54], "argument": [5, 54], "mynorm": 5, "three": [5, 57], "them": [5, 54], "super": 5, "_get_vari": 5, "max": [5, 39, 46], "attr": 5, "descript": [5, 54], "test": [5, 50, 56, 57], "out": [5, 50, 54], "first": [5, 32, 46, 53, 54], "load_dataset": [5, 54, 57], "grid": [5, 31, 32, 38, 39, 40, 46, 51, 53, 54, 57], "composit": [5, 19, 29, 31, 32, 38, 46, 51, 53, 57], "36": [5, 54], "104": [5, 54], "measur": [5, 19, 32, 46, 53, 57], "915e": [5, 54], "479e": [5, 54], "885": [5, 54], "float645": [5, 54], "938": [5, 54], "478": [5, 54], "104arrai": [5, 54], "69995762": [5, 54], "36017531": [5, 54], "93782024": [5, 54], "17384162": [5, 54], "77901101": [5, 54], "69531938": [5, 54], "82535598": [5, 54], "16351158": [5, 54], "60370118": [5, 54], "73217969": [5, 54], "90994751": [5, 54], "71385158": [5, 54], "17465804": [5, 54], "75450299": [5, 54], "30875652": [5, 54], "86311327": [5, 54], "78926787": [5, 54], "04909185": [5, 54], "0368155": [5, 54], "80655234": [5, 54], "18529693": [5, 54], "40857492": [5, 54], "65214034": [5, 54], "7760677": [5, 54], "73176727": [5, 54], "18850408": [5, 54], "22314222": [5, 54], "21778243": [5, 54], "33560023": [5, 54], "22074632": [5, 54], "10711809": [5, 54], "36120136": [5, 54], "10263293": [5, 54], "17733076": [5, 54], "94096049": [5, 54], "98300725": [5, 54], "58238609": [5, 54], "27804755": [5, 54], "78026574": [5, 54], "5150357": [5, 54], "0825235": [5, 54], "36441059": [5, 54], "50770583": [5, 54], "52786027": [5, 54], "46324027": [5, 54], "75171924": [5, 54], "52523439": [5, 54], "71058719": [5, 54], "23218578": [5, 54], "72269505": [5, 54], "7555881": [5, 54], "24855529": [5, 54], "67539066": [5, 54], "6795503": [5, 54], "8397554": [5, 54], "64947346": [5, 54], "22478436": [5, 54], "35236821": [5, 54], "83077635": [5, 54], "65541542": [5, 54], "98441453": [5, 54], "03322162": [5, 54], "11755953": [5, 54], "77699299": [5, 54], "90192605": [5, 54], "94690136": [5, 54], "42679234": [5, 54], "72441631": [5, 54], "7338296": [5, 54], "27428886": [5, 54], "2094947": [5, 54], "43848935": [5, 54], "92898549": [5, 54], "34927984": [5, 54], "79890552": [5, 54], "37383273": [5, 54], "50284147": [5, 54], "0800645": [5, 54], "47797863": [5, 54], "10399908": [5, 54], "766": [5, 54], "885arrai": [5, 54], "91473866e": [5, 54], "47945621e": [5, 54], "36028471e": [5, 54], "94187833e": [5, 54], "95975369e": [5, 54], "07151476e": [5, 54], "97716281e": [5, 54], "35648739e": [5, 54], "63877436e": [5, 54], "90008720e": [5, 54], "76008223e": [5, 54], "09466497e": [5, 54], "73830160e": [5, 54], "01": [5, 54], "68956928e": [5, 54], "03891097e": [5, 54], "25128766e": [5, 54], "82586751e": [5, 54], "00886636e": [5, 54], "42016873e": [5, 54], "73396019e": [5, 54], "23904051e": [5, 54], "14723090e": [5, 54], "27145347e": [5, 54], "40494323e": [5, 54], "96972776e": [5, 54], "80114117e": [5, 54], "63801728e": [5, 54], "53037078e": [5, 54], "96144836e": [5, 54], "37164783e": [5, 54], "34596686e": [5, 54], "77244286e": [5, 54], "36862577e": [5, 54], "05730051e": [5, 54], "76616880e": [5, 54], "88473841e": [5, 54], "our": [5, 53, 54, 57], "run": [5, 43, 53, 54], "normalized_measur": 5, "ds_result": [5, 54, 57], "284kb": 5, "7918": 5, "794e": 5, "07xarrai": 5, "6118": 5, "07descript": 5, "datanam": [5, 54, 57], "mynormalizerinput_vari": 5, "measurementoutput_vari": [5, 54, 57], "normalized_measurementinput_prefix": 5, "noneoutput_prefix": [5, 54, 57], "nonearrai": [5, 54], "91802470e": 5, "11799984e": 5, "62518958e": 5, "03025545e": 5, "07": 5, "10417548e": 5, "56634140e": 5, "17616748e": 5, "60948648e": 5, "77682868e": 5, "85743648e": 5, "27847351e": 5, "66207454e": 5, "02708288e": 5, "17986996e": 5, "29621174e": 5, "82568785e": 5, "82270310e": 5, "17196818e": 5, "87282815e": 5, "61175726e": 5, "12380807e": 5, "74414748e": 5, "25784547e": 5, "88922908e": 5, "14542131e": 5, "44826467e": 5, "77369791e": 5, "04638501e": 5, "11118349e": 5, "80748260e": 5, "70128402e": 5, "32958846e": 5, "65968238e": 5, "50756118e": 5, "30364331e": 5, "79396458e": 5, "side": [5, 54], "compar": [5, 54], "fig": [5, 54, 57], "ax": [5, 19, 29, 31, 51, 54, 57], "subplot": [5, 19, 54, 57], "figsiz": [5, 43, 54, 57], "set": [5, 32, 54], "raw": [5, 28, 54], "tight_layout": [5, 57], "axi": [5, 28, 54], "subclass": 5, "confirm": 5, "task": [6, 7, 57], "scratch": [6, 7], "scienc": 7, "achiev": 7, "extens": 7, "multipl": [7, 46, 54, 56, 57], "machin": [7, 54, 56], "research": 7, "pleas": [7, 27, 52], "cite": 7, "manuscript": 7, "autonom": 7, "small": [7, 54], "angl": [7, 28], "acceler": 7, "soft": 7, "optim": [7, 38, 54], "under": 7, "review": 7, "visualiz": 7, "serializ": 7, "intermedi": [7, 54], "rich": 7, "trivial": 7, "multimod": 7, "map": 7, "pip": [7, 56], "git": [7, 56], "http": [7, 44, 56], "github": [7, 56], "com": [7, 44, 56], "usnistgov": [7, 56], "see": [7, 44, 53, 54, 56, 57], "setup": [7, 55], "page": [7, 54], "accord": [7, 39], "philosphi": 7, "describ": 7, "daniel": 7, "procida": 7, "diataxi": 7, "fr": 7, "four": 7, "step": [7, 39, 55], "beginn": [7, 55], "explan": [7, 53], "discuss": 7, "refer": 7, "technic": [7, 50], "prerequisit": 7, "branch": 7, "offlin": 7, "troubleshoot": 7, "quickstart": [7, 55], "add_exclus": [8, 11, 25], "point": [8, 11, 14, 25, 28, 32, 38, 54], "copi": [8, 11, 14, 17, 19, 25, 31, 43, 45, 51, 56], "get_next_sampl": [8, 11, 25, 32], "nth": [8, 11, 25], "composition_check": [8, 11, 25], "mask": [8, 11, 25, 28, 31, 40, 51], "kwarg": [8, 11, 14, 25], "reset_phasemap": [8, 11, 25], "phasemap": [8, 11, 17, 19, 25, 27, 52], "iterationcombin": [8, 27], "function1": 8, "function2": 8, "function2_frequ": 8, "calculate_metr": [8, 11, 25], "gp": [8, 11, 25], "lowestdens": [8, 27], "bandwidth": 8, "075": 8, "y_mean": 8, "y_var": 8, "varianc": [8, 27], "gauss2d": [8, 11, 25, 27], "cx": [8, 11, 25], "cy": [8, 11, 25], "sx": [8, 11, 25], "sy": [8, 11, 25], "sample_randomli": [11, 25], "ei": [11, 27], "model_typ": 11, "classifi": [11, 25, 38, 54, 57], "either": 11, "regressor": [11, 25, 38], "pseudoei": [11, 27], "thompson_sampl": [11, 25], "generaliz": [11, 25], "thought": [11, 25], "gpr": [11, 25], "delaunai": [14, 27, 41], "data_vari": [14, 17], "param": [14, 17, 41, 42, 53, 54, 57], "similar": [14, 27, 41, 53, 57], "comput": [14, 28, 53, 54, 57], "triangul": 14, "given": 14, "num_nod": 14, "adjac": 14, "matrix": [14, 41, 54], "distanc": [14, 27, 41], "constrain_sam": [14, 41], "constrain_differ": [14, 41, 54, 57], "dummi": [14, 27, 41], "apply_constraint": [14, 41], "arg": [14, 25], "normalize1": [14, 41], "normalize2": [14, 41], "to_dict": 14, "multimetr": [14, 27], "combine_bi": [14, 41], "prod": [14, 41], "combine_by_pow": [14, 41], "combine_by_coeff": [14, 41], "data_list": [14, 41], "sum": [14, 41], "update_nam": 14, "listifi": [14, 27, 50], "obj": [14, 50], "affinitypropag": [17, 27, 42], "dbscan": [17, 27], "gaussianmixturemodel": [17, 27, 42], "kerasclassifi": [17, 27], "model_path": 17, "model_q": 17, "deriv0": 17, "transpose_var": 17, "remap_labels_by_count": [17, 42], "silhouett": [17, 42], "w": [17, 42], "spectralclust": [17, 27, 42, 53, 54, 57], "label_encod": 19, "labels_ordin": [19, 31, 51], "numer": [19, 46], "sort": 19, "spatial": 19, "posit": [19, 54], "fname": 19, "ncompon": 19, "rescal": [19, 54], "mpl_kw": [19, 31, 49, 51], "save": 19, "slice": [19, 46], "update_encod": 19, "phasemapmodel": [19, 27], "phasemapview_mpl": [19, 27], "cmap": 19, "jet": 19, "xy": [19, 46], "make_ax": 19, "scatter_ternari": 19, "cart2ternari": [19, 27], "ternari": [19, 29, 31, 46, 49, 51], "cartesian": [19, 29, 31, 39, 51], "coorid": 19, "pts_per_row": [19, 29, 31, 39, 51], "dim": [19, 29, 31, 39, 42, 46, 51, 53, 54, 57], "ep": [19, 29, 39], "09": [19, 29, 39], "format_plot_ternari": [19, 27], "label_a": 19, "label_b": 19, "label_c": 19, "phasemap_grid_factori": [19, 27], "rescale_composit": [19, 27], "remove_zero": 19, "ternary2cart": [19, 27], "get_next_sample_passthrough": [25, 27], "next_sampl": [25, 32, 53, 54], "pseudoucb": [25, 27, 32], "modul": [27, 48, 52, 53, 54], "deprec": [27, 52], "remov": [27, 28, 46, 52, 54], "futur": [27, 52], "version": [27, 52, 56], "instead": [27, 52], "acquisitionfunct": [27, 48, 52], "ei_acquisitionfunct": [27, 52], "ucb_acquisitionfunct": [27, 52], "gaussianprocess": [27, 52], "hscedgaussianprocess": [27, 52], "phaselabel": [27, 48, 52], "phasemap_panda": [27, 52], "metric": [27, 52, 53, 54, 57], "agentcli": [27, 48, 52], "sas_agentdriv": [27, 52], "multimodal_agentdriv": [27, 52], "dowshampoo_sampledriv": [27, 52], "sans_al_sampledriv": [27, 52], "saxs_al_sampledriv": [27, 52], "sas_al_sampledriv": [27, 52], "sas_grid_al_sampledriv": [27, 52], "multimodal_al_sampledriv": [27, 52], "vsas_nodeck_al_sampledriv": [27, 52], "watchdog": [27, 52], "xarray_extens": [27, 48, 52], "afl_dataarraytool": [27, 31, 51], "afl_datasettool": [27, 31, 51], "compositiontool": [27, 31, 51], "labeltool": [27, 31, 51], "scatteringtool": [27, 31, 51], "util": [27, 31, 51, 52], "reduce_usax": [27, 52], "amplifier_correct": [27, 28], "calc_r_q": [27, 28], "centroid": [27, 28], "reduce_uascan": [27, 28], "remove_masked_data": [27, 28], "composition_grid_ternari": [27, 29], "mpl_format_ternari": [27, 29], "ternary_to_xi": [27, 29, 31, 51], "r": 28, "usax": 28, "dark": 28, "gain": 28, "amplifi": 28, "pd": 28, "pd_bkg": 28, "pd_gain": 28, "i0": 28, "i0_bkg": 28, "i0_gain": 28, "ar_cent": 28, "v_f_gain": 28, "float": [28, 32, 37, 39, 46], "lambda": [28, 32], "center": 28, "rock": 28, "curv": 28, "ndarrai": [28, 41], "crystal": 28, "count": [28, 32], "time": [28, 54], "photodiod": 28, "incid": 28, "monitor": 28, "i0_amp_gain": 28, "voltag": 28, "frequenc": 28, "convert": 28, "qvec": 28, "rvec": 28, "i_o": 28, "root": 28, "livedata": 28, "routin": 28, "range_spec": 29, "label_right": 29, "label_top": 29, "label_left": 29, "comp": 29, "da": [31, 51], "data_dict": [31, 51], "concat_dim": [31, 51], "warn": [31, 46, 51], "much": [31, 51], "loss": [31, 51], "add_grid": [31, 51], "dim_nam": [31, 51], "overwrit": [31, 51], "get_grid": [31, 51], "get_grid_old": [31, 51], "get_range_sc": [31, 51], "spec": [31, 51], "get_standard_sc": [31, 51], "plot_3d": [31, 51], "set_label": [31, 51], "plot_continu": 31, "plot_discret": 31, "plot_mask": [31, 51], "mask_nam": [31, 51], "components_nam": [31, 51], "components_grid": [31, 51], "plot_scatt": [31, 51], "set_axes_label": [31, 49, 51], "discrete_label": [31, 49, 51], "plot_surfac": [31, 51], "make_default": [31, 51], "make_ordin": [31, 51], "ordinal_nam": [31, 51], "labels_nam": [31, 51], "sortbi": [31, 51], "qlo": [31, 51], "qhi": [31, 51], "qlo_isel": [31, 51], "qhi_isel": [31, 51], "pedest": [31, 46, 51], "npt": [31, 46, 51], "250": [31, 46, 51, 54, 57], "deriv": [31, 46, 51, 53, 54, 57], "sgf_window_length": [31, 51], "31": [31, 46, 51], "sgf_polyord": [31, 51], "apply_log_scal": [31, 46, 51, 54], "plot_linlin": [31, 51], "logq": [31, 51], "ylabel": [31, 51], "intens": [31, 51], "u": [31, 51, 54], "xlabel": [31, 51], "\u00e5": [31, 51], "legend": [31, 51], "plot_loglog": [31, 51], "plot_logwaterfal": [31, 51], "plot_waterfal": [31, 51], "preprocess_data": [31, 51], "xname": [31, 51], "yname": [31, 51], "xlo": [31, 46, 51], "xhi": [31, 46, 51], "xlo_isel": [31, 46, 51], "xhi_isel": [31, 46, 51], "logx": [31, 51], "logi": [31, 51], "suppli": [32, 38, 39, 41, 46, 54], "acquisitionerror": 32, "decis": [32, 54], "occur": 32, "grid_vari": [32, 38, 39, 53, 54], "grid_dim": [32, 38, 39, 53, 54], "next_composit": 32, "decision_rtol": 32, "05": 32, "excluded_comps_vari": [32, 54], "excluded_comps_dim": 32, "exclusion_radiu": [32, 39], "acquisitionfunctionbas": 32, "appli": [32, 38, 39, 40, 41, 46, 54, 57], "exclude_previous_sampl": 32, "modifi": [32, 54], "surfac": [32, 54], "place": [32, 54], "exclus": 32, "zone": 32, "previous": 32, "find": [32, 46, 54], "maximum": [32, 46, 54], "maxvalueaf": [32, 53, 54], "combine_coeff": 32, "multimodalmask_maxvalueaf": 32, "decision_vari": 32, "mask_label_vari": 32, "phase_select_coord": 32, "dict": [32, 39, 41, 43, 46, 50], "randomaf": 32, "exclud": 32, "boundaryscor": 37, "gt_hull_vari": 37, "al_hull_vari": 37, "boundary_scor": 37, "bool": [37, 43, 46, 49], "concavehul": 37, "hull_tracing_ratio": 37, "drop_phas": 37, "component_dim": [37, 39, 46, 49, 53, 54], "label_vari": 37, "segmentize_length": 37, "025": 37, "allow_hol": 37, "discret": 38, "dummyextrapol": 38, "feature_input_vari": [38, 53, 54], "predictor_input_vari": [38, 53, 54], "sample_dim": [38, 39, 41, 46, 53, 54, 57], "mpl_kwarg": [38, 45], "gaussianprocessclassifi": [38, 53, 54], "kernel": [38, 57], "fmin_l_bfgs_b": 38, "gaussianprocessregressor": 38, "predictor_uncertainty_vari": 38, "fix_nan": 38, "parametr": 39, "barycentricgrid": 39, "barycentricgridgener": 39, "cartesiangrid": 39, "grid_spec": 39, "cartesiangridgener": 39, "min": [39, 46], "gaussianpoint": 39, "comps_dim": 39, "exclusion_depth": 39, "gaussianpointsgener": 39, "generatorbas": 39, "pairmetr": [40, 48, 52], "pair": [40, 41, 54], "matric": [40, 41], "mask_vari": 40, "grid_dim_in": 40, "grid_dim_out": 40, "renam": 40, "combinemetr": 41, "number": [41, 46, 54], "delaunaymetr": 41, "distancemetr": 41, "dummymetr": 41, "j": [41, 54], "constrain": 41, "perfectli": [41, 54], "dissimilar": 41, "diagon": [41, 54], "equal": 41, "similaritymetr": [41, 54], "use_silhouett": 42, "pipelinesop": 43, "signatur": 43, "pipelineopbas": [43, 45], "write": 43, "dataarrai": [43, 54], "prefer": 43, "mirror": 43, "behavior": [43, 54], "tiled_data": [43, 45], "disable_progress_bar": 43, "clear_output": 43, "clear": [43, 54], "edge_label": 43, "draw_plotli": [43, 54], "fulli": 43, "aren": 43, "hopefulli": 43, "distinguish": 43, "isn": 43, "enforc": 43, "moment": 43, "make_graph": 43, "print": [43, 50, 54], "summari": [43, 46], "print_cod": 43, "string": [43, 50], "approxim": 43, "fail": 43, "edit": [43, 56], "mai": 43, "ident": 43, "caution": 43, "static": 43, "read": 43, "filenam": 43, "pickl": 43, "disk": 43, "pickled_pipelin": 43, "pkl": 43, "search": [43, 46, 53, 54], "filepath": 43, "written": 43, "stackoverflow": 44, "question": 44, "49573131": 44, "pymc3": 44, "assign": [44, 54, 57], "_thread": 44, "_local": 44, "abc": 45, "add_to_dataset": 45, "copy_dataset": 45, "add_to_til": 45, "tile": 45, "catalogu": 45, "arraytovar": 46, "split_dim": 46, "postfix": 46, "squeez": 46, "datasettovar": 46, "insert": 46, "split": 46, "datarrai": 46, "barycentrictoternaryxi": 46, "barycentr": 46, "mpltern": 46, "yuzie007": 46, "destandard": 46, "scale_vari": [46, 54], "min_val": [46, 53, 54], "max_val": [46, 53, 54], "extrema": 46, "return_coord": 46, "slice_dim": 46, "preprocessorbas": 46, "savgolfilt": [46, 53, 54, 57], "window_length": [46, 54], "polyord": 46, "smooth": [46, 54], "savitski": [46, 57], "golai": [46, 57], "filter": [46, 57], "scipi": 46, "savgol_filt": 46, "taken": 46, "trim": 46, "former": 46, "latter": 46, "integ": 46, "advis": 46, "varieti": 46, "log10": 46, "log_": 46, "duplic": 46, "averag": 46, "nan": 46, "fill": 46, "interpol": 46, "constant": [46, 54], "geometr": 46, "linearli": 46, "remain": 46, "drop": 46, "subtract": 46, "coord_valu": 46, "baselin": 46, "subtractmin": 46, "sympytransform": 46, "transform_dim": 46, "sympi": 46, "express": 46, "ternaryxytobarycentr": 46, "varstoarrai": 46, "variable_dim": 46, "variable_map": 46, "zscale": 46, "z": 46, "mean": [46, 54], "deviat": [46, 54], "zscaleerror": 46, "zscale_error": 46, "y_err": 46, "autosa": [48, 52], "extrapol": [48, 52, 53], "maskgrid": [48, 52], "preprocessor": [48, 52], "tensorflowextrapol": [48, 52], "autosas_driv": [48, 52], "agentdriv": [48, 52], "plot_scatter_mpl": [49, 54], "component_vari": 49, "artist": 49, "plot_surface_mpl": [49, 54], "collect": [50, 54, 57], "helper": [50, 54], "extract_paramet": 50, "reconstruct": 50, "target": 50, "iter": 50, "sometim": 50, "particular": 50, "want": [50, 53, 54, 56], "my_func": 50, "been": 50, "newlin": 50, "component_var": 51, "packag": [52, 56], "apiserv": 52, "driver": 52, "autom": [52, 56], "short": 53, "doc": 53, "building_pipelin": 53, "my_first_pipelin": [53, 54], "normalized_composit": [53, 54], "normalized_composition_grid": [53, 54], "laplacian": [53, 54, 57], "gamma": [53, 54, 57], "n_phase": [53, 54, 57], "extrap": [53, 54], "extrap_entropi": [53, 54], "synthet": [53, 57], "n_sampl": 53, "n_point": 53, "acquisitin": 53, "data_var": 53, "component_grid": 53, "coord": 53, "ds_out": 53, "break": 53, "down": 53, "happen": 53, "syntax": 53, "cluster": [53, 57], "select": [53, 54], "highest": 53, "entropi": [53, 54], "ve": 53, "seen": 53, "complic": 53, "quick": 54, "converg": 54, "savitzki": [54, 57], "spectral": [54, 57], "posterior": 54, "pre": 54, "prepar": 54, "multi": 54, "simul": [54, 57], "labels": 54, "column": 54, "tabl": 54, "check": 54, "align": 54, "better": 54, "so": 54, "shown": 54, "n": 54, "statist": 54, "view": 54, "about": 54, "recreat": 54, "205kb": 54, "57": 54, "2042": 54, "05441": 54, "0478": 54, "2042descript": 54, "rang": 54, "1name": 54, "standardizeinput_vari": 54, "compositionoutput_vari": 54, "normalized_compositioninput_prefix": 54, "nonedim": [54, 57], "samplecomponent_dim": 54, "componentmin_v": 54, "56999576": 54, "05440701": 54, "89378202": 54, "64695366": 54, "3779011": 54, "78781278": 54, "9825356": 54, "28654046": 54, "16037012": 54, "94928719": 54, "79099475": 54, "58855406": 54, "2174658": 54, "19018012": 54, "93087565": 54, "11452453": 54, "27892679": 54, "00196367": 54, "50368155": 54, "71226209": 54, "11852969": 54, "656343": 54, "16521403": 54, "79104271": 54, "27317673": 54, "00754016": 54, "92231422": 54, "2887113": 54, "83356002": 54, "20882985": 54, "81071181": 54, "89444805": 54, "41026329": 54, "24709323": 54, "79409605": 54, "43932029": 54, "65823861": 54, "6111219": 54, "37802657": 54, "82060143": 54, "50825235": 54, "21457642": 54, "85077058": 54, "10111441": 54, "44632403": 54, "27006877": 54, "85252344": 54, "26842349": 54, "92321858": 54, "8289078": 54, "67555881": 54, "40994221": 54, "76753907": 54, "06718201": 54, "58397554": 54, "42597894": 54, "02247844": 54, "73409473": 54, "88307764": 54, "42621662": 54, "89844145": 54, "00132886": 54, "01175595": 54, "47107972": 54, "7901926": 54, "75787605": 54, "74267923": 54, "94897665": 54, "87338296": 54, "49097155": 54, "22094947": 54, "37753957": 54, "89289855": 54, "41397119": 54, "07989055": 54, "65495331": 54, "25028415": 54, "00320258": 54, "04779786": 54, "20415996": 54, "02041": 54, "0descript": 54, "composition_gridoutput_vari": 54, "normalized_composition_gridinput_prefix": 54, "gridcomponent_dim": 54, "02040816": 54, "04081633": 54, "95918367": 54, "97959184": 54, "visualis": 54, "text": 54, "39": 54, "rel": 54, "unchang": 54, "magnitud": 54, "emphas": 54, "focu": 54, "window": [54, 56], "larger": 54, "give": 54, "smoother": 54, "span": 54, "407kb": 54, "log_x": [54, 57], "988": [54, 57], "200kb": 54, "82": 54, "4063xarrai": 54, "2500log_x": 54, "250coordin": 54, "976": [54, 57], "01205": [54, 57], "987952": [54, 57], "975904": [54, 57], "024096": [54, 57], "012048": [54, 57], "825": 54, "3897": 54, "4063descript": 54, "savgolfilterinput_vari": [54, 57], "derivativeinput_prefix": [54, 57], "xnpt": [54, 57], "250xlo": [54, 57], "nonexhi": [54, 57], "nonexlo_isel": [54, 57], "nonexhi_isel": [54, 57], "nonepedest": [54, 57], "nonederiv": [54, 57], "1apply_log_scal": [54, 57], "truepolyord": [54, 57], "2window_length": [54, 57], "50arrai": 54, "82019992": 54, "82462256": 54, "82904519": 54, "35145453": 54, "36993018": 54, "38840584": 54, "2626048": 54, "24893257": 54, "23526033": 54, "01349491": 54, "01809932": 54, "02270373": 54, "50261177": 54, "4760206": 54, "44942943": 54, "12473091": 54, "13576784": 54, "14680477": 54, "24159282": 54, "24193045": 54, "24226809": 54, "52407629": 54, "54400047": 54, "56392465": 54, "67922195": 54, "69182355": 54, "70442514": 54, "30180559": 54, "31353524": 54, "32526489": 54, "96638732": 54, "97110223": 54, "97581713": 54, "37305086": 54, "389679": 54, "40630713": 54, "log_xpandasindexpandasindex": [54, 57], "9879518072289155": [54, 57], "9759036144578315": [54, 57], "963855421686747": [54, 57], "9518072289156625": [54, 57], "9397590361445785": [54, 57], "927710843373494": [54, 57], "9156626506024095": [54, 57], "9036144578313254": [54, 57], "891566265060241": [54, 57], "10843373493975905": [54, 57], "09638554216867457": [54, 57], "08433734939759008": [54, 57], "07228915662650603": [54, 57], "06024096385542155": [54, 57], "04819277108433706": [54, 57], "03614457831325302": [54, 57], "02409638554216853": [54, 57], "012048192771084043": [54, 57], "savgol": 54, "right": 54, "region": 54, "left": 54, "simlar": 54, "487kb": 54, "sample_i": [54, 57], "sample_j": [54, 57], "4063": 54, "80kb": 54, "250sample_i": [54, 57], "100sample_j": 54, "100coordin": 54, "9974": 54, "9503": 54, "0metric": [54, 57], "laplaciangamma": [54, 57], "0001name": [54, 57], "similaritymetricinput_vari": [54, 57], "derivativeoutput_vari": [54, 57], "similarityinput_prefix": [54, 57], "nonesample_dim": [54, 57], "sampleconstrain_sam": [54, 57], "99741833": 54, "950302": 54, "95081738": 54, "99761626": 54, "99830741": 54, "95025158": 54, "95041344": 54, "99752619": 54, "99755674": 54, "99504435": 54, "9505596": 54, "95006123": 54, "95158475": 54, "95047502": 54, "99740548": 54, "quadmesh": 54, "0x312e02690": 54, "pixel": 54, "bright": 54, "darker": 54, "perfect": 54, "becaus": 54, "488kb": 54, "1n_phase": [54, 57], "2name": [54, 57], "spectralclusteringinput_vari": [54, 57], "similarityoutput_vari": [54, 57], "labelsinput_prefix": [54, 57], "sampleuse_silhouett": [54, 57], "falsearrai": [54, 57], "extrap_mean": 54, "prefix": 54, "548kb": 54, "20kb": [54, 57], "5813": 54, "5687": 54, "4603": 54, "extrap_y_prob": 54, "4603xarrai": 54, "gaussianprocessclassifierinput_vari": 54, "extrapfeature_input_vari": 54, "normalized_compositionpredictor_input_vari": 54, "labelsgrid_vari": 54, "normalized_composition_gridsample_dim": 54, "samplegrid_dim": 54, "gridgrid": 54, "noneoptim": 54, "fmin_l_bfgs_barrai": 54, "4565": 54, "4603name": 54, "58125708": 54, "56865533": 54, "55554833": 54, "45390195": 54, "45652977": 54, "46031056": 54, "extrap_y_entropi": 54, "relat": 54, "confid": 54, "maxim": 54, "uncertainti": 54, "uncertain": 54, "568kb": 54, "af_sampl": 54, "decision_surfac": 54, "7655": 54, "7391": 54, "512": 54, "16b": 54, "082": 54, "49xarrai": 54, "100af_sampl": 54, "1coordin": 54, "5041": 54, "512descript": 54, "determin": 54, "next_samplenam": 54, "maxvalueafinput_vari": 54, "next_sampleinput_prefix": 54, "noneinput_vari": 54, "noneexcluded_comps_dim": 54, "nonecount": 54, "1grid_vari": 54, "composition_gridgrid_dim": 54, "griddecision_rtol": 54, "05exclusion_radiu": 54, "001combine_coeff": 54, "noneacquisit": 54, "60kb": [54, 57], "comp_grid": 54, "7116": 54, "512arrai": 54, "76549835": 54, "73908732": 54, "7116174": 54, "49858474": 54, "50409217": 54, "51201603": 54, "float644": 54, "49name": 54, "08163265": 54, "48979592": 54, "color": 54, "red": 54, "doesn": 54, "absolut": 54, "top": 54, "acquisition_rtol": 54, "percent": 54, "With": 54, "whole": 54, "appeal": 54, "identif": 54, "classif": [54, 57], "further": 54, "complet": 54, "easili": 54, "cover": 56, "later": 56, "sourc": 56, "simplest": 56, "clone": 56, "repositori": 56, "mode": 56, "cd": 56, "jupyt": 56, "tensorflow": 56, "gpflow": 56, "pytorch": 56, "dev": 56, "squar": 56, "bracket": 56, "commit": 56, "hash": 56, "internet": 56, "wheel": 56, "On": 56, "whl": 56, "afl_ag": 56, "py3": 56, "solut": 56, "conflict": 56, "encount": 56, "venv": 56, "bin": 56, "script": 56, "miss": 56, "after": 56, "failur": 56, "sure": 56, "latest": 56, "upgrad": 56, "setuptool": 56, "identifi": 57, "clustering_pipelin": 57, "pairwis": 57, "quantifi": 57, "everi": 57, "score": 57, "re": 57, "184kb": 57, "9114": 57, "0241": 57, "667e": 57, "417e": 57, "736": 57, "463": 57, "100kb": 57, "262": 57, "317": 57, "2221": 57, "2423": 57, "9496": 57, "9958": 57, "400b": 57, "50x": 57, "150log_x": 57, "50sample_j": 57, "50coordin": 57, "463arrai": 57, "66681032e": 57, "41657155e": 57, "48046864e": 57, "82545944e": 57, "08726041e": 57, "07532316e": 57, "04704674e": 57, "05620273e": 57, "64341595e": 57, "77233056e": 57, "19350969e": 57, "71313157e": 57, "16372403e": 57, "17089054e": 57, "21690634e": 57, "99746317e": 57, "21361648e": 57, "89651039e": 57, "97066376e": 57, "04335416e": 57, "35637489e": 57, "27901656e": 57, "92548698e": 57, "10348609e": 57, "24268521e": 57, "87774264e": 57, "52947982e": 57, "14632797e": 57, "42341491e": 57, "83736469e": 57, "16278887e": 57, "62603408e": 57, "06192476e": 57, "84670516e": 57, "73592981e": 57, "46273598e": 57, "2423descript": 57, "31arrai": 57, "26237381": 57, "31739876": 57, "37242371": 57, "39407098": 57, "43000691": 57, "46594284": 57, "17010102": 57, "16139183": 57, "15268264": 57, "79188182": 57, "84429393": 57, "89670605": 57, "81536196": 57, "76446481": 57, "71356765": 57, "28131717": 57, "31055531": 57, "33979344": 57, "0843537": 57, "075217": 57, "06608031": 57, "02111355": 57, "03059186": 57, "04007016": 57, "59787666": 57, "56217375": 57, "52647083": 57, "45569821": 57, "5034612": 57, "55122419": 57, "00936809": 57, "00878607": 57, "00820405": 57, "20180244": 57, "22205709": 57, "24231174": 57, "9512": 57, "94955571": 57, "95123375": 57, "95039207": 57, "95189277": 57, "94995344": 57, "99489543": 57, "99547878": 57, "99509997": 57, "99635144": 57, "99496338": 57, "99743651": 57, "99585264": 57, "99589615": 57, "99701581": 57, "99575875": 57, "int640": 57, "o": 57, "phase1": 57, "put": 57, "set_titl": 57, "doe": 57, "excel": 57, "job": 57, "distinct": 57, "successfulli": 57, "abl": 57, "detect": 57, "transit": 57, "scientif": 57}, "objects": {"AFL.agent": [[8, 0, 0, "-", "AcquisitionFunction"], [11, 0, 0, "-", "EI_AcquisitionFunction"], [14, 0, 0, "-", "Metric"], [17, 0, 0, "-", "PhaseLabeler"], [18, 0, 0, "-", "PhaseMap"], [19, 0, 0, "-", "PhaseMap_pandas"], [25, 0, 0, "-", "UCB_AcquisitionFunction"], [28, 0, 0, "-", "reduce_usaxs"], [29, 0, 0, "-", "util"], [31, 0, 0, "-", "xarray_extensions"]], "AFL.agent.AcquisitionFunction": [[8, 1, 1, "", "Acquisition"], [8, 1, 1, "", "IterationCombined"], [8, 1, 1, "", "LowestDensity"], [8, 1, 1, "", "Random"], [8, 1, 1, "", "Variance"], [8, 3, 1, "", "gauss2d"]], "AFL.agent.AcquisitionFunction.Acquisition": [[8, 2, 1, "", "add_exclusion"], [8, 2, 1, "", "copy"], [8, 2, 1, "", "execute"], [8, 2, 1, "", "get_next_sample"], [8, 2, 1, "", "plot"], [8, 2, 1, "", "reset_phasemap"]], "AFL.agent.AcquisitionFunction.IterationCombined": [[8, 2, 1, "", "calculate_metric"], [8, 2, 1, "", "reset_phasemap"]], "AFL.agent.AcquisitionFunction.LowestDensity": [[8, 2, 1, "", "calculate_metric"]], "AFL.agent.AcquisitionFunction.Random": [[8, 2, 1, "", "calculate_metric"]], "AFL.agent.AcquisitionFunction.Variance": [[8, 2, 1, "", "calculate_metric"]], "AFL.agent.EI_AcquisitionFunction": [[11, 1, 1, "", "Acquisition"], [11, 1, 1, "", "EI"], [11, 3, 1, "", "gauss2d"], [11, 1, 1, "", "pseudoEI"]], "AFL.agent.EI_AcquisitionFunction.Acquisition": [[11, 2, 1, "", "add_exclusion"], [11, 2, 1, "", "copy"], [11, 2, 1, "", "execute"], [11, 2, 1, "", "get_next_sample"], [11, 2, 1, "", "plot"], [11, 2, 1, "", "reset_phasemap"]], "AFL.agent.EI_AcquisitionFunction.EI": [[11, 2, 1, "", "calculate_metric"]], "AFL.agent.EI_AcquisitionFunction.pseudoEI": [[11, 2, 1, "", "calculate_metric"]], "AFL.agent.Metric": [[14, 1, 1, "", "Delaunay"], [14, 1, 1, "", "Distance"], [14, 1, 1, "", "Dummy"], [14, 1, 1, "", "Metric"], [14, 1, 1, "", "MultiMetric"], [14, 1, 1, "", "Similarity"], [14, 3, 1, "", "listify"]], "AFL.agent.Metric.Delaunay": [[14, 2, 1, "", "calculate"]], "AFL.agent.Metric.Distance": [[14, 2, 1, "", "calculate"]], "AFL.agent.Metric.Dummy": [[14, 2, 1, "", "calculate"]], "AFL.agent.Metric.Metric": [[14, 2, 1, "", "apply_constraints"], [14, 2, 1, "", "calculate"], [14, 2, 1, "", "copy"], [14, 2, 1, "", "normalize1"], [14, 2, 1, "", "normalize2"], [14, 2, 1, "", "to_dict"]], "AFL.agent.Metric.MultiMetric": [[14, 2, 1, "", "calculate"], [14, 2, 1, "", "prod"], [14, 2, 1, "", "sum"], [14, 2, 1, "", "to_dict"], [14, 2, 1, "", "update_name"]], "AFL.agent.Metric.Similarity": [[14, 2, 1, "", "calculate"]], "AFL.agent.PhaseLabeler": [[17, 1, 1, "", "AffinityPropagation"], [17, 1, 1, "", "DBSCAN"], [17, 1, 1, "", "GaussianMixtureModel"], [17, 1, 1, "", "KerasClassifier"], [17, 1, 1, "", "PhaseLabeler"], [17, 1, 1, "", "SpectralClustering"]], "AFL.agent.PhaseLabeler.AffinityPropagation": [[17, 2, 1, "", "label"]], "AFL.agent.PhaseLabeler.DBSCAN": [[17, 2, 1, "", "label"]], "AFL.agent.PhaseLabeler.GaussianMixtureModel": [[17, 2, 1, "", "label"]], "AFL.agent.PhaseLabeler.KerasClassifier": [[17, 2, 1, "", "label"]], "AFL.agent.PhaseLabeler.PhaseLabeler": [[17, 2, 1, "", "copy"], [17, 2, 1, "", "label"], [17, 2, 1, "", "remap_labels_by_count"], [17, 2, 1, "", "silhouette"]], "AFL.agent.PhaseLabeler.SpectralClustering": [[17, 2, 1, "", "label"]], "AFL.agent.PhaseMap_pandas": [[19, 1, 1, "", "PhaseMap"], [19, 1, 1, "", "PhaseMapModel"], [19, 1, 1, "", "PhaseMapView_MPL"], [19, 3, 1, "", "cart2ternary"], [19, 3, 1, "", "composition_grid"], [19, 3, 1, "", "format_plot_ternary"], [19, 3, 1, "", "phasemap_grid_factory"], [19, 3, 1, "", "rescale_compositions"], [19, 3, 1, "", "ternary2cart"]], "AFL.agent.PhaseMap_pandas.PhaseMap": [[19, 2, 1, "", "append"], [19, 4, 1, "", "components"], [19, 4, 1, "", "compositions"], [19, 2, 1, "", "copy"], [19, 4, 1, "", "label_encoder"], [19, 4, 1, "", "labels"], [19, 4, 1, "", "labels_ordinal"], [19, 2, 1, "", "load"], [19, 4, 1, "", "measurements"], [19, 4, 1, "", "ncomponents"], [19, 2, 1, "", "plot"], [19, 2, 1, "", "project"], [19, 2, 1, "", "save"], [19, 4, 1, "", "shape"], [19, 4, 1, "", "size"], [19, 2, 1, "", "slice"], [19, 2, 1, "", "update_encoder"]], "AFL.agent.PhaseMap_pandas.PhaseMapModel": [[19, 2, 1, "", "append"]], "AFL.agent.PhaseMap_pandas.PhaseMapView_MPL": [[19, 2, 1, "", "lines"], [19, 2, 1, "", "make_axes"], [19, 2, 1, "", "scatter"], [19, 2, 1, "", "scatter_ternary"]], "AFL.agent.UCB_AcquisitionFunction": [[25, 1, 1, "", "Acquisition"], [25, 3, 1, "", "gauss2d"], [25, 3, 1, "", "get_next_sample_passthrough"], [25, 1, 1, "", "pseudoUCB"]], "AFL.agent.UCB_AcquisitionFunction.Acquisition": [[25, 2, 1, "", "add_exclusion"], [25, 2, 1, "", "copy"], [25, 2, 1, "", "execute"], [25, 2, 1, "", "get_next_sample"], [25, 2, 1, "", "plot"], [25, 2, 1, "", "reset_phasemap"]], "AFL.agent.UCB_AcquisitionFunction.pseudoUCB": [[25, 2, 1, "", "calculate_metric"]], "AFL.agent.reduce_usaxs": [[28, 3, 1, "", "amplifier_corrections"], [28, 3, 1, "", "calc_R_Q"], [28, 3, 1, "", "centroid"], [28, 3, 1, "", "reduce_uascan"], [28, 3, 1, "", "remove_masked_data"]], "AFL.agent.util": [[29, 3, 1, "", "composition_grid"], [29, 3, 1, "", "composition_grid_ternary"], [29, 3, 1, "", "mpl_format_ternary"], [29, 3, 1, "", "ternary_to_xy"]], "AFL.agent.xarray_extensions": [[31, 1, 1, "", "AFL_DataArrayTools"], [31, 1, 1, "", "AFL_DatasetTools"], [31, 1, 1, "", "CompositionTools"], [31, 1, 1, "", "LabelTools"], [31, 1, 1, "", "ScatteringTools"], [31, 1, 1, "", "Utilities"]], "AFL.agent.xarray_extensions.AFL_DatasetTools": [[31, 2, 1, "", "append"]], "AFL.agent.xarray_extensions.CompositionTools": [[31, 2, 1, "", "add_grid"], [31, 2, 1, "", "get"], [31, 2, 1, "", "get_grid"], [31, 2, 1, "", "get_grid_old"], [31, 2, 1, "", "get_range_scaled"], [31, 2, 1, "", "get_standard_scaled"], [31, 2, 1, "", "plot_3D"], [31, 2, 1, "", "plot_continuous"], [31, 2, 1, "", "plot_discrete"], [31, 2, 1, "", "plot_mask"], [31, 2, 1, "", "plot_scatter"], [31, 2, 1, "", "plot_surface"], [31, 2, 1, "", "ternary_to_xy"]], "AFL.agent.xarray_extensions.LabelTools": [[31, 2, 1, "", "make_default"], [31, 2, 1, "", "make_ordinal"]], "AFL.agent.xarray_extensions.ScatteringTools": [[31, 2, 1, "", "clean"], [31, 2, 1, "", "plot_linlin"], [31, 2, 1, "", "plot_loglog"], [31, 2, 1, "", "plot_logwaterfall"], [31, 2, 1, "", "plot_waterfall"]], "AFL.agent.xarray_extensions.Utilities": [[31, 2, 1, "", "preprocess_data"]], "AFL.double_agent": [[32, 0, 0, "-", "AcquisitionFunction"], [37, 0, 0, "-", "Boundary"], [38, 0, 0, "-", "Extrapolator"], [39, 0, 0, "-", "Generator"], [40, 0, 0, "-", "MaskGrid"], [41, 0, 0, "-", "PairMetric"], [42, 0, 0, "-", "PhaseLabeler"], [43, 0, 0, "-", "Pipeline"], [44, 0, 0, "-", "PipelineContext"], [45, 0, 0, "-", "PipelineOp"], [46, 0, 0, "-", "Preprocessor"], [49, 0, 0, "-", "plotting"], [50, 0, 0, "-", "util"], [51, 0, 0, "-", "xarray_extensions"]], "AFL.double_agent.AcquisitionFunction": [[32, 5, 1, "", "AcquisitionError"], [32, 1, 1, "", "AcquisitionFunction"], [32, 1, 1, "", "MaxValueAF"], [32, 1, 1, "", "MultimodalMask_MaxValueAF"], [32, 1, 1, "", "PseudoUCB"], [32, 1, 1, "", "RandomAF"]], "AFL.double_agent.AcquisitionFunction.AcquisitionFunction": [[32, 2, 1, "", "calculate"], [32, 2, 1, "", "exclude_previous_samples"], [32, 2, 1, "", "get_next_samples"]], "AFL.double_agent.AcquisitionFunction.MaxValueAF": [[32, 2, 1, "", "calculate"]], "AFL.double_agent.AcquisitionFunction.MultimodalMask_MaxValueAF": [[32, 2, 1, "", "calculate"]], "AFL.double_agent.AcquisitionFunction.PseudoUCB": [[32, 2, 1, "", "calculate"]], "AFL.double_agent.AcquisitionFunction.RandomAF": [[32, 2, 1, "", "calculate"]], "AFL.double_agent.Boundary": [[37, 1, 1, "", "BoundaryScore"], [37, 1, 1, "", "ConcaveHull"]], "AFL.double_agent.Boundary.BoundaryScore": [[37, 2, 1, "", "calculate"]], "AFL.double_agent.Boundary.ConcaveHull": [[37, 2, 1, "", "calculate"]], "AFL.double_agent.Extrapolator": [[38, 1, 1, "", "DummyExtrapolator"], [38, 1, 1, "", "Extrapolator"], [38, 1, 1, "", "GaussianProcessClassifier"], [38, 1, 1, "", "GaussianProcessRegressor"]], "AFL.double_agent.Extrapolator.DummyExtrapolator": [[38, 2, 1, "", "calculate"]], "AFL.double_agent.Extrapolator.Extrapolator": [[38, 2, 1, "", "calculate"], [38, 2, 1, "", "plot"]], "AFL.double_agent.Extrapolator.GaussianProcessClassifier": [[38, 2, 1, "", "calculate"]], "AFL.double_agent.Extrapolator.GaussianProcessRegressor": [[38, 2, 1, "", "calculate"]], "AFL.double_agent.Generator": [[39, 1, 1, "", "BarycentricGrid"], [39, 1, 1, "", "CartesianGrid"], [39, 1, 1, "", "GaussianPoints"], [39, 1, 1, "", "Generator"]], "AFL.double_agent.Generator.BarycentricGrid": [[39, 2, 1, "", "calculate"]], "AFL.double_agent.Generator.CartesianGrid": [[39, 2, 1, "", "calculate"]], "AFL.double_agent.Generator.GaussianPoints": [[39, 2, 1, "", "calculate"]], "AFL.double_agent.Generator.Generator": [[39, 2, 1, "", "calculate"]], "AFL.double_agent.MaskGrid": [[40, 1, 1, "", "MaskGrid"]], "AFL.double_agent.MaskGrid.MaskGrid": [[40, 2, 1, "", "calculate"]], "AFL.double_agent.PairMetric": [[41, 1, 1, "", "CombineMetric"], [41, 1, 1, "", "Delaunay"], [41, 1, 1, "", "Distance"], [41, 1, 1, "", "Dummy"], [41, 1, 1, "", "PairMetric"], [41, 1, 1, "", "Similarity"]], "AFL.double_agent.PairMetric.CombineMetric": [[41, 2, 1, "", "calculate"], [41, 2, 1, "", "prod"], [41, 2, 1, "", "sum"]], "AFL.double_agent.PairMetric.Delaunay": [[41, 2, 1, "", "calculate"]], "AFL.double_agent.PairMetric.Distance": [[41, 2, 1, "", "calculate"]], "AFL.double_agent.PairMetric.Dummy": [[41, 2, 1, "", "calculate"]], "AFL.double_agent.PairMetric.PairMetric": [[41, 2, 1, "", "apply_constraints"], [41, 2, 1, "", "calculate"], [41, 2, 1, "", "normalize1"], [41, 2, 1, "", "normalize2"]], "AFL.double_agent.PairMetric.Similarity": [[41, 2, 1, "", "calculate"]], "AFL.double_agent.PhaseLabeler": [[42, 1, 1, "", "AffinityPropagation"], [42, 1, 1, "", "GaussianMixtureModel"], [42, 1, 1, "", "PhaseLabeler"], [42, 1, 1, "", "SpectralClustering"]], "AFL.double_agent.PhaseLabeler.AffinityPropagation": [[42, 2, 1, "", "calculate"]], "AFL.double_agent.PhaseLabeler.GaussianMixtureModel": [[42, 2, 1, "", "calculate"]], "AFL.double_agent.PhaseLabeler.PhaseLabeler": [[42, 2, 1, "", "remap_labels_by_count"], [42, 2, 1, "", "silhouette"]], "AFL.double_agent.PhaseLabeler.SpectralClustering": [[42, 2, 1, "", "calculate"]], "AFL.double_agent.Pipeline": [[43, 1, 1, "", "Pipeline"]], "AFL.double_agent.Pipeline.Pipeline": [[43, 2, 1, "", "append"], [43, 2, 1, "", "calculate"], [43, 2, 1, "", "clear_outputs"], [43, 2, 1, "", "copy"], [43, 2, 1, "", "draw"], [43, 2, 1, "", "draw_plotly"], [43, 2, 1, "", "extend"], [43, 2, 1, "", "input_variables"], [43, 2, 1, "", "make_graph"], [43, 2, 1, "", "output_variables"], [43, 2, 1, "", "print"], [43, 2, 1, "", "print_code"], [43, 2, 1, "", "read"], [43, 2, 1, "", "search"], [43, 2, 1, "", "write"]], "AFL.double_agent.PipelineContext": [[44, 5, 1, "", "NoContextException"], [44, 1, 1, "", "PipelineContext"]], "AFL.double_agent.PipelineContext.PipelineContext": [[44, 6, 1, "", "contexts"], [44, 2, 1, "", "get_context"], [44, 2, 1, "", "get_contexts"]], "AFL.double_agent.PipelineOp": [[45, 1, 1, "", "PipelineOp"]], "AFL.double_agent.PipelineOp.PipelineOp": [[45, 2, 1, "", "add_to_dataset"], [45, 2, 1, "", "add_to_tiled"], [45, 2, 1, "", "calculate"], [45, 2, 1, "", "copy"], [45, 2, 1, "", "plot"]], "AFL.double_agent.Preprocessor": [[46, 1, 1, "", "ArrayToVars"], [46, 1, 1, "", "BarycentricToTernaryXY"], [46, 1, 1, "", "Destandardize"], [46, 1, 1, "", "Extrema"], [46, 1, 1, "", "Preprocessor"], [46, 1, 1, "", "SavgolFilter"], [46, 1, 1, "", "Standardize"], [46, 1, 1, "", "Subtract"], [46, 1, 1, "", "SubtractMin"], [46, 1, 1, "", "SympyTransform"], [46, 1, 1, "", "TernaryXYToBarycentric"], [46, 1, 1, "", "VarsToArray"], [46, 1, 1, "", "Zscale"], [46, 1, 1, "", "ZscaleError"]], "AFL.double_agent.Preprocessor.ArrayToVars": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.BarycentricToTernaryXY": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.Destandardize": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.Extrema": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.Preprocessor": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.SavgolFilter": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.Standardize": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.Subtract": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.SubtractMin": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.SympyTransform": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.TernaryXYToBarycentric": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.VarsToArray": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.Zscale": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.Preprocessor.ZscaleError": [[46, 2, 1, "", "calculate"]], "AFL.double_agent.plotting": [[49, 3, 1, "", "plot_scatter_mpl"], [49, 3, 1, "", "plot_surface_mpl"]], "AFL.double_agent.util": [[50, 3, 1, "", "extract_parameters"], [50, 3, 1, "", "listify"]], "AFL.double_agent.xarray_extensions": [[51, 1, 1, "", "AFL_DataArrayTools"], [51, 1, 1, "", "AFL_DatasetTools"], [51, 1, 1, "", "CompositionTools"], [51, 1, 1, "", "LabelTools"], [51, 1, 1, "", "ScatteringTools"], [51, 1, 1, "", "Utilities"]], "AFL.double_agent.xarray_extensions.AFL_DatasetTools": [[51, 2, 1, "", "append"]], "AFL.double_agent.xarray_extensions.CompositionTools": [[51, 2, 1, "", "add_grid"], [51, 2, 1, "", "get"], [51, 2, 1, "", "get_grid"], [51, 2, 1, "", "get_grid_old"], [51, 2, 1, "", "get_range_scaled"], [51, 2, 1, "", "get_standard_scaled"], [51, 2, 1, "", "plot_3D"], [51, 2, 1, "", "plot_mask"], [51, 2, 1, "", "plot_scatter"], [51, 2, 1, "", "plot_surface"], [51, 2, 1, "", "ternary_to_xy"]], "AFL.double_agent.xarray_extensions.LabelTools": [[51, 2, 1, "", "make_default"], [51, 2, 1, "", "make_ordinal"]], "AFL.double_agent.xarray_extensions.ScatteringTools": [[51, 2, 1, "", "clean"], [51, 2, 1, "", "plot_linlin"], [51, 2, 1, "", "plot_loglog"], [51, 2, 1, "", "plot_logwaterfall"], [51, 2, 1, "", "plot_waterfall"]], "AFL.double_agent.xarray_extensions.Utilities": [[51, 2, 1, "", "preprocess_data"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:exception", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"The": 0, "context": 0, "manag": 0, "pattern": 0, "why": 0, "stack": 0, "base": [0, 54], "design": 0, "how": [0, 6], "It": 0, "work": 0, "conceptu": 0, "benefit": 0, "approach": 0, "implement": 0, "detail": 0, "consider": 0, "advanc": 0, "altern": 0, "consid": 0, "conclus": [0, 2, 4, 5, 54, 57], "explan": 1, "topic": 1, "understand": [2, 53], "pipelin": [2, 5, 43, 48, 54, 57], "afl": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "agent": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 52], "core": [2, 27, 48], "principl": 2, "architectur": 2, "data": [2, 3, 4, 27, 54, 57], "flow": 2, "model": 2, "execut": [2, 57], "visual": 2, "inspect": 2, "append": 3, "xarrai": [3, 4], "dataset": [3, 4], "build": [4, 54], "an": 4, "from": [4, 56], "scratch": 4, "first": 4, "step": [4, 46, 53, 54], "composit": [4, 54], "simul": 4, "measur": [4, 54], "grid": 4, "save": 4, "disk": 4, "creat": 5, "new": 5, "oper": [5, 48], "To": 6, "guid": 6, "kei": 7, "featur": 7, "instal": [7, 56], "content": 7, "acquisitionfunct": [8, 32], "modul": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51], "agentcli": [9, 33], "dowshampoo_sampledriv": 10, "ei_acquisitionfunct": 11, "gaussianprocess": 12, "hscedgaussianprocess": 13, "metric": 14, "multimodal_al_sampledriv": 15, "multimodal_agentdriv": 16, "phaselabel": [17, 42], "phasemap": 18, "phasemap_panda": 19, "sans_al_sampledriv": 20, "sas_al_sampledriv": 21, "sas_agentdriv": 22, "sas_grid_al_sampledriv": 23, "saxs_al_sampledriv": 24, "ucb_acquisitionfunct": 25, "watchdog": 26, "packag": [27, 48], "compon": [27, 48], "driver": [27, 48], "autom": 27, "process": 27, "reduce_usax": 28, "util": [29, 48, 50], "vsas_nodeck_al_sampledriv": 30, "xarray_extens": [31, 51], "double_ag": [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "agentdriv": 34, "autosa": 35, "autosas_driv": 36, "boundari": 37, "extrapol": [38, 54], "gener": 39, "maskgrid": 40, "pairmetr": 41, "usag": 43, "pipelinecontext": 44, "pipelineop": 45, "preprocessor": 46, "tensorflowextrapol": 47, "apiserv": 48, "plot": 49, "refer": 52, "doubl": 52, "api": 52, "quick": 53, "start": 53, "exampl": 53, "next": [53, 54], "load": [54, 57], "input": [54, 57], "1": 54, "preprocess": 54, "2": 54, "savitski": 54, "golai": 54, "filter": 54, "calcul": 54, "similar": 54, "between": 54, "3": 54, "cluster": 54, "4": 54, "label": 54, "5": 54, "sampl": 54, "full": 54, "tutori": 55, "setup": 56, "prerequisit": 56, "basic": 56, "develop": 56, "option": 56, "depend": 56, "specif": 56, "branch": 56, "offlin": 56, "troubleshoot": 56, "quickstart": 57, "defin": 57}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"The Context Manager Pattern": [[0, "the-context-manager-pattern"]], "Why Context Managers?": [[0, "why-context-managers"]], "The Stack-Based Context Design": [[0, "the-stack-based-context-design"]], "How It Works Conceptually": [[0, "how-it-works-conceptually"]], "Benefits of the Context Manager Approach": [[0, "benefits-of-the-context-manager-approach"]], "Implementation Details and Considerations": [[0, "implementation-details-and-considerations"]], "Advanced Patterns": [[0, "advanced-patterns"]], "Alternatives Considered": [[0, "alternatives-considered"]], "Conclusion": [[0, "conclusion"], [2, "conclusion"], [4, "Conclusion"], [5, "Conclusion"], [54, "Conclusion"], [57, "Conclusion"]], "Explanations": [[1, "explanations"]], "Topics:": [[1, null]], "Understanding Pipelines in AFL-agent": [[2, "understanding-pipelines-in-afl-agent"]], "Core Principles": [[2, "core-principles"]], "Pipeline Architecture": [[2, "pipeline-architecture"]], "Data Flow Model": [[2, "data-flow-model"]], "Execution Model": [[2, "execution-model"]], "Visualization and Inspection": [[2, "visualization-and-inspection"]], "Appending Data to xarray.Datasets": [[3, "appending-data-to-xarray-datasets"]], "Build an xarray.Dataset from Scratch": [[4, "Build-an-xarray.Dataset-from-Scratch"]], "First Steps": [[4, "First-Steps"]], "Compositions": [[4, "Compositions"]], "Simulated Measurement Data": [[4, "Simulated-Measurement-Data"]], "Composition Grid": [[4, "Composition-Grid"]], "Saving the Dataset to disk": [[4, "Saving-the-Dataset-to-disk"]], "Creating a New Pipeline Operation": [[5, "Creating-a-New-Pipeline-Operation"]], "How-To Guides": [[6, "how-to-guides"]], "AFL-agent": [[7, "afl-agent"]], "Key Features": [[7, "key-features"]], "Installation": [[7, "installation"]], "Contents": [[7, "contents"]], "Contents:": [[7, null]], "AFL.agent.AcquisitionFunction module": [[8, "module-AFL.agent.AcquisitionFunction"]], "AFL.agent.AgentClient module": [[9, "afl-agent-agentclient-module"]], "AFL.agent.DowShampoo_SampleDriver module": [[10, "afl-agent-dowshampoo-sampledriver-module"]], "AFL.agent.EI_AcquisitionFunction module": [[11, "module-AFL.agent.EI_AcquisitionFunction"]], "AFL.agent.GaussianProcess module": [[12, "afl-agent-gaussianprocess-module"]], "AFL.agent.HscedGaussianProcess module": [[13, "afl-agent-hscedgaussianprocess-module"]], "AFL.agent.Metric module": [[14, "module-AFL.agent.Metric"]], "AFL.agent.Multimodal_AL_SampleDriver module": [[15, "afl-agent-multimodal-al-sampledriver-module"]], "AFL.agent.Multimodal_AgentDriver module": [[16, "afl-agent-multimodal-agentdriver-module"]], "AFL.agent.PhaseLabeler module": [[17, "module-AFL.agent.PhaseLabeler"]], "AFL.agent.PhaseMap module": [[18, "module-AFL.agent.PhaseMap"]], "AFL.agent.PhaseMap_pandas module": [[19, "module-AFL.agent.PhaseMap_pandas"]], "AFL.agent.SANS_AL_SampleDriver module": [[20, "afl-agent-sans-al-sampledriver-module"]], "AFL.agent.SAS_AL_SampleDriver module": [[21, "afl-agent-sas-al-sampledriver-module"]], "AFL.agent.SAS_AgentDriver module": [[22, "afl-agent-sas-agentdriver-module"]], "AFL.agent.SAS_Grid_AL_SampleDriver module": [[23, "afl-agent-sas-grid-al-sampledriver-module"]], "AFL.agent.SAXS_AL_SampleDriver module": [[24, "afl-agent-saxs-al-sampledriver-module"]], "AFL.agent.UCB_AcquisitionFunction module": [[25, "module-AFL.agent.UCB_AcquisitionFunction"]], "AFL.agent.WatchDog module": [[26, "afl-agent-watchdog-module"]], "AFL.agent package": [[27, "afl-agent-package"]], "Core Components": [[27, "core-components"], [48, "core-components"]], "Drivers and Automation": [[27, "drivers-and-automation"]], "Data Processing": [[27, "data-processing"]], "AFL.agent.reduce_usaxs module": [[28, "module-AFL.agent.reduce_usaxs"]], "AFL.agent.util module": [[29, "module-AFL.agent.util"]], "AFL.agent.vSAS_NoDeck_AL_SampleDriver module": [[30, "afl-agent-vsas-nodeck-al-sampledriver-module"]], "AFL.agent.xarray_extensions module": [[31, "module-AFL.agent.xarray_extensions"]], "AFL.double_agent.AcquisitionFunction module": [[32, "module-AFL.double_agent.AcquisitionFunction"]], "AFL.double_agent.AgentClient module": [[33, "afl-double-agent-agentclient-module"]], "AFL.double_agent.AgentDriver module": [[34, "afl-double-agent-agentdriver-module"]], "AFL.double_agent.AutoSAS module": [[35, "afl-double-agent-autosas-module"]], "AFL.double_agent.AutoSAS_Driver module": [[36, "afl-double-agent-autosas-driver-module"]], "AFL.double_agent.Boundary module": [[37, "module-AFL.double_agent.Boundary"]], "AFL.double_agent.Extrapolator module": [[38, "module-AFL.double_agent.Extrapolator"]], "AFL.double_agent.Generator module": [[39, "module-AFL.double_agent.Generator"]], "AFL.double_agent.MaskGrid module": [[40, "module-AFL.double_agent.MaskGrid"]], "AFL.double_agent.PairMetric module": [[41, "module-AFL.double_agent.PairMetric"]], "AFL.double_agent.PhaseLabeler module": [[42, "module-AFL.double_agent.PhaseLabeler"]], "AFL.double_agent.Pipeline module": [[43, "module-AFL.double_agent.Pipeline"]], "Usage": [[43, "usage"]], "AFL.double_agent.PipelineContext module": [[44, "module-AFL.double_agent.PipelineContext"]], "AFL.double_agent.PipelineOp module": [[45, "module-AFL.double_agent.PipelineOp"]], "AFL.double_agent.Preprocessor module": [[46, "module-AFL.double_agent.Preprocessor"]], "Steps": [[46, "steps"]], "AFL.double_agent.TensorFlowExtrapolator module": [[47, "afl-double-agent-tensorflowextrapolator-module"]], "AFL.double_agent Package": [[48, "afl-double-agent-package"]], "Pipeline Operations": [[48, "pipeline-operations"]], "Utilities": [[48, "utilities"]], "APIServer Drivers": [[48, "apiserver-drivers"]], "AFL.double_agent.plotting module": [[49, "module-AFL.double_agent.plotting"]], "AFL.double_agent.util module": [[50, "module-AFL.double_agent.util"]], "AFL.double_agent.xarray_extensions module": [[51, "module-AFL.double_agent.xarray_extensions"]], "Reference": [[52, "reference"]], "Double Agent API": [[52, "double-agent-api"]], "Agent API": [[52, "agent-api"]], "Quick Start Example": [[53, "quick-start-example"]], "Understanding the Example": [[53, "understanding-the-example"]], "Next Steps": [[53, "next-steps"]], "Building Pipelines": [[54, "Building-Pipelines"]], "Load Input Data": [[54, "Load-Input-Data"], [57, "Load-Input-Data"]], "Step 1: Composition Preprocessing": [[54, "Step-1:-Composition-Preprocessing"]], "Step 2: Savitsky-Golay Filter": [[54, "Step-2:-Savitsky-Golay-Filter"]], "Step 2: Calculate Similarity between Measurement Data": [[54, "Step-2:-Calculate-Similarity-between-Measurement-Data"]], "Step 3: Cluster Measurement Data based on Similarity": [[54, "Step-3:-Cluster-Measurement-Data-based-on-Similarity"]], "Step 4: Extrapolate Cluster Labels": [[54, "Step-4:-Extrapolate-Cluster-Labels"]], "Step 5: Calculate Next Sample": [[54, "Step-5:-Calculate-Next-Sample"]], "Full Pipeline": [[54, "Full-Pipeline"]], "Tutorials": [[55, "tutorials"]], "Setup": [[56, "setup"]], "Prerequisites": [[56, "prerequisites"]], "Basic Installation": [[56, "basic-installation"]], "Development Installation": [[56, "development-installation"]], "Optional Dependencies": [[56, "optional-dependencies"]], "Installation from a Specific Branch": [[56, "installation-from-a-specific-branch"]], "Offline Installation": [[56, "offline-installation"]], "Troubleshooting": [[56, "troubleshooting"]], "Quickstart": [[57, "Quickstart"]], "Define Pipeline": [[57, "Define-Pipeline"]], "Execute the Pipeline": [[57, "Execute-the-Pipeline"]]}, "indexentries": {"afl.agent.acquisitionfunction": [[8, "module-AFL.agent.AcquisitionFunction"]], "acquisition (class in afl.agent.acquisitionfunction)": [[8, "AFL.agent.AcquisitionFunction.Acquisition"]], "iterationcombined (class in afl.agent.acquisitionfunction)": [[8, "AFL.agent.AcquisitionFunction.IterationCombined"]], "lowestdensity (class in afl.agent.acquisitionfunction)": [[8, "AFL.agent.AcquisitionFunction.LowestDensity"]], "random (class in afl.agent.acquisitionfunction)": [[8, "AFL.agent.AcquisitionFunction.Random"]], "variance (class in afl.agent.acquisitionfunction)": [[8, "AFL.agent.AcquisitionFunction.Variance"]], "add_exclusion() (afl.agent.acquisitionfunction.acquisition method)": [[8, "AFL.agent.AcquisitionFunction.Acquisition.add_exclusion"]], "calculate_metric() (afl.agent.acquisitionfunction.iterationcombined method)": [[8, "AFL.agent.AcquisitionFunction.IterationCombined.calculate_metric"]], "calculate_metric() (afl.agent.acquisitionfunction.lowestdensity method)": [[8, "AFL.agent.AcquisitionFunction.LowestDensity.calculate_metric"]], "calculate_metric() (afl.agent.acquisitionfunction.random method)": [[8, "AFL.agent.AcquisitionFunction.Random.calculate_metric"]], "calculate_metric() (afl.agent.acquisitionfunction.variance method)": [[8, "AFL.agent.AcquisitionFunction.Variance.calculate_metric"]], "copy() (afl.agent.acquisitionfunction.acquisition method)": [[8, "AFL.agent.AcquisitionFunction.Acquisition.copy"]], "execute() (afl.agent.acquisitionfunction.acquisition method)": [[8, "AFL.agent.AcquisitionFunction.Acquisition.execute"]], "gauss2d() (in module afl.agent.acquisitionfunction)": [[8, "AFL.agent.AcquisitionFunction.gauss2d"]], "get_next_sample() (afl.agent.acquisitionfunction.acquisition method)": [[8, "AFL.agent.AcquisitionFunction.Acquisition.get_next_sample"]], "module": [[8, "module-AFL.agent.AcquisitionFunction"], [11, "module-AFL.agent.EI_AcquisitionFunction"], [14, "module-AFL.agent.Metric"], [17, "module-AFL.agent.PhaseLabeler"], [18, "module-AFL.agent.PhaseMap"], [19, "module-AFL.agent.PhaseMap_pandas"], [25, "module-AFL.agent.UCB_AcquisitionFunction"], [28, "module-AFL.agent.reduce_usaxs"], [29, "module-AFL.agent.util"], [31, "module-AFL.agent.xarray_extensions"], [32, "module-AFL.double_agent.AcquisitionFunction"], [37, "module-AFL.double_agent.Boundary"], [38, "module-AFL.double_agent.Extrapolator"], [39, "module-AFL.double_agent.Generator"], [40, "module-AFL.double_agent.MaskGrid"], [41, "module-AFL.double_agent.PairMetric"], [42, "module-AFL.double_agent.PhaseLabeler"], [43, "module-AFL.double_agent.Pipeline"], [44, "module-AFL.double_agent.PipelineContext"], [45, "module-AFL.double_agent.PipelineOp"], [46, "module-AFL.double_agent.Preprocessor"], [49, "module-AFL.double_agent.plotting"], [50, "module-AFL.double_agent.util"], [51, "module-AFL.double_agent.xarray_extensions"]], "plot() (afl.agent.acquisitionfunction.acquisition method)": [[8, "AFL.agent.AcquisitionFunction.Acquisition.plot"]], "reset_phasemap() (afl.agent.acquisitionfunction.acquisition method)": [[8, "AFL.agent.AcquisitionFunction.Acquisition.reset_phasemap"]], "reset_phasemap() (afl.agent.acquisitionfunction.iterationcombined method)": [[8, "AFL.agent.AcquisitionFunction.IterationCombined.reset_phasemap"]], "afl.agent.ei_acquisitionfunction": [[11, "module-AFL.agent.EI_AcquisitionFunction"]], "acquisition (class in afl.agent.ei_acquisitionfunction)": [[11, "AFL.agent.EI_AcquisitionFunction.Acquisition"]], "ei (class in afl.agent.ei_acquisitionfunction)": [[11, "AFL.agent.EI_AcquisitionFunction.EI"]], "add_exclusion() (afl.agent.ei_acquisitionfunction.acquisition method)": [[11, "AFL.agent.EI_AcquisitionFunction.Acquisition.add_exclusion"]], "calculate_metric() (afl.agent.ei_acquisitionfunction.ei method)": [[11, "AFL.agent.EI_AcquisitionFunction.EI.calculate_metric"]], "calculate_metric() (afl.agent.ei_acquisitionfunction.pseudoei method)": [[11, "AFL.agent.EI_AcquisitionFunction.pseudoEI.calculate_metric"]], "copy() (afl.agent.ei_acquisitionfunction.acquisition method)": [[11, "AFL.agent.EI_AcquisitionFunction.Acquisition.copy"]], "execute() (afl.agent.ei_acquisitionfunction.acquisition method)": [[11, "AFL.agent.EI_AcquisitionFunction.Acquisition.execute"]], "gauss2d() (in module afl.agent.ei_acquisitionfunction)": [[11, "AFL.agent.EI_AcquisitionFunction.gauss2d"]], "get_next_sample() (afl.agent.ei_acquisitionfunction.acquisition method)": [[11, "AFL.agent.EI_AcquisitionFunction.Acquisition.get_next_sample"]], "plot() (afl.agent.ei_acquisitionfunction.acquisition method)": [[11, "AFL.agent.EI_AcquisitionFunction.Acquisition.plot"]], "pseudoei (class in afl.agent.ei_acquisitionfunction)": [[11, "AFL.agent.EI_AcquisitionFunction.pseudoEI"]], "reset_phasemap() (afl.agent.ei_acquisitionfunction.acquisition method)": [[11, "AFL.agent.EI_AcquisitionFunction.Acquisition.reset_phasemap"]], "afl.agent.metric": [[14, "module-AFL.agent.Metric"]], "delaunay (class in afl.agent.metric)": [[14, "AFL.agent.Metric.Delaunay"]], "distance (class in afl.agent.metric)": [[14, "AFL.agent.Metric.Distance"]], "dummy (class in afl.agent.metric)": [[14, "AFL.agent.Metric.Dummy"]], "metric (class in afl.agent.metric)": [[14, "AFL.agent.Metric.Metric"]], "multimetric (class in afl.agent.metric)": [[14, "AFL.agent.Metric.MultiMetric"]], "similarity (class in afl.agent.metric)": [[14, "AFL.agent.Metric.Similarity"]], "apply_constraints() (afl.agent.metric.metric method)": [[14, "AFL.agent.Metric.Metric.apply_constraints"]], "calculate() (afl.agent.metric.delaunay method)": [[14, "AFL.agent.Metric.Delaunay.calculate"]], "calculate() (afl.agent.metric.distance method)": [[14, "AFL.agent.Metric.Distance.calculate"]], "calculate() (afl.agent.metric.dummy method)": [[14, "AFL.agent.Metric.Dummy.calculate"]], "calculate() (afl.agent.metric.metric method)": [[14, "AFL.agent.Metric.Metric.calculate"]], "calculate() (afl.agent.metric.multimetric method)": [[14, "AFL.agent.Metric.MultiMetric.calculate"]], "calculate() (afl.agent.metric.similarity method)": [[14, "AFL.agent.Metric.Similarity.calculate"]], "copy() (afl.agent.metric.metric method)": [[14, "AFL.agent.Metric.Metric.copy"]], "listify() (in module afl.agent.metric)": [[14, "AFL.agent.Metric.listify"]], "normalize1() (afl.agent.metric.metric method)": [[14, "AFL.agent.Metric.Metric.normalize1"]], "normalize2() (afl.agent.metric.metric method)": [[14, "AFL.agent.Metric.Metric.normalize2"]], "prod() (afl.agent.metric.multimetric method)": [[14, "AFL.agent.Metric.MultiMetric.prod"]], "sum() (afl.agent.metric.multimetric method)": [[14, "AFL.agent.Metric.MultiMetric.sum"]], "to_dict() (afl.agent.metric.metric method)": [[14, "AFL.agent.Metric.Metric.to_dict"]], "to_dict() (afl.agent.metric.multimetric method)": [[14, "AFL.agent.Metric.MultiMetric.to_dict"]], "update_name() (afl.agent.metric.multimetric method)": [[14, "AFL.agent.Metric.MultiMetric.update_name"]], "afl.agent.phaselabeler": [[17, "module-AFL.agent.PhaseLabeler"]], "affinitypropagation (class in afl.agent.phaselabeler)": [[17, "AFL.agent.PhaseLabeler.AffinityPropagation"]], "dbscan (class in afl.agent.phaselabeler)": [[17, "AFL.agent.PhaseLabeler.DBSCAN"]], "gaussianmixturemodel (class in afl.agent.phaselabeler)": [[17, "AFL.agent.PhaseLabeler.GaussianMixtureModel"]], "kerasclassifier (class in afl.agent.phaselabeler)": [[17, "AFL.agent.PhaseLabeler.KerasClassifier"]], "phaselabeler (class in afl.agent.phaselabeler)": [[17, "AFL.agent.PhaseLabeler.PhaseLabeler"]], "spectralclustering (class in afl.agent.phaselabeler)": [[17, "AFL.agent.PhaseLabeler.SpectralClustering"]], "copy() (afl.agent.phaselabeler.phaselabeler method)": [[17, "AFL.agent.PhaseLabeler.PhaseLabeler.copy"]], "label() (afl.agent.phaselabeler.affinitypropagation method)": [[17, "AFL.agent.PhaseLabeler.AffinityPropagation.label"]], "label() (afl.agent.phaselabeler.dbscan method)": [[17, "AFL.agent.PhaseLabeler.DBSCAN.label"]], "label() (afl.agent.phaselabeler.gaussianmixturemodel method)": [[17, "AFL.agent.PhaseLabeler.GaussianMixtureModel.label"]], "label() (afl.agent.phaselabeler.kerasclassifier method)": [[17, "AFL.agent.PhaseLabeler.KerasClassifier.label"]], "label() (afl.agent.phaselabeler.phaselabeler method)": [[17, "AFL.agent.PhaseLabeler.PhaseLabeler.label"]], "label() (afl.agent.phaselabeler.spectralclustering method)": [[17, "AFL.agent.PhaseLabeler.SpectralClustering.label"]], "remap_labels_by_count() (afl.agent.phaselabeler.phaselabeler method)": [[17, "AFL.agent.PhaseLabeler.PhaseLabeler.remap_labels_by_count"]], "silhouette() (afl.agent.phaselabeler.phaselabeler method)": [[17, "AFL.agent.PhaseLabeler.PhaseLabeler.silhouette"]], "afl.agent.phasemap": [[18, "module-AFL.agent.PhaseMap"]], "afl.agent.phasemap_pandas": [[19, "module-AFL.agent.PhaseMap_pandas"]], "phasemap (class in afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap"]], "phasemapmodel (class in afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMapModel"]], "phasemapview_mpl (class in afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMapView_MPL"]], "append() (afl.agent.phasemap_pandas.phasemap method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.append"]], "append() (afl.agent.phasemap_pandas.phasemapmodel method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMapModel.append"]], "cart2ternary() (in module afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.cart2ternary"]], "components (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.components"]], "composition_grid() (in module afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.composition_grid"]], "compositions (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.compositions"]], "copy() (afl.agent.phasemap_pandas.phasemap method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.copy"]], "format_plot_ternary() (in module afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.format_plot_ternary"]], "label_encoder (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.label_encoder"]], "labels (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.labels"]], "labels_ordinal (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.labels_ordinal"]], "lines() (afl.agent.phasemap_pandas.phasemapview_mpl method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMapView_MPL.lines"]], "load() (afl.agent.phasemap_pandas.phasemap class method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.load"]], "make_axes() (afl.agent.phasemap_pandas.phasemapview_mpl method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMapView_MPL.make_axes"]], "measurements (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.measurements"]], "ncomponents (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.ncomponents"]], "phasemap_grid_factory() (in module afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.phasemap_grid_factory"]], "plot() (afl.agent.phasemap_pandas.phasemap method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.plot"]], "project() (afl.agent.phasemap_pandas.phasemap method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.project"]], "rescale_compositions() (in module afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.rescale_compositions"]], "save() (afl.agent.phasemap_pandas.phasemap method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.save"]], "scatter() (afl.agent.phasemap_pandas.phasemapview_mpl method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMapView_MPL.scatter"]], "scatter_ternary() (afl.agent.phasemap_pandas.phasemapview_mpl method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMapView_MPL.scatter_ternary"]], "shape (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.shape"]], "size (afl.agent.phasemap_pandas.phasemap property)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.size"]], "slice() (afl.agent.phasemap_pandas.phasemap method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.slice"]], "ternary2cart() (in module afl.agent.phasemap_pandas)": [[19, "AFL.agent.PhaseMap_pandas.ternary2cart"]], "update_encoder() (afl.agent.phasemap_pandas.phasemap method)": [[19, "AFL.agent.PhaseMap_pandas.PhaseMap.update_encoder"]], "afl.agent.ucb_acquisitionfunction": [[25, "module-AFL.agent.UCB_AcquisitionFunction"]], "acquisition (class in afl.agent.ucb_acquisitionfunction)": [[25, "AFL.agent.UCB_AcquisitionFunction.Acquisition"]], "add_exclusion() (afl.agent.ucb_acquisitionfunction.acquisition method)": [[25, "AFL.agent.UCB_AcquisitionFunction.Acquisition.add_exclusion"]], "calculate_metric() (afl.agent.ucb_acquisitionfunction.pseudoucb method)": [[25, "AFL.agent.UCB_AcquisitionFunction.pseudoUCB.calculate_metric"]], "copy() (afl.agent.ucb_acquisitionfunction.acquisition method)": [[25, "AFL.agent.UCB_AcquisitionFunction.Acquisition.copy"]], "execute() (afl.agent.ucb_acquisitionfunction.acquisition method)": [[25, "AFL.agent.UCB_AcquisitionFunction.Acquisition.execute"]], "gauss2d() (in module afl.agent.ucb_acquisitionfunction)": [[25, "AFL.agent.UCB_AcquisitionFunction.gauss2d"]], "get_next_sample() (afl.agent.ucb_acquisitionfunction.acquisition method)": [[25, "AFL.agent.UCB_AcquisitionFunction.Acquisition.get_next_sample"]], "get_next_sample_passthrough() (in module afl.agent.ucb_acquisitionfunction)": [[25, "AFL.agent.UCB_AcquisitionFunction.get_next_sample_passthrough"]], "plot() (afl.agent.ucb_acquisitionfunction.acquisition method)": [[25, "AFL.agent.UCB_AcquisitionFunction.Acquisition.plot"]], "pseudoucb (class in afl.agent.ucb_acquisitionfunction)": [[25, "AFL.agent.UCB_AcquisitionFunction.pseudoUCB"]], "reset_phasemap() (afl.agent.ucb_acquisitionfunction.acquisition method)": [[25, "AFL.agent.UCB_AcquisitionFunction.Acquisition.reset_phasemap"]], "afl.agent.reduce_usaxs": [[28, "module-AFL.agent.reduce_usaxs"]], "amplifier_corrections() (in module afl.agent.reduce_usaxs)": [[28, "AFL.agent.reduce_usaxs.amplifier_corrections"]], "calc_r_q() (in module afl.agent.reduce_usaxs)": [[28, "AFL.agent.reduce_usaxs.calc_R_Q"]], "centroid() (in module afl.agent.reduce_usaxs)": [[28, "AFL.agent.reduce_usaxs.centroid"]], "reduce_uascan() (in module afl.agent.reduce_usaxs)": [[28, "AFL.agent.reduce_usaxs.reduce_uascan"]], "remove_masked_data() (in module afl.agent.reduce_usaxs)": [[28, "AFL.agent.reduce_usaxs.remove_masked_data"]], "afl.agent.util": [[29, "module-AFL.agent.util"]], "composition_grid() (in module afl.agent.util)": [[29, "AFL.agent.util.composition_grid"]], "composition_grid_ternary() (in module afl.agent.util)": [[29, "AFL.agent.util.composition_grid_ternary"]], "mpl_format_ternary() (in module afl.agent.util)": [[29, "AFL.agent.util.mpl_format_ternary"]], "ternary_to_xy() (in module afl.agent.util)": [[29, "AFL.agent.util.ternary_to_xy"]], "afl.agent.xarray_extensions": [[31, "module-AFL.agent.xarray_extensions"]], "afl_dataarraytools (class in afl.agent.xarray_extensions)": [[31, "AFL.agent.xarray_extensions.AFL_DataArrayTools"]], "afl_datasettools (class in afl.agent.xarray_extensions)": [[31, "AFL.agent.xarray_extensions.AFL_DatasetTools"]], "compositiontools (class in afl.agent.xarray_extensions)": [[31, "AFL.agent.xarray_extensions.CompositionTools"]], "labeltools (class in afl.agent.xarray_extensions)": [[31, "AFL.agent.xarray_extensions.LabelTools"]], "scatteringtools (class in afl.agent.xarray_extensions)": [[31, "AFL.agent.xarray_extensions.ScatteringTools"]], "utilities (class in afl.agent.xarray_extensions)": [[31, "AFL.agent.xarray_extensions.Utilities"]], "add_grid() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.add_grid"]], "append() (afl.agent.xarray_extensions.afl_datasettools method)": [[31, "AFL.agent.xarray_extensions.AFL_DatasetTools.append"]], "clean() (afl.agent.xarray_extensions.scatteringtools method)": [[31, "AFL.agent.xarray_extensions.ScatteringTools.clean"]], "get() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.get"]], "get_grid() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.get_grid"]], "get_grid_old() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.get_grid_old"]], "get_range_scaled() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.get_range_scaled"]], "get_standard_scaled() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.get_standard_scaled"]], "make_default() (afl.agent.xarray_extensions.labeltools method)": [[31, "AFL.agent.xarray_extensions.LabelTools.make_default"]], "make_ordinal() (afl.agent.xarray_extensions.labeltools method)": [[31, "AFL.agent.xarray_extensions.LabelTools.make_ordinal"]], "plot_3d() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.plot_3D"]], "plot_continuous() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.plot_continuous"]], "plot_discrete() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.plot_discrete"]], "plot_linlin() (afl.agent.xarray_extensions.scatteringtools method)": [[31, "AFL.agent.xarray_extensions.ScatteringTools.plot_linlin"]], "plot_loglog() (afl.agent.xarray_extensions.scatteringtools method)": [[31, "AFL.agent.xarray_extensions.ScatteringTools.plot_loglog"]], "plot_logwaterfall() (afl.agent.xarray_extensions.scatteringtools method)": [[31, "AFL.agent.xarray_extensions.ScatteringTools.plot_logwaterfall"]], "plot_mask() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.plot_mask"]], "plot_scatter() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.plot_scatter"]], "plot_surface() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.plot_surface"]], "plot_waterfall() (afl.agent.xarray_extensions.scatteringtools method)": [[31, "AFL.agent.xarray_extensions.ScatteringTools.plot_waterfall"]], "preprocess_data() (afl.agent.xarray_extensions.utilities method)": [[31, "AFL.agent.xarray_extensions.Utilities.preprocess_data"]], "ternary_to_xy() (afl.agent.xarray_extensions.compositiontools method)": [[31, "AFL.agent.xarray_extensions.CompositionTools.ternary_to_xy"]], "afl.double_agent.acquisitionfunction": [[32, "module-AFL.double_agent.AcquisitionFunction"]], "acquisitionerror": [[32, "AFL.double_agent.AcquisitionFunction.AcquisitionError"]], "acquisitionfunction (class in afl.double_agent.acquisitionfunction)": [[32, "AFL.double_agent.AcquisitionFunction.AcquisitionFunction"]], "maxvalueaf (class in afl.double_agent.acquisitionfunction)": [[32, "AFL.double_agent.AcquisitionFunction.MaxValueAF"]], "multimodalmask_maxvalueaf (class in afl.double_agent.acquisitionfunction)": [[32, "AFL.double_agent.AcquisitionFunction.MultimodalMask_MaxValueAF"]], "pseudoucb (class in afl.double_agent.acquisitionfunction)": [[32, "AFL.double_agent.AcquisitionFunction.PseudoUCB"]], "randomaf (class in afl.double_agent.acquisitionfunction)": [[32, "AFL.double_agent.AcquisitionFunction.RandomAF"]], "calculate() (afl.double_agent.acquisitionfunction.acquisitionfunction method)": [[32, "AFL.double_agent.AcquisitionFunction.AcquisitionFunction.calculate"]], "calculate() (afl.double_agent.acquisitionfunction.maxvalueaf method)": [[32, "AFL.double_agent.AcquisitionFunction.MaxValueAF.calculate"]], "calculate() (afl.double_agent.acquisitionfunction.multimodalmask_maxvalueaf method)": [[32, "AFL.double_agent.AcquisitionFunction.MultimodalMask_MaxValueAF.calculate"]], "calculate() (afl.double_agent.acquisitionfunction.pseudoucb method)": [[32, "AFL.double_agent.AcquisitionFunction.PseudoUCB.calculate"]], "calculate() (afl.double_agent.acquisitionfunction.randomaf method)": [[32, "AFL.double_agent.AcquisitionFunction.RandomAF.calculate"]], "exclude_previous_samples() (afl.double_agent.acquisitionfunction.acquisitionfunction method)": [[32, "AFL.double_agent.AcquisitionFunction.AcquisitionFunction.exclude_previous_samples"]], "get_next_samples() (afl.double_agent.acquisitionfunction.acquisitionfunction method)": [[32, "AFL.double_agent.AcquisitionFunction.AcquisitionFunction.get_next_samples"]], "afl.double_agent.boundary": [[37, "module-AFL.double_agent.Boundary"]], "boundaryscore (class in afl.double_agent.boundary)": [[37, "AFL.double_agent.Boundary.BoundaryScore"]], "concavehull (class in afl.double_agent.boundary)": [[37, "AFL.double_agent.Boundary.ConcaveHull"]], "calculate() (afl.double_agent.boundary.boundaryscore method)": [[37, "AFL.double_agent.Boundary.BoundaryScore.calculate"]], "calculate() (afl.double_agent.boundary.concavehull method)": [[37, "AFL.double_agent.Boundary.ConcaveHull.calculate"]], "afl.double_agent.extrapolator": [[38, "module-AFL.double_agent.Extrapolator"]], "dummyextrapolator (class in afl.double_agent.extrapolator)": [[38, "AFL.double_agent.Extrapolator.DummyExtrapolator"]], "extrapolator (class in afl.double_agent.extrapolator)": [[38, "AFL.double_agent.Extrapolator.Extrapolator"]], "gaussianprocessclassifier (class in afl.double_agent.extrapolator)": [[38, "AFL.double_agent.Extrapolator.GaussianProcessClassifier"]], "gaussianprocessregressor (class in afl.double_agent.extrapolator)": [[38, "AFL.double_agent.Extrapolator.GaussianProcessRegressor"]], "calculate() (afl.double_agent.extrapolator.dummyextrapolator method)": [[38, "AFL.double_agent.Extrapolator.DummyExtrapolator.calculate"]], "calculate() (afl.double_agent.extrapolator.extrapolator method)": [[38, "AFL.double_agent.Extrapolator.Extrapolator.calculate"]], "calculate() (afl.double_agent.extrapolator.gaussianprocessclassifier method)": [[38, "AFL.double_agent.Extrapolator.GaussianProcessClassifier.calculate"]], "calculate() (afl.double_agent.extrapolator.gaussianprocessregressor method)": [[38, "AFL.double_agent.Extrapolator.GaussianProcessRegressor.calculate"]], "plot() (afl.double_agent.extrapolator.extrapolator method)": [[38, "AFL.double_agent.Extrapolator.Extrapolator.plot"]], "afl.double_agent.generator": [[39, "module-AFL.double_agent.Generator"]], "barycentricgrid (class in afl.double_agent.generator)": [[39, "AFL.double_agent.Generator.BarycentricGrid"]], "cartesiangrid (class in afl.double_agent.generator)": [[39, "AFL.double_agent.Generator.CartesianGrid"]], "gaussianpoints (class in afl.double_agent.generator)": [[39, "AFL.double_agent.Generator.GaussianPoints"]], "generator (class in afl.double_agent.generator)": [[39, "AFL.double_agent.Generator.Generator"]], "calculate() (afl.double_agent.generator.barycentricgrid method)": [[39, "AFL.double_agent.Generator.BarycentricGrid.calculate"]], "calculate() (afl.double_agent.generator.cartesiangrid method)": [[39, "AFL.double_agent.Generator.CartesianGrid.calculate"]], "calculate() (afl.double_agent.generator.gaussianpoints method)": [[39, "AFL.double_agent.Generator.GaussianPoints.calculate"]], "calculate() (afl.double_agent.generator.generator method)": [[39, "AFL.double_agent.Generator.Generator.calculate"]], "afl.double_agent.maskgrid": [[40, "module-AFL.double_agent.MaskGrid"]], "maskgrid (class in afl.double_agent.maskgrid)": [[40, "AFL.double_agent.MaskGrid.MaskGrid"]], "calculate() (afl.double_agent.maskgrid.maskgrid method)": [[40, "AFL.double_agent.MaskGrid.MaskGrid.calculate"]], "afl.double_agent.pairmetric": [[41, "module-AFL.double_agent.PairMetric"]], "combinemetric (class in afl.double_agent.pairmetric)": [[41, "AFL.double_agent.PairMetric.CombineMetric"]], "delaunay (class in afl.double_agent.pairmetric)": [[41, "AFL.double_agent.PairMetric.Delaunay"]], "distance (class in afl.double_agent.pairmetric)": [[41, "AFL.double_agent.PairMetric.Distance"]], "dummy (class in afl.double_agent.pairmetric)": [[41, "AFL.double_agent.PairMetric.Dummy"]], "pairmetric (class in afl.double_agent.pairmetric)": [[41, "AFL.double_agent.PairMetric.PairMetric"]], "similarity (class in afl.double_agent.pairmetric)": [[41, "AFL.double_agent.PairMetric.Similarity"]], "apply_constraints() (afl.double_agent.pairmetric.pairmetric method)": [[41, "AFL.double_agent.PairMetric.PairMetric.apply_constraints"]], "calculate() (afl.double_agent.pairmetric.combinemetric method)": [[41, "AFL.double_agent.PairMetric.CombineMetric.calculate"]], "calculate() (afl.double_agent.pairmetric.delaunay method)": [[41, "AFL.double_agent.PairMetric.Delaunay.calculate"]], "calculate() (afl.double_agent.pairmetric.distance method)": [[41, "AFL.double_agent.PairMetric.Distance.calculate"]], "calculate() (afl.double_agent.pairmetric.dummy method)": [[41, "AFL.double_agent.PairMetric.Dummy.calculate"]], "calculate() (afl.double_agent.pairmetric.pairmetric method)": [[41, "AFL.double_agent.PairMetric.PairMetric.calculate"]], "calculate() (afl.double_agent.pairmetric.similarity method)": [[41, "AFL.double_agent.PairMetric.Similarity.calculate"]], "normalize1() (afl.double_agent.pairmetric.pairmetric method)": [[41, "AFL.double_agent.PairMetric.PairMetric.normalize1"]], "normalize2() (afl.double_agent.pairmetric.pairmetric method)": [[41, "AFL.double_agent.PairMetric.PairMetric.normalize2"]], "prod() (afl.double_agent.pairmetric.combinemetric method)": [[41, "AFL.double_agent.PairMetric.CombineMetric.prod"]], "sum() (afl.double_agent.pairmetric.combinemetric method)": [[41, "AFL.double_agent.PairMetric.CombineMetric.sum"]], "afl.double_agent.phaselabeler": [[42, "module-AFL.double_agent.PhaseLabeler"]], "affinitypropagation (class in afl.double_agent.phaselabeler)": [[42, "AFL.double_agent.PhaseLabeler.AffinityPropagation"]], "gaussianmixturemodel (class in afl.double_agent.phaselabeler)": [[42, "AFL.double_agent.PhaseLabeler.GaussianMixtureModel"]], "phaselabeler (class in afl.double_agent.phaselabeler)": [[42, "AFL.double_agent.PhaseLabeler.PhaseLabeler"]], "spectralclustering (class in afl.double_agent.phaselabeler)": [[42, "AFL.double_agent.PhaseLabeler.SpectralClustering"]], "calculate() (afl.double_agent.phaselabeler.affinitypropagation method)": [[42, "AFL.double_agent.PhaseLabeler.AffinityPropagation.calculate"]], "calculate() (afl.double_agent.phaselabeler.gaussianmixturemodel method)": [[42, "AFL.double_agent.PhaseLabeler.GaussianMixtureModel.calculate"]], "calculate() (afl.double_agent.phaselabeler.spectralclustering method)": [[42, "AFL.double_agent.PhaseLabeler.SpectralClustering.calculate"]], "remap_labels_by_count() (afl.double_agent.phaselabeler.phaselabeler method)": [[42, "AFL.double_agent.PhaseLabeler.PhaseLabeler.remap_labels_by_count"]], "silhouette() (afl.double_agent.phaselabeler.phaselabeler method)": [[42, "AFL.double_agent.PhaseLabeler.PhaseLabeler.silhouette"]], "afl.double_agent.pipeline": [[43, "module-AFL.double_agent.Pipeline"]], "pipeline (class in afl.double_agent.pipeline)": [[43, "AFL.double_agent.Pipeline.Pipeline"]], "append() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.append"]], "calculate() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.calculate"]], "clear_outputs() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.clear_outputs"]], "copy() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.copy"]], "draw() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.draw"]], "draw_plotly() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.draw_plotly"]], "extend() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.extend"]], "input_variables() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.input_variables"]], "make_graph() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.make_graph"]], "output_variables() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.output_variables"]], "print() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.print"]], "print_code() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.print_code"]], "read() (afl.double_agent.pipeline.pipeline static method)": [[43, "AFL.double_agent.Pipeline.Pipeline.read"]], "search() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.search"]], "write() (afl.double_agent.pipeline.pipeline method)": [[43, "AFL.double_agent.Pipeline.Pipeline.write"]], "afl.double_agent.pipelinecontext": [[44, "module-AFL.double_agent.PipelineContext"]], "nocontextexception": [[44, "AFL.double_agent.PipelineContext.NoContextException"]], "pipelinecontext (class in afl.double_agent.pipelinecontext)": [[44, "AFL.double_agent.PipelineContext.PipelineContext"]], "contexts (afl.double_agent.pipelinecontext.pipelinecontext attribute)": [[44, "AFL.double_agent.PipelineContext.PipelineContext.contexts"]], "get_context() (afl.double_agent.pipelinecontext.pipelinecontext class method)": [[44, "AFL.double_agent.PipelineContext.PipelineContext.get_context"]], "get_contexts() (afl.double_agent.pipelinecontext.pipelinecontext class method)": [[44, "AFL.double_agent.PipelineContext.PipelineContext.get_contexts"]], "afl.double_agent.pipelineop": [[45, "module-AFL.double_agent.PipelineOp"]], "pipelineop (class in afl.double_agent.pipelineop)": [[45, "AFL.double_agent.PipelineOp.PipelineOp"]], "add_to_dataset() (afl.double_agent.pipelineop.pipelineop method)": [[45, "AFL.double_agent.PipelineOp.PipelineOp.add_to_dataset"]], "add_to_tiled() (afl.double_agent.pipelineop.pipelineop method)": [[45, "AFL.double_agent.PipelineOp.PipelineOp.add_to_tiled"]], "calculate() (afl.double_agent.pipelineop.pipelineop method)": [[45, "AFL.double_agent.PipelineOp.PipelineOp.calculate"]], "copy() (afl.double_agent.pipelineop.pipelineop method)": [[45, "AFL.double_agent.PipelineOp.PipelineOp.copy"]], "plot() (afl.double_agent.pipelineop.pipelineop method)": [[45, "AFL.double_agent.PipelineOp.PipelineOp.plot"]], "afl.double_agent.preprocessor": [[46, "module-AFL.double_agent.Preprocessor"]], "arraytovars (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.ArrayToVars"]], "barycentrictoternaryxy (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.BarycentricToTernaryXY"]], "destandardize (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.Destandardize"]], "extrema (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.Extrema"]], "preprocessor (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.Preprocessor"]], "savgolfilter (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.SavgolFilter"]], "standardize (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.Standardize"]], "subtract (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.Subtract"]], "subtractmin (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.SubtractMin"]], "sympytransform (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.SympyTransform"]], "ternaryxytobarycentric (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.TernaryXYToBarycentric"]], "varstoarray (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.VarsToArray"]], "zscale (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.Zscale"]], "zscaleerror (class in afl.double_agent.preprocessor)": [[46, "AFL.double_agent.Preprocessor.ZscaleError"]], "calculate() (afl.double_agent.preprocessor.arraytovars method)": [[46, "AFL.double_agent.Preprocessor.ArrayToVars.calculate"]], "calculate() (afl.double_agent.preprocessor.barycentrictoternaryxy method)": [[46, "AFL.double_agent.Preprocessor.BarycentricToTernaryXY.calculate"]], "calculate() (afl.double_agent.preprocessor.destandardize method)": [[46, "AFL.double_agent.Preprocessor.Destandardize.calculate"]], "calculate() (afl.double_agent.preprocessor.extrema method)": [[46, "AFL.double_agent.Preprocessor.Extrema.calculate"]], "calculate() (afl.double_agent.preprocessor.preprocessor method)": [[46, "AFL.double_agent.Preprocessor.Preprocessor.calculate"]], "calculate() (afl.double_agent.preprocessor.savgolfilter method)": [[46, "AFL.double_agent.Preprocessor.SavgolFilter.calculate"]], "calculate() (afl.double_agent.preprocessor.standardize method)": [[46, "AFL.double_agent.Preprocessor.Standardize.calculate"]], "calculate() (afl.double_agent.preprocessor.subtract method)": [[46, "AFL.double_agent.Preprocessor.Subtract.calculate"]], "calculate() (afl.double_agent.preprocessor.subtractmin method)": [[46, "AFL.double_agent.Preprocessor.SubtractMin.calculate"]], "calculate() (afl.double_agent.preprocessor.sympytransform method)": [[46, "AFL.double_agent.Preprocessor.SympyTransform.calculate"]], "calculate() (afl.double_agent.preprocessor.ternaryxytobarycentric method)": [[46, "AFL.double_agent.Preprocessor.TernaryXYToBarycentric.calculate"]], "calculate() (afl.double_agent.preprocessor.varstoarray method)": [[46, "AFL.double_agent.Preprocessor.VarsToArray.calculate"]], "calculate() (afl.double_agent.preprocessor.zscale method)": [[46, "AFL.double_agent.Preprocessor.Zscale.calculate"]], "calculate() (afl.double_agent.preprocessor.zscaleerror method)": [[46, "AFL.double_agent.Preprocessor.ZscaleError.calculate"]], "afl.double_agent.plotting": [[49, "module-AFL.double_agent.plotting"]], "plot_scatter_mpl() (in module afl.double_agent.plotting)": [[49, "AFL.double_agent.plotting.plot_scatter_mpl"]], "plot_surface_mpl() (in module afl.double_agent.plotting)": [[49, "AFL.double_agent.plotting.plot_surface_mpl"]], "afl.double_agent.util": [[50, "module-AFL.double_agent.util"]], "extract_parameters() (in module afl.double_agent.util)": [[50, "AFL.double_agent.util.extract_parameters"]], "listify() (in module afl.double_agent.util)": [[50, "AFL.double_agent.util.listify"]], "afl.double_agent.xarray_extensions": [[51, "module-AFL.double_agent.xarray_extensions"]], "afl_dataarraytools (class in afl.double_agent.xarray_extensions)": [[51, "AFL.double_agent.xarray_extensions.AFL_DataArrayTools"]], "afl_datasettools (class in afl.double_agent.xarray_extensions)": [[51, "AFL.double_agent.xarray_extensions.AFL_DatasetTools"]], "compositiontools (class in afl.double_agent.xarray_extensions)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools"]], "labeltools (class in afl.double_agent.xarray_extensions)": [[51, "AFL.double_agent.xarray_extensions.LabelTools"]], "scatteringtools (class in afl.double_agent.xarray_extensions)": [[51, "AFL.double_agent.xarray_extensions.ScatteringTools"]], "utilities (class in afl.double_agent.xarray_extensions)": [[51, "AFL.double_agent.xarray_extensions.Utilities"]], "add_grid() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.add_grid"]], "append() (afl.double_agent.xarray_extensions.afl_datasettools method)": [[51, "AFL.double_agent.xarray_extensions.AFL_DatasetTools.append"]], "clean() (afl.double_agent.xarray_extensions.scatteringtools method)": [[51, "AFL.double_agent.xarray_extensions.ScatteringTools.clean"]], "get() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.get"]], "get_grid() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.get_grid"]], "get_grid_old() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.get_grid_old"]], "get_range_scaled() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.get_range_scaled"]], "get_standard_scaled() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.get_standard_scaled"]], "make_default() (afl.double_agent.xarray_extensions.labeltools method)": [[51, "AFL.double_agent.xarray_extensions.LabelTools.make_default"]], "make_ordinal() (afl.double_agent.xarray_extensions.labeltools method)": [[51, "AFL.double_agent.xarray_extensions.LabelTools.make_ordinal"]], "plot_3d() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.plot_3D"]], "plot_linlin() (afl.double_agent.xarray_extensions.scatteringtools method)": [[51, "AFL.double_agent.xarray_extensions.ScatteringTools.plot_linlin"]], "plot_loglog() (afl.double_agent.xarray_extensions.scatteringtools method)": [[51, "AFL.double_agent.xarray_extensions.ScatteringTools.plot_loglog"]], "plot_logwaterfall() (afl.double_agent.xarray_extensions.scatteringtools method)": [[51, "AFL.double_agent.xarray_extensions.ScatteringTools.plot_logwaterfall"]], "plot_mask() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.plot_mask"]], "plot_scatter() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.plot_scatter"]], "plot_surface() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.plot_surface"]], "plot_waterfall() (afl.double_agent.xarray_extensions.scatteringtools method)": [[51, "AFL.double_agent.xarray_extensions.ScatteringTools.plot_waterfall"]], "preprocess_data() (afl.double_agent.xarray_extensions.utilities method)": [[51, "AFL.double_agent.xarray_extensions.Utilities.preprocess_data"]], "ternary_to_xy() (afl.double_agent.xarray_extensions.compositiontools method)": [[51, "AFL.double_agent.xarray_extensions.CompositionTools.ternary_to_xy"]]}})